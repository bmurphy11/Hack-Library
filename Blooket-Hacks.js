//Multitool (credit McKnight) 
javascript:(function()%7B%2F**%0A* %40license StewartPrivateLicense-2.0.0%0A* Copyright (c) Aerell McKnight 2023%0A*%0A* You may not reproduce or distribute any code inside this file without the licenser's permission.%0A* You may not copy%2C modify%2C steal%2C skid%2C or recreate any of the code inside this file.%0A* You may not under any circumstance republish any code from this file as your own.%0A* %0A* ALL TERMS STATED IN THE LINK BELOW APPLY ASWELL%0A* https%3A%2F%2Fgithub.com%2FMinesraft2%2FBlooket-Cheats%2Fblob%2Fmain%2FLICENSE%0A*%2F%0A%0A%2F* THE UPDATE CHECKER IS ADDED DURING COMMIT PREP%2C THERE MAY BE REDUNDANT CODE%2C DO NOT TOUCH *%2F%0A%0A%2F* Update Checker start *%2F%0A(async () %3D> %7B %2F* This is to prevent "identifier i is already declared errors" *%2F%0A    let i %3D document.createElement('iframe')%3B%0A    document.body.append(i)%3B%0A    window.confirm %3D i.contentWindow.confirm.bind(window)%3B%0A    i.remove()%3B%0A    Object.values(webpackJsonp.push(%5B%5B%5D%2C %7B %5B''%5D%3A (_%2C a%2C b) %3D> %7B a.cache %3D b.c %7D%2C %7D%2C %5B%5B''%5D%5D%5D).cache).find(x %3D> x.exports%3F.a%3F.get).exports.a.get("https%3A%2F%2F" %2B (location.host.startsWith("dashboard") %3F location.host %3A "play.blooket.com") %2B "%2Fapi%2Fgames%3FgameId%3D6368436a976422d8a3f70cd7").then(x %3D> parseInt(%600%24%7Bx.data.questions.find(x %3D> x.question %3D%3D "..%2Fcheats%2Fgui.js")%3F.answers%3F.%5B0%5D%7D%60)).then(async x %3D> %7B%0A        if (1676327571191 > x %7C%7C confirm("This cheat is outdated and might be bugged%2C would you still like to run it%3F You can find regularly updated cheats here https%3A%2F%2Fgithub.com%2FMinesraft2%2FBlooket-Cheats")) %7B%0A            %2F* Update Checker end *%2F%0A            %2F* %2F%2F (() %3D> %7B *%2F%0A            const addStyles %3D (element%2C styles %3D %7B%7D) %3D> Object.entries(styles).forEach((%5Bkey%2C value%5D) %3D> element.style%5Bkey%5D %3D value)%3B%0A            const animations %3D document.createElement("style")%3B%0A            animations.innerHTML %3D %60.cheatButton%7Bposition%3Arelative%3Bdisplay%3Aflex%3Bflex-direction%3Arow%3Balign-items%3Acenter%3Bmin-height%3A40px%3Bwidth%3A190px%3Bmargin%3A4px 0%3Bpadding-left%3A30px%3Bbox-sizing%3Aborder-box%3Bcursor%3Apointer%3Buser-select%3Anone%3Btext-decoration%3Anone%3Bborder-top-right-radius%3A5px%3Bborder-bottom-right-radius%3A5px%3Bbackground-color%3Atransparent%3Bcolor%3A%23fff%3Btransition%3A.2s linear%3Bfont-size%3A20px%3Bfont-weight%3A400%3Bfont-family%3ANunito%3Btext-decoration-thickness%3Aauto%7D.cheatButton%3Ahover%7Bbackground-color%3A%23fff%3Bcolor%3A%239a49aa%7D.cheatInput%2Cselect%7Bmin-width%3A200px%3Bpadding-block%3A5px%3Bfont-family%3ANunito%2Csans-serif%3Bfont-weight%3A400%3Bfont-size%3A16px%3Bbackground-color%3A%237a039d%3Bbox-shadow%3Ainset 0 6px rgb(0 0 0 %2F 20%25)%3Bmargin%3A3px%3Bcolor%3A%23fff%7D.bigButton%3Ahover%7Bfilter%3Abrightness(110%25)%3Btransform%3AtranslateY(-2px)%7D.bigButton%3Aactive%7Btransform%3AtranslateY(2px)%7D.cheatList%3A%3A-webkit-scrollbar%7Bwidth%3A10px%7D.cheatList%3A%3A-webkit-scrollbar-track%7Bbackground%3A%239a49aa%7D.cheatList%3A%3A-webkit-scrollbar-thumb%7Bbackground%3A%237b3a88%7D.cheatList%3A%3A-webkit-scrollbar-thumb%3Ahover%7Bbackground%3A%23700087%7D.scriptButton%3Ahover%7Bfilter%3Abrightness(120%25)%7D.cheatInput%7Bmax-width%3A200px%3Bborder%3Anone%3Bborder-radius%3A7px%3Bcaret-color%3Awhite%7D.cheatInput%3A%3Aplaceholder%7Bcolor%3A%23fff%7D.cheatInput%3Afocus%2Cselect%3Afocus%7Boutline%3A0%7D.cheatInput%3A%3A-webkit-inner-spin-button%2C.cheatInput%3A%3A-webkit-outer-spin-button%7B-webkit-appearance%3Anone%3Bmargin%3A0%7D.cheatInput%5Btype%3Dnumber%5D%7B-moz-appearance%3Atextfield%7Dselect%7Bborder%3Anone%3Bborder-radius%3A7px%3Btext-align%3Acenter%7D%60%3B%0A            %0A            %2F* %2F%2F https%3A%2F%2Fdashboard.blooket.com%2F65a43218fd1cabe52bdf1cda34613e9e.png *%2F%0A            const guiWrapper %3D document.createElement("div")%3B%0A            guiWrapper.append(animations)%3B%0A            guiWrapper.id %3D "JODGUI"%3B%0A            addStyles(guiWrapper%2C %7B%0A                top%3A %60%24%7B(Math.max(10%2C window.innerHeight%2F*  %2F (.75 %2F window.devicePixelRatio) *%2F - 600) %2F 2)%7Dpx%60%2C%0A                left%3A %60%24%7B(Math.max(10%2C window.innerWidth%2F*  %2F (.75 %2F window.devicePixelRatio) *%2F - 1000) %2F 2)%7Dpx%60%2C%0A                position%3A "fixed"%2C height%3A "80%25"%2C width%3A "80%25"%2C maxHeight%3A "600px"%2C maxWidth%3A "1000px"%2C zIndex%3A "999"%2C display%3A "block"%0A            %7D)%3B%0A            %2F* %2F%2F guiWrapper.style.zoom %3D .75 %2F window.devicePixelRatio%3B *%2F%0A            %2F* %2F%2F window.onresize %3D () %3D> %7B *%2F%0A            %2F* %2F%2F     guiWrapper.style.zoom %3D .75 %2F window.devicePixelRatio%3B *%2F%0A            %0A            %2F* %2F%2F %7D *%2F%0A            %2F* %2F%2F guiWrapper.style.border %3D "3px solid %233a3a3a"%3B *%2F%0A            %2F* %2F%2F guiWrapper.style.borderRadius %3D "20px"%3B *%2F%0A            %0A            const gui %3D document.createElement("div")%3B%0A            %0A            addStyles(gui%2C %7B%0A                width%3A "100%25"%2C%0A                height%3A "100%25"%2C%0A                position%3A "relative"%2C%0A                outline%3A "3px solid %233a3a3a"%2C%0A                borderRadius%3A "15px"%2C%0A                overflow%3A "hidden"%0A            %7D)%3B%0A            guiWrapper.appendChild(gui)%3B%0A            %0A            const background %3D document.createElement("div")%3B%0A            addStyles(background%2C %7B%0A                display%3A "block"%2C%0A                top%3A "0"%2C%0A                left%3A "0"%2C%0A                height%3A "100%25"%2C%0A                overflowY%3A "hidden"%2C%0A                overflowX%3A "hidden"%2C%0A                position%3A "absolute"%2C%0A                width%3A "100%25"%2C%0A                backgroundColor%3A "rgb(11%2C 194%2C 207)"%2C%0A                visibility%3A "visible"%0A            %7D)%3B%0A            %0A            const backgroundImage %3D document.createElement("div")%3B%0A            addStyles(backgroundImage%2C %7B%0A                backgroundImage%3A "url(https%3A%2F%2Fac.blooket.com%2Fdashboard%2F65a43218fd1cabe52bdf1cda34613e9e.png)"%2C%0A                display%3A "block"%2C%0A                height%3A "200%25"%2C%0A                position%3A "absolute"%2C%0A                width%3A "200%25"%2C%0A                top%3A "50%25"%2C%0A                left%3A "50%25"%2C%0A                backgroundPositionX%3A "-100px"%2C%0A                backgroundPositionY%3A "-100px"%2C%0A                backgroundSize%3A "550px"%2C%0A                visibility%3A "visible"%2C%0A                transform%3A "translate(-50%25%2C-50%25) rotate(15deg)"%2C%0A                appearance%3A "none"%2C%0A                opacity%3A "0.175"%0A            %7D)%3B%0A            %0A            background.appendChild(backgroundImage)%3B%0A            %0A            gui.appendChild(background)%3B%0A            %0A            %5B...document.querySelectorAll("%23JODGUI")%5D.forEach(x %3D> x.remove())%3B%0A            document.body.append(guiWrapper)%3B%0A            %0A            const controls %3D document.createElement("div")%3B%0A            addStyles(controls%2C %7B%0A                display%3A "flex"%2C%0A                alignItems%3A "center"%2C%0A                justifyContent%3A "center"%2C%0A                paddingBottom%3A "8px"%2C%0A                position%3A "absolute"%2C%0A                left%3A "220px"%2C%0A                top%3A "0"%2C%0A                visibility%3A "visible"%2C%0A                zIndex%3A "5"%2C%0A                height%3A "52px"%2C%0A                width%3A "335px"%2C%0A                backgroundColor%3A "%239a49aa"%2C%0A                boxShadow%3A "inset 0 -8px rgb(0 0 0 %2F 20%25)%2C 0 0 4px rgb(0 0 0 %2F 15%25)"%2C%0A                borderBottomRightRadius%3A "10px"%2C%0A                color%3A "white"%2C%0A                fontFamily%3A "Nunito%2C sans-serif"%2C%0A                fontWeight%3A "700"%2C%0A                userSelect%3A "text"%0A            %7D)%3B%0A            controls.innerHTML %3D "Ctrl %2B E to hide %7C Ctrl %2B X for quick disable<br>Click and drag here"%3B%0A            %0A            gui.appendChild(controls)%3B%0A            %0A            const credits %3D document.createElement("div")%3B%0A            addStyles(credits%2C %7B%0A                display%3A "flex"%2C%0A                alignItems%3A "center"%2C%0A                justifyContent%3A "center"%2C%0A                paddingBottom%3A "8px"%2C%0A            %2F* %2F%2F flexDirection%3A "row"%2C *%2F%0A                position%3A "absolute"%2C%0A                right%3A "0"%2C%0A                top%3A "0"%2C%0A                visibility%3A "visible"%2C%0A                zIndex%3A "5"%2C%0A                height%3A "47px"%2C%0A                width%3A "280px"%2C%0A                backgroundColor%3A "%239a49aa"%2C%0A                boxShadow%3A "inset 0 -8px rgb(0 0 0 %2F 20%25)%2C 0 0 4px rgb(0 0 0 %2F 15%25)"%2C%0A                borderBottomLeftRadius%3A "10px"%2C%0A                color%3A "white"%2C%0A                fontFamily%3A "Nunito%2C sans-serif"%2C%0A                fontWeight%3A "700"%2C%0A                userSelect%3A "text"%0A            %7D)%3B%0A            credits.innerHTML %3D"Created by OneMinesraft2%235372%2C Github Repo By SkyeGamesYT. All Credits to OneMinesraft2%235372"%3B%0A            %0A            gui.appendChild(credits)%3B%0A            %0A            const controlButtons %3D document.createElement("div")%3B%0A            addStyles(controlButtons%2C %7B%0A                display%3A "flex"%2C%0A                alignItems%3A "center"%2C%0A                justifyContent%3A "center"%2C%0A            %2F* %2F%2F paddingBottom%3A "8px"%2C *%2F%0A            %2F* %2F%2F flexDirection%3A "row"%2C *%2F%0A                position%3A "absolute"%2C%0A                right%3A "0"%2C%0A                bottom%3A "0"%2C%0A                visibility%3A "visible"%2C%0A                zIndex%3A "5"%2C%0A                height%3A "55px"%2C%0A                width%3A "165px"%2C%0A                background%3A "%23none"%2C%0A            %2F* %2F%2F boxShadow%3A "inset 0 -8px rgb(0 0 0 %2F 20%25)%2C 0 0 4px rgb(0 0 0 %2F 15%25)"%2C *%2F%0A                borderLeft%3A "3px solid black"%2C%0A                borderTop%3A "3px solid black"%2C%0A                borderTopLeftRadius%3A "10px"%2C%0A                color%3A "white"%2C%0A                fontFamily%3A "Nunito%2C sans-serif"%2C%0A                fontWeight%3A "700"%2C%0A                userSelect%3A "text"%2C%0A                overflow%3A "hidden"%0A            %7D)%3B%0A            %0A            const dragButton %3D document.createElement("button")%3B%0A            addStyles(dragButton%2C %7B%0A                height%3A "55px"%2C%0A                width%3A "55px"%2C%0A                fontFamily%3A "Nunito"%2C%0A                color%3A "white"%2C%0A                backgroundColor%3A "%2300a0ff"%2C%0A                border%3A "none"%2C%0A                fontSize%3A "2rem"%2C%0A            %2F* %2F%2F fontWeight%3A "bolder"%2C *%2F%0A                cursor%3A "move"%0A            %7D)%3B%0A            dragButton.innerHTML %3D "%E2%9C%A5"%3B%0A            controlButtons.appendChild(dragButton)%3B%0A            %0A            const hideButton %3D document.createElement("button")%3B%0A            %2F* %2F%2F hideButton.id %3D "hide"%3B *%2F%0A            addStyles(hideButton%2C %7B%0A                height%3A "55px"%2C%0A                width%3A "55px"%2C%0A                fontFamily%3A "Nunito"%2C%0A                color%3A "white"%2C%0A                backgroundColor%3A "grey"%2C%0A                border%3A "none"%2C%0A                fontSize%3A "2rem"%2C%0A                fontWeight%3A "bolder"%2C%0A                cursor%3A "pointer"%0A            %7D)%3B%0A            hideButton.innerHTML %3D "-"%3B%0A            let hidden %3D false%3B%0A            hideButton.onclick %3D () %3D> %7B%0A                for (let child of %5B...gui.children%5D) %7B%0A                    if (child %3D%3D controlButtons) continue%3B%0A                    if (hidden) child.style.display %3D child.style._display%3B%0A                    else %7B%0A                        child.style._display %3D child.style.display%3B%0A                        child.style.display %3D "none"%3B%0A                    %7D%0A                %7D%3B%0A                gui.style.height %3D hidden %3F "100%25" %3A "55px"%3B%0A                gui.style.width %3D hidden %3F "100%25" %3A "165px"%3B%0A                guiWrapper.style.top %3D %60%24%7BparseInt(guiWrapper.style.top) %2B (guiWrapper.offsetHeight - 55) * (hidden %3F -1 %3A 1)%7Dpx%60%3B%0A                guiWrapper.style.left %3D %60%24%7BparseInt(guiWrapper.style.left) %2B (guiWrapper.offsetWidth - 165) * (hidden %3F -1 %3A 1)%7Dpx%60%3B%0A                hidden %3D !hidden%3B%0A            %7D%3B%0A            controlButtons.appendChild(hideButton)%3B%0A            %0A            const closeButton %3D document.createElement("button")%3B%0A            addStyles(closeButton%2C %7B%0A                height%3A "55px"%2C%0A                width%3A "55px"%2C%0A                fontFamily%3A "Nunito"%2C%0A                color%3A "white"%2C%0A                backgroundColor%3A "red"%2C%0A                border%3A "none"%2C%0A                fontSize%3A "2rem"%2C%0A                fontWeight%3A "bolder"%2C%0A                cursor%3A "pointer"%0A            %7D)%3B%0A            closeButton.innerHTML %3D "X"%3B%0A            closeButton.onclick %3D close%3B%0A            controlButtons.appendChild(closeButton)%3B%0A            %0A            gui.appendChild(controlButtons)%3B%0A            %0A            const cheatContainer %3D document.createElement("div")%3B%0A            cheatContainer.classList.add("cheatList")%3B%0A            addStyles(cheatContainer%2C %7B%0A                overflowY%3A "scroll"%2C%0A                backgroundColor%3A "%239a49aa"%2C%0A                boxShadow%3A "inset -10px 0 rgb(0 0 0 %2F 20%25)"%2C%0A                zIndex%3A "5"%2C%0A                width%3A "220px"%2C%0A                position%3A "absolute"%2C%0A                top%3A "0"%2C%0A                left%3A "0"%2C%0A                height%3A "100%25"%2C%0A                fontFamily%3A "Titan One"%2C%0A                color%3A "white"%2C%0A                fontSize%3A "40px"%2C%0A                textAlign%3A "center"%2C%0A                paddingTop%3A "20px"%2C%0A                userSelect%3A "none"%2C%0A                padding%3A "20px 10px 20px 0"%2C%0A                boxSizing%3A "border-box"%2C%0A                display%3A "flex"%2C%0A                flexDirection%3A "column"%0A            %7D)%3B%0A            cheatContainer.innerHTML %3D "<span style%3D%5C"text-shadow%3A 1px 1px rgb(0 0 0 %2F 40%25)%5C">Cheats<%2Fspan>"%3B%0A            %0A            const discord %3D document.createElement("a")%3B%0A            discord.classList.add("bigButton")%3B%0A            addStyles(discord%2C %7B%0A                cursor%3A "pointer"%2C%0A                display%3A "block"%2C%0A                fontFamily%3A "Titan One"%2C%0A                margin%3A "20px auto 10px"%2C%0A                position%3A "relative"%2C%0A                transition%3A ".25s"%2C%0A                textDecoration%3A "none"%2C%0A                userSelect%3A "none"%2C%0A                visibility%3A "visible"%0A            %7D)%3B%0A            %0A            discord.target %3D "_blank"%3B%0A            discord.relList.add("noopener")%3B%0A            discord.relList.add("noreferrer")%3B%0A            discord.href %3D "https%3A%2F%2Fdiscord.gg%2FQznzysxvX4"%3B%0A            discord.innerHTML %3D (%60%0A                    <div style%3D"background%3A rgba(0%2C0%2C0%2C.25)%3B border-radius%3A 5px%3B display%3A block%3B width%3A 100%25%3B height%3A 100%25%3B left%3A 0%3B top%3A 0%3B position%3A absolute%3B transform%3A translateY(2px)%3B width%3A 100%25%3B transition%3A transform .6s cubic-bezier(.3%2C.7%2C.4%2C1)"><%2Fdiv>%0A                    <div style%3D"background-color%3A rgb(11%2C 194%2C 207)%3B filter%3A brightness(.7)%3B position%3A absolute%3B top%3A 0%3B left%3A 0%3B width%3A 100%25%3B height%3A 100%25%3B border-radius%3A 5px%3B"><%2Fdiv>%0A                    <div style%3D"font-weight%3A 400%3B background-color%3A rgb(11%2C 194%2C 207)%3B color%3A white%3B display%3A flex%3B flex-direction%3A row%3B align-items%3A center%3B justify-content%3A center%3B text-align%3A center%3B padding%3A 5px%3B border-radius%3A 5px%3B transform%3A translateY(-4px)%3B transition%3A transform .6s cubic-bezier(.3%2C.7%2C.4%2C1)">%0A                    <div style%3D"font-family%3A Titan One%2C sans-serif%3B color%3A white%3B font-size%3A 26px%3B text-shadow%3A 2px 2px rgb(0 0 0 %2F 20%25)%3B height%3A 40px%3B padding%3A 0 15px%3B display%3A flex%3B flex-direction%3A row%3B align-items%3A center%3B justify-content%3A center">%0A                        <svg style%3D"filter%3A drop-shadow(2px 2px 0 rgb(0 0 0 %2F 20%25))" xmlns%3D"http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg" width%3D"35" height%3D"35" fill%3D"currentColor" viewBox%3D"0 -1 21 16">%0A                            <path d%3D"M13.545 2.907a13.227 13.227 0 0 0-3.257-1.011.05.05 0 0 0-.052.025c-.141.25-.297.577-.406.833a12.19 12.19 0 0 0-3.658 0 8.258 8.258 0 0 0-.412-.833.051.051 0 0 0-.052-.025c-1.125.194-2.22.534-3.257 1.011a.041.041 0 0 0-.021.018C.356 6.024-.213 9.047.066 12.032c.001.014.01.028.021.037a13.276 13.276 0 0 0 3.995 2.02.05.05 0 0 0 .056-.019c.308-.42.582-.863.818-1.329a.05.05 0 0 0-.01-.059.051.051 0 0 0-.018-.011 8.875 8.875 0 0 1-1.248-.595.05.05 0 0 1-.02-.066.051.051 0 0 1 .015-.019c.084-.063.168-.129.248-.195a.05.05 0 0 1 .051-.007c2.619 1.196 5.454 1.196 8.041 0a.052.052 0 0 1 .053.007c.08.066.164.132.248.195a.051.051 0 0 1-.004.085 8.254 8.254 0 0 1-1.249.594.05.05 0 0 0-.03.03.052.052 0 0 0 .003.041c.24.465.515.909.817 1.329a.05.05 0 0 0 .056.019 13.235 13.235 0 0 0 4.001-2.02.049.049 0 0 0 .021-.037c.334-3.451-.559-6.449-2.366-9.106a.034.034 0 0 0-.02-.019Zm-8.198 7.307c-.789 0-1.438-.724-1.438-1.612 0-.889.637-1.613 1.438-1.613.807 0 1.45.73 1.438 1.613 0 .888-.637 1.612-1.438 1.612Zm5.316 0c-.788 0-1.438-.724-1.438-1.612 0-.889.637-1.613 1.438-1.613.807 0 1.451.73 1.438 1.613 0 .888-.631 1.612-1.438 1.612Z"%2F>%0A                        <%2Fsvg>%0A                        Discord%0A                    <%2Fdiv>%0A                    <%2Fdiv>%0A                    %60)%3B%0A            %0A            cheatContainer.appendChild(discord)%3B%0A            %0A            gui.appendChild(cheatContainer)%3B%0A            %0A            const content %3D document.createElement("div")%3B%0A            addStyles(content%2C %7B%0A                position%3A "absolute"%2C%0A                bottom%3A "50px"%2C%0A                right%3A "50px"%2C%0A                left%3A "270px"%2C%0A                top%3A "97px"%0A            %2F* %2F%2F display%3A "flex"%2C *%2F%0A            %2F* %2F%2F alignItems%3A "stretch%2C *%2F%0A            %2F* %2F%2F margin%3A "50px"%2C *%2F%0A            %2F* %2F%2F backgroundColor%3A "%238000ff" *%2F%0A            %7D)%3B%0A            gui.appendChild(content)%3B%0A            %0A            function addMode(mode%2C img%2C cheats) %7B%0A                const button %3D document.createElement("div")%3B%0A                button.classList.add("cheatButton")%3B%0A                button.innerHTML %3D (typeof img %3D%3D "string" %3F %60<img style%3D"height%3A 30px%3B margin-right%3A 5px" src%3D"%24%7Bimg%7D">%60 %3A img) %2B mode%3B%0A                cheatContainer.appendChild(button)%3B%0A                button.onclick %3D () %3D> setCheats(button.innerText%2C cheats)%3B%0A                return button.onclick%3B%0A            %7D%3B%0A            var currentMode%3B%0A            async function setCheats(mode%2C scripts) %7B%0A                currentMode %3D %5Bmode%2C scripts%5D%3B%0A                const header %3D document.createElement("div")%3B%0A                addStyles(header%2C %7B%0A                    boxSizing%3A "border-box"%2C%0A                    display%3A "block"%2C%0A                    height%3A "45px"%2C%0A                    left%3A "-10px"%2C%0A                    padding%3A "4px 4px 8px"%2C%0A                    position%3A "absolute"%2C%0A                    top%3A "-28px"%2C%0A                    backgroundColor%3A "%23ef7426"%2C%0A                    boxShadow%3A "0 4px rgb(0 0 0 %2F 20%25)%2C inset 0 -4px rgb(0 0 0 %2F 20%25)"%2C%0A                    borderRadius%3A "7px"%0A                %7D)%3B%0A            %0A                const headerText %3D document.createElement("div")%3B%0A                addStyles(headerText%2C %7B%0A                    alignItems%3A "center"%2C%0A                    boxSizing%3A "border-box"%2C%0A                    display%3A "flex"%2C%0A                    height%3A "100%25"%2C%0A                    justifyContent%3A "center"%2C%0A                    padding%3A "0 15px"%2C%0A                    width%3A "100%25"%2C%0A                    fontFamily%3A "Titan One%2C sans-serif"%2C%0A                    fontSize%3A "26px"%2C%0A                    fontWeight%3A "400"%2C%0A                    textShadow%3A "-1px -1px 0 %23646464%2C 1px -1px 0 %23646464%2C -1px 1px 0 %23646464%2C 2px 2px 0 %23646464"%2C%0A                    color%3A "white"%2C%0A                    background%3A "linear-gradient(%23fcd843%2C%23fcd843 50%25%2C%23feb31a 50.01%25%2C%23feb31a)"%2C%0A                    borderRadius%3A "5px"%0A                %7D)%3B%0A            %0A                const cheats %3D document.createElement("div")%3B%0A                addStyles(cheats%2C %7B%0A                    alignItems%3A "center"%2C%0A                    boxSizing%3A "border-box"%2C%0A                    display%3A "flex"%2C%0A                    flexDirection%3A "row"%2C%0A                    flexWrap%3A "wrap"%2C%0A                    justifyContent%3A "space-evenly"%2C%0A                    padding%3A "20px 5px 20px"%2C%0A                    position%3A "relative"%2C%0A                    width%3A "100%25"%2C%0A                    fontFamily%3A "Nunito%2C sans-serif"%2C%0A                    fontWeight%3A "400"%2C%0A                    color%3A "white"%2C%0A                    backgroundColor%3A "%2340115f"%2C%0A                    boxShadow%3A "inset 0 -6px rgb(0 0 0 %2F 20%25)"%2C%0A                    borderRadius%3A "7px"%0A                %7D)%3B%0A                headerText.innerText %3D %60%24%7Bmode%7D Cheats%60%3B%0A                header.appendChild(headerText)%3B%0A                cheats.appendChild(header)%3B%0A                for (let i %3D 0%3B i < scripts.length%3B i%2B%2B) %7B%0A                    let %7B name%2C description%2C type%2C inputs%2C enabled%2C run %7D %3D scripts%5Bi%5D%3B%0A                    const button %3D document.createElement("div")%3B%0A                    button.classList.add("scriptButton")%3B%0A                    addStyles(button%2C %7B%0A                        alignItems%3A "center"%2C%0A                        boxSizing%3A "border-box"%2C%0A                        display%3A "flex"%2C%0A                        flexDirection%3A "column"%2C%0A                        justifyContent%3A "center"%2C%0A                        margin%3A "10px"%2C%0A                        padding%3A "5px 5px 11px"%2C%0A                        position%3A "relative"%2C%0A                        width%3A "250px"%2C%0A                        fontFamily%3A "Nunito%2C sans-serif"%2C%0A                        fontWeight%3A "400"%2C%0A                        color%3A "white"%2C%0A                        backgroundColor%3A type %3D%3D "toggle" %3F enabled %3F "%2347A547" %3A "%23A02626" %3A "%239a49aa"%2C%0A                        boxShadow%3A "inset 0 -6px rgb(0 0 0 %2F 20%25)"%2C%0A                        borderRadius%3A "7px"%2C%0A                        cursor%3A "pointer"%2C%0A                        transition%3A "filter .25s"%0A                    %7D)%3B%0A            %2F* %2F%2F button.innerHTML %3D %60%24%7Binputs%3F.length %3F (await Promise.all( *%2F%0A            %2F* %2F%2F     inputs.map(async (%7B name%2C type%2C options%3A opts%2C min%2C max %7D) %3D> %7B *%2F%0A            %2F* %2F%2F         const options %3D await (typeof opts %3D%3D "function" %3F opts%3F.().catch(console.warn) %3A opts)%3B *%2F%0A            %2F* %2F%2F         return type %3D%3D "options" %26%26 options%3F.length *%2F%0A            %2F* %2F%2F             %3F %60<select>%24%7Boptions.map(opt %3D> %60<option value%3D"%24%7Bopt%3F.value %7C%7C opt%7D">%24%7Bopt%3F.value %7C%7C opt%7D<%2Foption>%60).join('')%7D<%2Fselect>%60 *%2F%0A            %2F* %2F%2F             %3A %60<input class%3D"cheatInput" %24%7Btype %3D%3D "number" %3F %60type%3D"number" value%3D"%24%7Bmin !%3D null %3F min %3A 0%7D"%60 %3A ""%7D%24%7Bmin !%3D null %3F %60 min%3D"%24%7Bmin%7D" %60 %3A ""%7D%24%7Bmax !%3D null %3F %60 max%3D"%24%7Bmax%7D" %60 %3A ""%7Dplaceholder%3D"%24%7Bname%7D" style%3D"text-align%3A center"><%2Finput>%60%3B *%2F%0A            %2F* %2F%2F     %7D)%3B *%2F%0A            %2F* %2F%2F )).join('') %3A ""%7D%60%3B *%2F%0A                    if (inputs%3F.length) for (let i %3D 0%3B i < inputs.length%3B i%2B%2B) %7B%0A                        const %7B name%2C type%2C options%3A opts%2C min%2C max %7D %3D inputs%5Bi%5D%3B%0A                        let options%3B%0A                        try %7B options %3D await (typeof opts %3D%3D "function" %3F opts%3F.() %3A opts) %7D catch %7B options %3D %5B%5D %7D%3B%0A                        if (type %3D%3D "options" %26%26 options%3F.length) %7B%0A                            const select %3D document.createElement("select")%3B%0A                            options.forEach(opt %3D> %7B%0A                                const option %3D document.createElement("option")%3B%0A                                option.value %3D opt%3F.value %7C%7C opt%3B%0A                                option.innerHTML %3D opt%3F.name %7C%7C opt%3B%0A                                select.appendChild(option)%3B%0A                            %7D)%3B%0A                            button.appendChild(select)%3B%0A                        %7D else %7B%0A                            const input %3D document.createElement("input")%3B%0A                            input.classList.add("cheatInput")%3B%0A                            if (type %3D%3D "number") %7B%0A                                input.type %3D "number"%3B%0A                                input.value %3D min !%3D null %3F min %3A 0%3B%0A                                input.min %3D min%3B%0A                                input.max %3D max%3B%0A                            %7D%3B%0A                            input.placeholder %3D name%3B%0A                            input.style.textAlign %3D "center"%3B%0A                            button.appendChild(input)%3B%0A                        %7D%0A                    %7D%3B%0A                    const cheatName %3D document.createElement("div")%3B%0A                    cheatName.classList.add("cheatName")%3B%0A                    cheatName.innerHTML %3D name%3B%0A                    button.appendChild(cheatName)%3B%0A                    button.onclick %3D (function (%7B target %7D) %7B%0A                        if (target !%3D button %26%26 !target.classList.contains("cheatName")) return%3B%0A                        run.call(this%2C ...%5B...button.children%5D.map(c %3D> c.type %3D%3D "number" %3F parseInt("0" %2B c.value) %3A c.value))%3B%0A                        if (type %3D%3D "toggle") setCheats(mode%2C scripts)%3B%0A                    %7D).bind(scripts%5Bi%5D)%3B%0A                    cheats.appendChild(button)%3B%0A                %7D%3B%0A                %5B...content.children%5D.forEach(x %3D> x.remove())%3B%0A                content.appendChild(cheats)%3B%0A                %2F*  scripts%0A                    %7B%0A                        name%3A ""%2C%0A                        description%3A ""%2C%0A                        type%3A (null %7C "toggle")%2C%0A                        inputs%3A type %3D%3D null %26%26 %5B%7B%0A                            name%3A ""%2C%0A                            type%3A ("number" %7C "string" %7C "options")%2C%0A                            options%3A type %3D%3D "options" %26%26 %5B%0A                                %7B%0A                                    name%3A ""%2C%0A                                    value%3A undefined%0A                                %7D%3B%0A                            %5D%0A                        %7D%5D%2C%0A                        enabled%3A type %3D%3D "toggle" %26%26 Boolean%2C%0A                        run%3A function () %7B%7D%3B%0A                    %7D%3B%0A                *%2F%0A            %7D%3B%0A            %2F* %2F%2F const original_open %3D XMLHttpRequest.prototype.open%3B *%2F%0A            %2F* %2F%2F XMLHttpRequest.prototype.open %3D function () %7B *%2F%0A            %2F* %2F%2F     if (!arguments%5B1%5D.includes("suspend")) original_open.apply(this%2C arguments)%3B *%2F%0A            %2F* %2F%2F %7D%3B *%2F%0A            const Cheats %3D %7B%0A                global%3A %5B%0A                    %7B%0A                        name%3A "Auto Answer (Toggle)"%2C%0A                        description%3A "Toggles auto answer on"%2C%0A                        type%3A "toggle"%2C%0A                        enabled%3A false%2C%0A                        data%3A null%2C%0A                        run%3A function () %7B%0A                            if (!this.enabled) %7B%0A                                this.enabled %3D true%3B%0A                                this.data %3D setInterval(() %3D> %7B%0A                                    const %7B stateNode%3A %7B state%3A %7B question%2C stage%2C feedback %7D%2C props%3A %7B client%3A %7B question%3A pquestion %7D %7D %7D %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                                    try %7B%0A                                        if (stage !%3D%3D "feedback" %26%26 !feedback) %5B...document.querySelectorAll(%60%5Bclass*%3D"answerContainer"%5D%60)%5D%5B(question %7C%7C pquestion).answers.map((x%2C i) %3D> (question %7C%7C pquestion).correctAnswers.includes(x) %3F i %3A null).filter(x %3D> x !%3D null)%5B0%5D%5D%3F.click%3F.()%3B%0A                                        else document.querySelector('%5Bclass*%3D"feedback"%5D')%3F.firstChild%3F.click%3F.()%3B%0A                                    %7D catch %7B %7D%0A                                %7D%2C 50)%3B%0A                            %7D else %7B%0A                                this.enabled %3D false%3B%0A                                clearInterval(this.data)%3B%0A                                this.data %3D null%3B%0A                            %7D%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Highlight Answers (Toggle)"%2C%0A                        description%3A "Toggles highlight answers on"%2C%0A                        type%3A "toggle"%2C%0A                        enabled%3A false%2C%0A                        data%3A null%2C%0A                        run%3A function () %7B%0A                            if (!this.enabled) %7B%0A                                this.enabled %3D true%3B%0A                                this.data %3D setInterval(() %3D> %7B%0A                                    const %7B stateNode%3A %7B state%2C props %7D %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                                    %5B...document.querySelectorAll(%60%5Bclass*%3D"answerContainer"%5D%60)%5D.forEach((answer%2C i) %3D> %7B%0A                                        if ((state.question %7C%7C props.client.question).correctAnswers.includes((state.question %7C%7C props.client.question).answers%5Bi%5D)) answer.style.backgroundColor %3D "rgb(0%2C 207%2C 119)"%3B%0A                                        else answer.style.backgroundColor %3D "rgb(189%2C 15%2C 38)"%3B%0A                                    %7D)%3B%0A                                %7D%2C 50)%3B%0A                            %7D else %7B%0A                                this.enabled %3D false%3B%0A                                clearInterval(this.data)%3B%0A                                this.data %3D null%3B%0A                            %7D%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Auto Sell Dupes On Open"%2C%0A                        description%3A "Sells the blook you unlock when you open a pack if you already have one (Doesn't sell Legendaries or rarer)"%2C%0A                        type%3A "toggle"%2C%0A                        enabled%3A false%2C%0A                        data%3A null%2C%0A                        run%3A function () %7B%0A                            if (!this.enabled) %7B%0A                                this.enabled %3D true%3B%0A                                this.data %3D XMLHttpRequest.prototype.open%3B%0A                                XMLHttpRequest.prototype._original_open %7C%7C%3D XMLHttpRequest.prototype.open%3B%0A                                XMLHttpRequest.prototype.open %3D function () %7B%0A                                    this.addEventListener("load"%2C async function () %7B%0A                                        try %7B%0A                                            if (this.responseURL !%3D%3D "https%3A%2F%2Fdashboard.blooket.com%2Fapi%2Fusers%2Funlockblook") return%3B%0A                                            var axios %3D Object.values(webpackJsonp.push(%5B%5B%5D%2C %7B %5B''%5D%3A (_%2C a%2C b) %3D> %7B a.cache %3D b.c %7D%2C %7D%2C %5B%5B''%5D%5D%2C%5D).cache).find((x) %3D> x.exports%3F.a%3F.get).exports.a%3B%0A                                            var %7B rarity %7D %3D webpackJsonp.push(%5B%5B%5D%2C %7B %5B'rarity'%5D%3A (_%2C a%2C b) %3D> %7B a.rarity %3D (blook) %3D> b('MDrD').a%5Bblook%5D.rarity %7D %7D%2C %5B%5B'rarity'%5D%5D%5D)%3B%0A                                            const %7B unlockedBlook%3A blook %7D %3D JSON.parse(this.response)%3B%0A                                            const %7B data%3A %7B name%2C unlocks %7D %7D %3D await axios.get("https%3A%2F%2Fdashboard.blooket.com%2Fapi%2Fusers")%3B%0A                                            if (!unlocks%5Bblook%5D %7C%7C %5B"Legendary"%2C "Chroma"%2C "Mystical"%5D.includes(rarity(blook))) return%3B%0A                                            await axios.put("https%3A%2F%2Fdashboard.blooket.com%2Fapi%2Fusers%2Fsellblook"%2C %7B name%2C blook%2C numSold%3A 1 %7D)%3B%0A                                            console.log(%60Sold duplicate %24%7Bblook%7D%60)%3B%0A                                        %7D catch %7B %7D%0A                                    %7D)%3B%0A                                    XMLHttpRequest.prototype._original_open.apply(this%2C arguments)%3B%0A                                %7D%0A                            %7D else %7B%0A                                this.enabled %3D false%3B%0A                                XMLHttpRequest.prototype.open %3D this.data%3B%0A                            %7D%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Auto Answer"%2C%0A                        description%3A "Click the correct answer for you"%2C%0A                        run%3A function () %7B%0A                            const %7B stateNode%3A %7B state%3A %7B question%2C stage%2C feedback %7D%2C props%3A %7B client%3A %7B question%3A pquestion %7D %7D %7D %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            try %7B%0A                                if (stage !%3D%3D "feedback" %26%26 !feedback) %5B...document.querySelectorAll(%60%5Bclass*%3D"answerContainer"%5D%60)%5D%5B(question %7C%7C pquestion).answers.map((x%2C i) %3D> (question %7C%7C pquestion).correctAnswers.includes(x) %3F i %3A null).filter(x %3D> x !%3D null)%5B0%5D%5D%3F.click%3F.()%3B%0A                                else document.querySelector('%5Bclass*%3D"feedback"%5D')%3F.firstChild%3F.click%3F.()%3B%0A                            %7D catch %7B %7D%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Highlight Answers"%2C%0A                        description%3A "Colors answers to be red or green highlighting the correct ones"%2C%0A                        run%3A function () %7B%0A                            const %7B stateNode%3A %7B state%2C props %7D %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            %5B...document.querySelectorAll(%60%5Bclass*%3D"answerContainer"%5D%60)%5D.forEach((answer%2C i) %3D> %7B%0A                                if ((state.question %7C%7C props.client.question).correctAnswers.includes((state.question %7C%7C props.client.question).answers%5Bi%5D)) answer.style.backgroundColor %3D "rgb(0%2C 207%2C 119)"%3B%0A                                else answer.style.backgroundColor %3D "rgb(189%2C 15%2C 38)"%3B%0A                            %7D)%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Spam Buy Blooks"%2C%0A                        description%3A "Opens a box an amount of times"%2C%0A                        inputs%3A %5B%0A                            %7B%0A                                name%3A "Box"%2C%0A                                type%3A "options"%2C%0A                                options%3A () %3D> %7B%0A                                    return new Promise(r %3D> %7B%0A                                        r(Object.keys(Object.values(webpackJsonp.push(%5B%5B%5D%2C %7B %5B'1234'%5D%3A (_%2C a%2C b) %3D> %7B a.webpack %3D b %7D%2C %7D%2C %5B%5B'1234'%5D%5D%5D).webpack.c).find(x %3D> x%3F.exports%3F.a%3F.Safari)%3F.exports.a %7C%7C %7B%7D))%3B%0A                                    %7D)%3B%0A                                %7D%0A                            %7D%2C%0A                            %7B%0A                                name%3A "Amount"%2C%0A                                type%3A "number"%0A                            %7D%0A                        %5D%2C%0A                        run%3A function (box%2C amountToOpen) %7B%0A                            let i %3D document.createElement('iframe')%3B%0A                            document.body.append(i)%3B%0A                            window.alert %3D i.contentWindow.alert.bind(window)%3B%0A                            window.prompt %3D i.contentWindow.prompt.bind(window)%3B%0A                            window.confirm %3D i.contentWindow.confirm.bind(window)%3B%0A                            i.remove()%3B%0A                            var webpack %3D Object.values(webpackJsonp.push(%5B%5B%5D%2C %7B %5B''%5D%3A (_%2C a%2C b) %3D> %7B a.cache %3D b.c %7D%2C %7D%2C %5B%5B''%5D%5D%2C%5D).cache)%3B%0A                            var axios %3D webpack.find((x) %3D> x.exports%3F.a%3F.get).exports.a%3B%0A                            box %3D box.split(' ').map(x %3D> x.charAt(0).toUpperCase() %2B x.slice(1).toLowerCase()).join(' ')%3B%0A            %0A                            axios.get("https%3A%2F%2Fdashboard.blooket.com%2Fapi%2Fusers").then(async (%7B data%3A %7B name%2C tokens %7D %7D) %3D> %7B%0A                                let prices %3D webpack.find(x %3D> x%3F.exports%3F.a%3F.Safari)%3F.exports%3F.a %7C%7C %7B%0A                                    Medieval%3A 15%2C%0A                                    Breakfast%3A 15%2C%0A                                    Wonderland%3A 15%2C%0A                                    Space%3A 20%2C%0A                                    Bot%3A 20%2C%0A                                    Aquatic%3A 20%2C%0A                                    Safari%3A 20%2C%0A                                    Dino%3A 25%2C%0A                                    "Ice Monster"%3A 25%0A                                %7D%3B%0A                                let amount %3D Math.min(Math.floor(tokens %2F prices%5Bbox%5D)%2C amountToOpen)%3B%0A                                if (amount %3D%3D 0) %7B%0A                                    if (amountToOpen > 0) alert("You do not have enough tokens!")%3B%0A                                    return%3B%0A                                %7D%3B%0A            %0A                                let alertBlooks %3D confirm("Would you like to alert blooks upon unlocking%3F")%3B%0A                                let blooks %3D %7B%7D%3B%0A                                let now %3D Date.now()%3B%0A                                let error %3D false%3B%0A            %0A                                for (let i %3D 0%3B i < amount%3B i%2B%2B) %7B%0A                                    await axios.put("https%3A%2F%2Fdashboard.blooket.com%2Fapi%2Fusers%2Funlockblook"%2C %7B name%2C box %7D).then((%7B data%3A %7B unlockedBlook%2C tokens%2C isNewBlook %7D %7D) %3D> %7B%0A                                        blooks%5BunlockedBlook%5D %7C%7C%3D 0%3B%0A                                        blooks%5BunlockedBlook%5D%2B%2B%3B%0A            %0A                                        let before %3D Date.now()%3B%0A            %0A                                        if (alertBlooks) alert(%60%24%7BunlockedBlook%7D (%24%7Bi %2B 1%7D%2F%24%7Bamount%7D) %24%7BisNewBlook %3F "NEW! " %3A ''%7D%24%7Btokens%7D tokens left%60)%3B%0A            %0A                                        now %2B%3D Date.now() - before%3B%0A                                    %7D).catch(e %3D> error %3D true)%3B%0A                                    if (error) break%3B%0A                                %7D%3B%0A                                alert(%60(%24%7BDate.now() - now%7Dms) Results%3A%5Cn%24%7BObject.entries(blooks).map((%5Bblook%2C amount%5D) %3D> %60    %24%7Bblook%7D %24%7Bamount%7D%60).join(%60%5Cn%60)%7D%60)%3B%0A                            %7D).catch(() %3D> alert('There was an error user data!'))%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Remove Random Name"%2C%0A                        description%3A "Allows you to put a custom name"%2C%0A                        run%3A function () %7B%0A                            Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner.stateNode.setState(%7B isRandom%3A false%2C client%3A %7B name%3A "" %7D %7D)%3B%0A                            document.querySelector('%5Bclass*%3D"nameInput"%5D')%3F.focus%3F.()%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Sell Cheap Duplicates"%2C%0A                        description%3A "Sells all of your uncommon to epic dupes (not legendaries%2B)"%2C%0A                        run%3A function () %7B%0A                            let i %3D document.createElement('iframe')%3B%0A                            document.body.append(i)%3B%0A                            window.alert %3D i.contentWindow.alert.bind(window)%3B%0A                            window.confirm %3D i.contentWindow.confirm.bind(window)%3B%0A                            i.remove()%3B%0A                            var axios %3D Object.values(webpackJsonp.push(%5B%5B%5D%2C %7B %5B''%5D%3A (_%2C a%2C b) %3D> %7B a.cache %3D b.c %7D%2C %7D%2C %5B%5B''%5D%5D%2C%5D).cache).find((x) %3D> x.exports%3F.a%3F.get).exports.a%3B%0A                            axios.get("https%3A%2F%2Fdashboard.blooket.com%2Fapi%2Fusers").then(async (%7B data%3A %7B name%2C unlocks %7D %7D) %3D> %7B%0A                                let blooks %3D Object.entries(unlocks).filter((%5Bblook%2C amount%5D) %3D> amount > 1 %26%26 !%5B"Legendary"%2C "Chroma"%2C "Mystical"%5D.includes(webpackJsonp.push(%5B%5B%5D%2C %7B %5B'1234'%5D%3A (_%2C a%2C b) %3D> %7B a.webpack %3D b %7D %7D%2C %5B%5B'1234'%5D%5D%5D).webpack("MDrD").a%5Bblook%5D.rarity))%3B%0A                                if (confirm(%60Are you sure you want to sell your uncommon to epic dupes%3F%60)) %7B%0A                                    let now %3D Date.now()%3B%0A                                    for (const %5Bblook%2C amount%5D of blooks) await axios.put("https%3A%2F%2Fdashboard.blooket.com%2Fapi%2Fusers%2Fsellblook"%2C %7B name%2C blook%2C numSold%3A amount - 1 %7D)%3B%0A                                    alert(%60(%24%7BDate.now() - now%7Dms) Results%3A%5Cn%24%7Bblooks.map((%5Bblook%2C amount%5D) %3D> %60    %24%7Bblook%7D %24%7Bamount - 1%7D%60).join(%60%5Cn%60)%7D%60)%3B%0A                                %7D%0A                            %7D).catch(() %3D> alert('There was an error user data!'))%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Sell Duplicate Blooks"%2C%0A                        description%3A "Sell all duplicate blooks leaving you with 1 each"%2C%0A                        run%3A function () %7B%0A                            let i %3D document.createElement('iframe')%3B%0A                            document.body.append(i)%3B%0A                            window.alert %3D i.contentWindow.alert.bind(window)%3B%0A                            window.confirm %3D i.contentWindow.confirm.bind(window)%3B%0A                            i.remove()%3B%0A                            var axios %3D Object.values(webpackJsonp.push(%5B%5B%5D%2C %7B %5B''%5D%3A (_%2C a%2C b) %3D> %7B a.cache %3D b.c %7D%2C %7D%2C %5B%5B''%5D%5D%2C%5D).cache).find((x) %3D> x.exports%3F.a%3F.get).exports.a%3B%0A                            axios.get("https%3A%2F%2Fdashboard.blooket.com%2Fapi%2Fusers").then(async (%7B data%3A %7B name%2C unlocks %7D %7D) %3D> %7B%0A                                let blooks %3D Object.entries(unlocks).filter(x %3D> x%5B1%5D > 1)%3B%0A                                if (confirm(%60Are you sure you want to sell your dupes%3F%60)) %7B%0A                                    let now %3D Date.now()%3B%0A                                    for (const %5Bblook%2C amount%5D of blooks) await axios.put("https%3A%2F%2Fdashboard.blooket.com%2Fapi%2Fusers%2Fsellblook"%2C %7B name%2C blook%2C numSold%3A amount - 1 %7D)%3B%0A                                    alert(%60(%24%7BDate.now() - now%7Dms) Results%3A%5Cn%24%7Bblooks.map((%5Bblook%2C amount%5D) %3D> %60    %24%7Bblook%7D %24%7Bamount - 1%7D%60).join(%60%5Cn%60)%7D%60)%3B%0A                                %7D%0A                            %7D).catch(() %3D> alert('There was an error user data!'))%3B%0A                        %7D%0A                    %7D%2C%0A                %5D%2C%0A                global2%3A %5B%0A                    %7B%0A                        name%3A "Enable Limited Gamemodes"%2C%0A                        description%3A "Allows you to host gamemodes like Santa's Workshop"%2C%0A                        run%3A function () %7B%0A                            let data %3D Object.values(window.webpackJsonp.push(%5B%5B%5D%2C %7B %5B'1234'%5D%3A (_%2C a%2C b) %3D> %7B a.webpack %3D b %7D%2C %7D%2C %5B%5B'1234'%5D%5D%5D).webpack.c).find(x %3D> x.exports.a%3F.Gold).exports%3B%0A                            data.a %3D Object.assign(%7B%0A                                Toy%3A %7B%0A                                    name%3A "Santa's Workshop"%2C%0A                                    img%3A "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1607057672%2FMedia%2FsantasWorkshop.jpg"%2C%0A                                    desc%3A "Super Snowy%2C Chilly%2C and Rapid-fire Fun!"%2C%0A                                    detail%3A "Get in the Holiday spirit by answering questions to build toys and take them from other players"%2C%0A                                    focus%3A "Speed %26 Holiday Cheer"%2C%0A                                    limit%3A "Player Limit%3A 60 (300 for Plus)"%2C%0A                                    suggest%3A "3%2B players suggested"%2C%0A                                    methods%3A %5B"Host"%5D%2C%0A                                    limited%3A !0%2C%0A                                    plusOnly%3A !1%2C%0A                                    active%3A true%0A                                %7D%0A                            %7D%2C data.a)%3B%0A                            Object.values(data.a).forEach(x %3D> (x.active %3D true%2C x.plusOnly %3D false))%3B%0A                            Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner.stateNode.forceUpdate()%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Every Answer Correct"%2C%0A                        description%3A "Sets every answer to be correct"%2C%0A                        run%3A function () %7B%0A                            const %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            stateNode.freeQuestions %3D stateNode.questions %3D stateNode.props.client.questions.map(x %3D> (%7B ...x%2C correctAnswers%3A x.answers %7D))%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Get Daily Rewards"%2C%0A                        description%3A "Gets max daily tokens and xp"%2C%0A                        run%3A function () %7B%0A                            let i %3D document.createElement('iframe')%3B%0A                            document.body.append(i)%3B%0A                            window.alert %3D i.contentWindow.alert.bind(window)%3B%0A                            i.remove()%3B%0A                            if (!location.href.includes("play.blooket.com")) alert("This cheat only works on play.blooket.com")%3B%0A                            else %7B%0A                                var axios %3D Object.values(webpackJsonp.push(%5B%5B%5D%2C %7B %5B''%5D%3A (_%2C a%2C b) %3D> %7B a.cache %3D b.c %7D%2C %7D%2C %5B%5B''%5D%5D%2C%5D).cache).find((x) %3D> x.exports%3F.a%3F.get).exports.a%3B%0A                                axios.get("https%3A%2F%2Fplay.blooket.com%2Fapi%2Fusers%2Fme").then((%7B data%3A %7B name %7D %7D) %3D> %7B%0A                                    axios.put("https%3A%2F%2Fplay.blooket.com%2Fapi%2Fusers%2Fadd-rewards"%2C %7B name%2C addedTokens%3A 500%2C addedXp%3A 300 %7D)%0A                                        .then((%7B data%3A %7B dailyReward %7D %7D) %3D> alert(%60Added max tokens and xp%2C and got %24%7BdailyReward%7D daily wheel tokens!%60))%0A                                        .catch(() %3D> alert('There was an error when adding rewards.'))%3B%0A                                %7D).catch(() %3D> alert('There was an error user data.'))%3B%0A                            %7D%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Simulate Pack"%2C%0A                        description%3A "Simulate opening a pack"%2C%0A                        inputs%3A %5B%7B%0A                            name%3A "Pack"%2C%0A                            type%3A "options"%2C%0A                            options%3A async () %3D> %7B%0A                                return Array.from(document.querySelectorAll('%5Bclass*%3D"packShadow"%5D')).map(x %3D> x.alt)%3B%0A                            %7D%0A                        %7D%5D%2C%0A                        run%3A function (box) %7B%0A                            if (window.location.pathname !%3D%3D "%2Fmarket") return alert("This must be ran on the market page")%3B%0A                            let %7B webpack %7D %3D webpackJsonp.push(%5B%5B%5D%2C %7B %5B'1234'%5D%3A (_%2C a%2C b) %3D> %7B a.webpack %3D b %7D%2C %7D%2C %5B%5B'1234'%5D%5D%5D)%3B%0A                            let %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            let packs %3D webpack('fGzD')%3B%0A                            packs %3D Object.keys(packs.a).reduce((obj%2C pack) %3D> (obj.packs.includes(pack) %26%26 (obj.data%5Bpack%5D %3D Object.fromEntries(packs.b(pack)))%2C obj)%2C %7B packs%3A Array.from(document.querySelectorAll('%5Bclass*%3D"packShadow"%5D')).map(x %3D> x.alt)%2C data%3A %7B%7D %7D).data%3B%0A                            if (packs%5Bbox%5D) %7B%0A                                function weighted(pack) %7B%0A                                    let weights %3D %5B%5D%3B%0A                                    const items %3D Object.keys(packs%5Bpack%5D)%3B%0A                                    for (const key of items) weights.push(packs%5Bpack%5D%5Bkey%5D %2B (weights%5Bitems.indexOf(key) - 1%5D %7C%7C 0))%3B%0A                                    const choice %3D weights%5Bweights.length - 1%5D * Math.random()%3B%0A                                    return items%5Bweights.findIndex(w %3D> w >%3D choice)%5D%3B%0A                                %7D%0A                                const blook %3D weighted(box)%3B%0A                                let phaser %3D Object.values(webpack.c).find(x %3D> x.exports%3F.Class).exports%3B%0A                                let scene %3D %7B%7D%3B%0A            %0A                                class Particles extends phaser.Scene %7B%0A                                    constructor(rarity) %7B%0A                                        super()%3B%0A                                        this.rarity %3D rarity.toLowerCase()%3B%0A                                    %7D%0A                                    preload() %7B%0A                                        switch (this.rarity) %7B%0A                                            case "uncommon"%3A%0A                                                this.load.svg("uncommon-1"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567787%2FMedia%2Fmarket%2Fparticles%2Fsquare_green.svg"%2C %7B width%3A 25%2C height%3A 25 %7D)%3B%0A                                                this.load.svg("uncommon-2"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567787%2FMedia%2Fmarket%2Fparticles%2Fsquare_light_green.svg"%2C %7B width%3A 25%2C height%3A 25 %7D)%3B%0A                                                this.load.svg("uncommon-3"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567785%2FMedia%2Fmarket%2Fparticles%2Fcircle_dark_green.svg"%2C %7B width%3A 25%2C height%3A 25 %7D)%3B%0A                                                this.load.svg("uncommon-4"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567785%2FMedia%2Fmarket%2Fparticles%2Fserpentine_dark_green.svg"%2C %7B width%3A 30%2C height%3A 30 %7D)%3B%0A                                                this.load.svg("uncommon-5"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567785%2FMedia%2Fmarket%2Fparticles%2Ftriangle_light_green.svg"%2C %7B width%3A 30%2C height%3A 30 %7D)%3B%0A                                                this.load.svg("uncommon-6"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567785%2FMedia%2Fmarket%2Fparticles%2Fserpentine_light_green.svg"%2C %7B width%3A 30%2C height%3A 30 %7D)%3B%0A                                                this.load.svg("uncommon-7"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567785%2FMedia%2Fmarket%2Fparticles%2Ftriangle_green.svg"%2C %7B width%3A 30%2C height%3A 30 %7D)%3B%0A                                                break%3B%0A                                            case "rare"%3A%0A                                                this.load.svg("rare-1"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567765%2FMedia%2Fmarket%2Fparticles%2Fsquare_light_blue.svg"%2C %7B width%3A 25%2C height%3A 25 %7D)%3B%0A                                                this.load.svg("rare-2"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567765%2FMedia%2Fmarket%2Fparticles%2Fsquare_dark_blue.svg"%2C %7B width%3A 25%2C height%3A 25 %7D)%3B%0A                                                this.load.svg("rare-3"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567763%2FMedia%2Fmarket%2Fparticles%2Ftriangle_blue.svg"%2C %7B width%3A 30%2C height%3A 30 %7D)%3B%0A                                                this.load.svg("rare-4"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567763%2FMedia%2Fmarket%2Fparticles%2Fserpentine_blue.svg"%2C %7B width%3A 30%2C height%3A 30 %7D)%3B%0A                                                this.load.svg("rare-5"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567763%2FMedia%2Fmarket%2Fparticles%2Ftriangle_light_blue.svg"%2C %7B width%3A 30%2C height%3A 30 %7D)%3B%0A                                                this.load.svg("rare-6"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567763%2FMedia%2Fmarket%2Fparticles%2Fserpentine_light_blue.svg"%2C %7B width%3A 30%2C height%3A 30 %7D)%3B%0A                                                this.load.svg("rare-7"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567763%2FMedia%2Fmarket%2Fparticles%2Fcircle_dark_blue.svg"%2C %7B width%3A 25%2C height%3A 25 %7D)%3B%0A                                                break%3B%0A                                            case "epic"%3A%0A                                                this.load.svg("epic-1"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658790239%2FMedia%2Fmarket%2Fparticles%2Fred.svg"%2C %7B width%3A 25%2C height%3A 25 %7D)%3B%0A                                                this.load.svg("epic-2"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658790237%2FMedia%2Fmarket%2Fparticles%2Flight_red.svg"%2C %7B width%3A 25%2C height%3A 25 %7D)%3B%0A                                                this.load.svg("epic-3"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658790239%2FMedia%2Fmarket%2Fparticles%2Fserpentine_red.svg"%2C %7B width%3A 30%2C height%3A 30 %7D)%3B%0A                                                this.load.svg("epic-4"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658790239%2FMedia%2Fmarket%2Fparticles%2Fserpentine_dark_red.svg"%2C %7B width%3A 30%2C height%3A 30 %7D)%3B%0A                                                this.load.svg("epic-5"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658790237%2FMedia%2Fmarket%2Fparticles%2Ftriangle_red.svg"%2C %7B width%3A 30%2C height%3A 30 %7D)%3B%0A                                                this.load.svg("epic-6"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658790237%2FMedia%2Fmarket%2Fparticles%2Ftriangle_light_red.svg"%2C %7B width%3A 30%2C height%3A 30 %7D)%3B%0A                                                this.load.svg("epic-7"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658790237%2FMedia%2Fmarket%2Fparticles%2Fcircle_dark_red.svg"%2C %7B width%3A 25%2C height%3A 25 %7D)%3B%0A                                                break%3B%0A                                            case "legendary"%3A%0A                                                this.load.svg("legendary-1"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567740%2FMedia%2Fmarket%2Fparticles%2Fsquare_orange.svg"%2C %7B width%3A 25%2C height%3A 25 %7D)%3B%0A                                                this.load.svg("legendary-2"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567740%2FMedia%2Fmarket%2Fparticles%2Fsquare_light_orange.svg"%2C %7B width%3A 25%2C height%3A 25 %7D)%3B%0A                                                this.load.svg("legendary-3"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567738%2FMedia%2Fmarket%2Fparticles%2Fcircle_orange.svg"%2C %7B width%3A 25%2C height%3A 25 %7D)%3B%0A                                                this.load.svg("legendary-4"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567738%2FMedia%2Fmarket%2Fparticles%2Fserpentine_orange.svg"%2C %7B width%3A 30%2C height%3A 30 %7D)%3B%0A                                                this.load.svg("legendary-5"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567738%2FMedia%2Fmarket%2Fparticles%2Fserpentine_light_orange.svg"%2C %7B width%3A 30%2C height%3A 30 %7D)%3B%0A                                                this.load.svg("legendary-6"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567738%2FMedia%2Fmarket%2Fparticles%2Fcircle_dark_orange.svg"%2C %7B width%3A 25%2C height%3A 25 %7D)%3B%0A                                                this.load.svg("legendary-7"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567738%2FMedia%2Fmarket%2Fparticles%2Ftriangle_dark_orange.svg"%2C %7B width%3A 30%2C height%3A 30 %7D)%3B%0A                                                break%3B%0A                                            case "chroma"%3A%0A                                                this.load.svg("chroma-1"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658790246%2FMedia%2Fmarket%2Fparticles%2Fsquare_turquoise.svg"%2C %7B width%3A 25%2C height%3A 25 %7D)%3B%0A                                                this.load.svg("chroma-2"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658790246%2FMedia%2Fmarket%2Fparticles%2Fsquare_light_turquoise.svg"%2C %7B width%3A 25%2C height%3A 25 %7D)%3B%0A                                                this.load.svg("chroma-3"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658790244%2FMedia%2Fmarket%2Fparticles%2Fserpentine_dark_turquoise.svg"%2C %7B width%3A 30%2C height%3A 30 %7D)%3B%0A                                                this.load.svg("chroma-4"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658790244%2FMedia%2Fmarket%2Fparticles%2Fserpentine_turquoise.svg"%2C %7B width%3A 30%2C height%3A 30 %7D)%3B%0A                                                this.load.svg("chroma-5"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658790244%2FMedia%2Fmarket%2Fparticles%2Ftriangle_turquoise.svg"%2C %7B width%3A 30%2C height%3A 30 %7D)%3B%0A                                                this.load.svg("chroma-6"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658790244%2FMedia%2Fmarket%2Fparticles%2Ftriangle_light_turquoise.svg"%2C %7B width%3A 30%2C height%3A 30 %7D)%3B%0A                                                this.load.svg("chroma-7"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658790244%2FMedia%2Fmarket%2Fparticles%2Fcircle_dark_turquoise.svg"%2C %7B width%3A 25%2C height%3A 25 %7D)%3B%0A                                        %7D%0A                                    %7D%0A                                    create() %7B%0A                                        scene.scene %3D this%3B%0A                                        scene.rarity %3D ""%3B%0A                                        scene.particles %3D this.physics.add.group(%7B%0A                                            classType%3A new phaser.Class(%7B%0A                                                Extends%3A phaser.GameObjects.Image%2C%0A                                                initialize%3A function () %7B%0A                                                    phaser.GameObjects.Image.call(this%2C scene.scene%2C 0%2C 0%2C "uncommon-1")%3B%0A                                                    this.setDepth(3)%3B%0A                                                    this.lifespan %3D 0%3B%0A                                                %7D%2C%0A                                                spawn%3A function (x%2C y%2C scale%2C velAngle%2C velSpeed%2C gravity%2C angle%2C lifespan%2C texture) %7B%0A                                                    this.setTexture(texture)%3B%0A                                                    this.setActive(true)%3B%0A                                                    this.setVisible(true)%3B%0A                                                    this.setPosition(x%2C y)%3B%0A                                                    this.setScale(scale)%3B%0A                                                    this.targets %3D %5B%5D%3B%0A                                                    scene.scene.physics.velocityFromAngle(velAngle%2C velSpeed%2C this.body.velocity)%3B%0A                                                    this.body.setGravityY(gravity)%3B%0A                                                    this.body.setAngularVelocity(angle)%3B%0A                                                    this.lifespan %3D lifespan%3B%0A                                                %7D%2C%0A                                                update%3A function (t%2C s) %7B%0A                                                    this.lifespan -%3D s%3B%0A                                                    if (this.lifespan > 0) return%3B%0A                                                    this.setActive(!1)%3B%0A                                                    this.setVisible(!1)%3B%0A                                                %7D%0A                                            %7D)%2C%0A                                            runChildUpdate%3A !0%0A                                        %7D)%3B%0A                                        this.nextParticle %3D 0%3B%0A                                        this.numExplosions %3D 0%3B%0A                                        this.game.events.on("start-particles"%2C (t) %3D> %7B%0A                                            scene.rarity %3D t%3B%0A                                            this.numExplosions %3D "Uncommon" %3D%3D%3D t %3F 75 %3A "Rare" %3D%3D%3D t %3F 100 %3A -1%3B%0A                                        %7D)%3B%0A                                    %7D%0A                                    update(e%2C t) %7B%0A                                        const I %3D webpack("74sb")%3B%0A                                        let Z %3D function (e) %7B%0A                                            switch (e) %7B%0A                                                case "center"%3A %7B%0A                                                    var t %3D Object(I.l)(-115%2C -65)%3B%0A                                                    return %7B%0A                                                        x%3A scene.scene.cameras.main.worldView.width %2F 2%2C%0A                                                        y%3A scene.scene.cameras.main.worldView.height %2F 2%2C%0A                                                        scale%3A Object(I.l)(.7%2C 1)%2C%0A                                                        angle%3A t%2C%0A                                                        velocity%3A Object(I.l)(600%2C 750)%2C%0A                                                        gravity%3A 700%2C%0A                                                        angVelocity%3A (t > -90 %3F 1 %3A -1) * Object(I.l)(125%2C 175)%2C%0A                                                        lifespan%3A 2500%0A                                                    %7D%0A                                                %7D%0A                                                case "right-bottom"%3A return %7B%0A                                                    x%3A scene.scene.cameras.main.worldView.width%2C%0A                                                    y%3A scene.scene.cameras.main.worldView.height%2C%0A                                                    scale%3A Object(I.l)(.7%2C 1)%2C%0A                                                    angle%3A Object(I.l)(-160%2C -110)%2C%0A                                                    velocity%3A Object(I.l)(600%2C 750)%2C%0A                                                    gravity%3A 500%2C%0A                                                    angVelocity%3A Object(I.l)(-175%2C -125)%2C%0A                                                    lifespan%3A 2500%0A                                                %7D%3B%0A                                                case "left-bottom"%3A return %7B%0A                                                    x%3A 0%2C%0A                                                    y%3A scene.scene.cameras.main.worldView.height%2C%0A                                                    scale%3A Object(I.l)(.7%2C 1)%2C%0A                                                    angle%3A Object(I.l)(-70%2C -20)%2C%0A                                                    velocity%3A Object(I.l)(600%2C 750)%2C%0A                                                    gravity%3A 500%2C%0A                                                    angVelocity%3A Object(I.l)(125%2C 175)%2C%0A                                                    lifespan%3A 2500%0A                                                %7D%3B%0A                                                case "top"%3A return %7B%0A                                                    x%3A Object(I.l)(0%2C scene.scene.cameras.main.worldView.width)%2C%0A                                                    y%3A -50%2C%0A                                                    scale%3A Object(I.l)(.7%2C 1)%2C%0A                                                    angle%3A 90%2C%0A                                                    velocity%3A Object(I.l)(0%2C 50)%2C%0A                                                    gravity%3A 700%2C%0A                                                    angVelocity%3A Object(I.l)(-150%2C 150)%2C%0A                                                    lifespan%3A 2500%0A                                                %7D%3B%0A                                                case "right-shower"%3A return %7B%0A                                                    x%3A scene.scene.cameras.main.worldView.width%2C%0A                                                    y%3A Object(I.l)(0%2C scene.scene.cameras.main.worldView.height)%2C%0A                                                    scale%3A Object(I.l)(.7%2C 1)%2C%0A                                                    angle%3A Object(I.l)(-180%2C -130)%2C%0A                                                    velocity%3A Object(I.l)(600%2C 750)%2C%0A                                                    gravity%3A 500%2C%0A                                                    angVelocity%3A Object(I.l)(-175%2C -125)%2C%0A                                                    lifespan%3A 2500%0A                                                %7D%3B%0A                                                case "left-shower"%3A return %7B%0A                                                    x%3A 0%2C%0A                                                    y%3A Object(I.l)(0%2C scene.scene.cameras.main.worldView.height)%2C%0A                                                    scale%3A Object(I.l)(.7%2C 1)%2C%0A                                                    angle%3A Object(I.l)(-50%2C 0)%2C%0A                                                    velocity%3A Object(I.l)(600%2C 750)%2C%0A                                                    gravity%3A 500%2C%0A                                                    angVelocity%3A Object(I.l)(125%2C 175)%2C%0A                                                    lifespan%3A 2500%0A                                                %7D%3B%0A                                                case "right-diamond"%3A %7B%0A                                                    var a %3D Object(I.l)(0%2C scene.scene.cameras.main.worldView.height)%3B%0A                                                    return %7B%0A                                                        x%3A scene.scene.cameras.main.worldView.width%2C%0A                                                        y%3A a%2C%0A                                                        scale%3A Object(I.l)(.7%2C 1)%2C%0A                                                        angle%3A a > scene.scene.cameras.main.worldView.height %2F 2 %3F -150 %3A -210%2C%0A                                                        velocity%3A Object(I.l)(600%2C 750)%2C%0A                                                        gravity%3A 0%2C%0A                                                        angVelocity%3A Object(I.l)(-175%2C -125)%2C%0A                                                        lifespan%3A 2500%0A                                                    %7D%0A                                                %7D%0A                                                case "left-diamond"%3A %7B%0A                                                    var n %3D Object(I.l)(0%2C scene.scene.cameras.main.worldView.height)%3B%0A                                                    return %7B%0A                                                        x%3A 0%2C%0A                                                        y%3A n%2C%0A                                                        scale%3A Object(I.l)(.7%2C 1)%2C%0A                                                        angle%3A n > scene.scene.cameras.main.worldView.height %2F 2 %3F -30 %3A 30%2C%0A                                                        velocity%3A Object(I.l)(600%2C 750)%2C%0A                                                        gravity%3A 0%2C%0A                                                        angVelocity%3A Object(I.l)(125%2C 175)%2C%0A                                                        lifespan%3A 2500%0A                                                    %7D%0A                                                %7D%0A                                                default%3A return %7B%7D%3B%0A                                            %7D%0A                                        %7D%3B%0A                                        if (scene.rarity %26%26 0 !%3D%3D this.numExplosions %26%26 (this.nextParticle -%3D t%2C this.nextParticle <%3D 0)) %7B%0A                                            switch (scene.rarity) %7B%0A                                                case "Uncommon"%3A %7B%0A                                                    for (let i %3D 0%3B i < 2%3B i%2B%2B) %7B%0A                                                        let n %3D scene.particles.get()%3B%0A                                                        n %26%26 n.spawn.apply(n%2C Object.values(Z("center")).concat(%60uncommon-%24%7BObject(I.m)(1%2C 8)%7D%60))%0A                                                    %7D%0A                                                    break%3B%0A                                                %7D%0A                                                case "Rare"%3A %7B%0A                                                    for (var o %3D 0%3B o < 2%3B o%2B%2B) %7B%0A                                                        var r %3D scene.particles.get()%3B%0A                                                        r %26%26 r.spawn.apply(r%2C Object.values(Z(o %25 2 %3D%3D 0 %3F "left-bottom" %3A "right-bottom")).concat(%60rare-%24%7BObject(I.m)(1%2C 8)%7D%60))%0A                                                    %7D%0A                                                    break%3B%0A                                                %7D%0A                                                case "Epic"%3A %7B%0A                                                    for (var s %3D 0%3B s < 2%3B s%2B%2B) %7B%0A                                                        var i %3D scene.particles.get()%3B%0A                                                        i %26%26 i.spawn.apply(i%2C Object.values(Z(s %25 2 %3D%3D 0 %3F "left-shower" %3A "right-shower")).concat(%60epic-%24%7BObject(I.m)(1%2C 8)%7D%60))%0A                                                    %7D%0A                                                    break%3B%0A                                                %7D%0A                                                case "Legendary"%3A %7B%0A                                                    for (var l %3D 0%3B l < 3%3B l%2B%2B) %7B%0A                                                        var c %3D scene.particles.get()%3B%0A                                                        c %26%26 c.spawn.apply(c%2C Object.values(Z("top")).concat(%60legendary-%24%7BObject(I.m)(1%2C 8)%7D%60))%0A                                                    %7D%0A                                                    break%3B%0A                                                %7D%0A                                                case "Chroma"%3A %7B%0A                                                    for (var u %3D 0%3B u < 3%3B u%2B%2B) %7B%0A                                                        var d %3D scene.particles.get()%3B%0A                                                        d %26%26 d.spawn.apply(d%2C Object.values(Z(u %25 2 %3D%3D 0 %3F "left-diamond" %3A "right-diamond")).concat(%60chroma-%24%7BObject(I.m)(1%2C 8)%7D%60))%0A                                                    %7D%0A                                                    break%3B%0A                                                %7D%0A                                            %7D%0A                                            this.nextParticle %3D 20%3B%0A                                            this.numExplosions > 0 %26%26 (this.numExplosions %3D Math.max(this.numExplosions - 1%2C 0))%3B%0A                                        %7D%0A                                    %7D%0A                                %7D%0A                                const allBlooks %3D Object.values(webpack.c).find(x %3D> x.exports%3F.a%3F.Elephant).exports.a%3B%0A                                stateNode.setState(%7B%0A                                    loadingPack%3A false%2C%0A                                    openPack%3A true%2C%0A                                    unlockedBlook%3A blook%2C%0A                                    tokens%3A stateNode.state.tokens%2C%0A                                    newUnlock%3A true%2C%0A                                    game%3A %7B%0A                                        type%3A phaser.WEBGL%2C%0A                                        parent%3A "phaser-market"%2C%0A                                        width%3A "100%25"%2C%0A                                        height%3A "100%25"%2C%0A                                        scale%3A %7B mode%3A phaser.Scale.NONE%2C autoCenter%3A phaser.Scale.CENTER_BOTH %7D%2C%0A                                        transparent%3A true%2C%0A                                        physics%3A %7B default%3A "arcade" %7D%2C%0A                                        scene%3A new Particles(allBlooks%5Bblook%5D.rarity)%0A                                    %7D%2C%0A                                    canOpen%3A true%0A                                %7D)%3B%0A                            %7D else alert("I couldn't find that box!")%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Simulate Unlock"%2C%0A                        description%3A "Simulate unlocking most of the blooks"%2C%0A                        inputs%3A %5B%0A                            %7B%0A                                name%3A "Blook"%2C%0A                                type%3A "options"%2C%0A                                options%3A async () %3D> %7B%0A                                    let %7B webpack %7D %3D webpackJsonp.push(%5B%5B%5D%2C %7B %5B'1234'%5D%3A (_%2C a%2C b) %3D> %7B a.webpack %3D b %7D%2C %7D%2C %5B%5B'1234'%5D%5D%5D)%3B%0A                                    return Object.keys(Object.entries(Object.values(webpack.c).find(x %3D> Object.values(x.exports%3F.a %7C%7C %7B%7D)%5B0%5D%3F.set).exports.a).reduce((a%2C b) %3D> (Object.values(webpack.c).find(x %3D> x.exports.a%3F.Breakfast %3D%3D 15).exports.a%5Bb%5B1%5D.realSet %7C%7C b%5B1%5D.set%5D %26%26 (a%5Bb%5B0%5D%5D %3D b%5B1%5D)%2C a)%2C %7B%7D))%3B%0A                                %7D%0A                            %7D%0A                        %5D%2C%0A                        run%3A function (blook) %7B%0A                            let i %3D document.createElement('iframe')%3B%0A                            document.body.append(i)%3B%0A                            window.alert %3D i.contentWindow.alert.bind(window)%3B%0A                            window.prompt %3D i.contentWindow.prompt.bind(window)%3B%0A                            i.remove()%3B%0A                            if (window.location.pathname %3D%3D "%2Fmarket") %7B%0A                                let %7B webpack %7D %3D webpackJsonp.push(%5B%5B%5D%2C %7B %5B'1234'%5D%3A (_%2C a%2C b) %3D> %7B a.webpack %3D b %7D%2C %7D%2C %5B%5B'1234'%5D%5D%5D)%3B%0A                                let %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                                let phaser %3D Object.values(webpack.c).find(x %3D> x.exports%3F.Class).exports%3B%0A                                let L %3D new function e() %7B this.scene %3D null%2C this.particles %3D null%2C this.rarity %3D null %7D%3B%0A            %0A                                class Particles extends phaser.Scene %7B%0A                                    constructor(rarity) %7B%0A                                        super()%3B%0A                                        this.rarity %3D rarity.toLowerCase()%3B%0A                                    %7D%0A                                    preload() %7B%0A                                        switch (this.rarity) %7B%0A                                            case "uncommon"%3A%0A                                                this.load.svg("uncommon-1"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567787%2FMedia%2Fmarket%2Fparticles%2Fsquare_green.svg"%2C %7B width%3A 25%2C height%3A 25 %7D)%3B%0A                                                this.load.svg("uncommon-2"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567787%2FMedia%2Fmarket%2Fparticles%2Fsquare_light_green.svg"%2C %7B width%3A 25%2C height%3A 25 %7D)%3B%0A                                                this.load.svg("uncommon-3"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567785%2FMedia%2Fmarket%2Fparticles%2Fcircle_dark_green.svg"%2C %7B width%3A 25%2C height%3A 25 %7D)%3B%0A                                                this.load.svg("uncommon-4"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567785%2FMedia%2Fmarket%2Fparticles%2Fserpentine_dark_green.svg"%2C %7B width%3A 30%2C height%3A 30 %7D)%3B%0A                                                this.load.svg("uncommon-5"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567785%2FMedia%2Fmarket%2Fparticles%2Ftriangle_light_green.svg"%2C %7B width%3A 30%2C height%3A 30 %7D)%3B%0A                                                this.load.svg("uncommon-6"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567785%2FMedia%2Fmarket%2Fparticles%2Fserpentine_light_green.svg"%2C %7B width%3A 30%2C height%3A 30 %7D)%3B%0A                                                this.load.svg("uncommon-7"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567785%2FMedia%2Fmarket%2Fparticles%2Ftriangle_green.svg"%2C %7B width%3A 30%2C height%3A 30 %7D)%3B%0A                                                break%3B%0A                                            case "rare"%3A%0A                                                this.load.svg("rare-1"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567765%2FMedia%2Fmarket%2Fparticles%2Fsquare_light_blue.svg"%2C %7B width%3A 25%2C height%3A 25 %7D)%3B%0A                                                this.load.svg("rare-2"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567765%2FMedia%2Fmarket%2Fparticles%2Fsquare_dark_blue.svg"%2C %7B width%3A 25%2C height%3A 25 %7D)%3B%0A                                                this.load.svg("rare-3"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567763%2FMedia%2Fmarket%2Fparticles%2Ftriangle_blue.svg"%2C %7B width%3A 30%2C height%3A 30 %7D)%3B%0A                                                this.load.svg("rare-4"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567763%2FMedia%2Fmarket%2Fparticles%2Fserpentine_blue.svg"%2C %7B width%3A 30%2C height%3A 30 %7D)%3B%0A                                                this.load.svg("rare-5"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567763%2FMedia%2Fmarket%2Fparticles%2Ftriangle_light_blue.svg"%2C %7B width%3A 30%2C height%3A 30 %7D)%3B%0A                                                this.load.svg("rare-6"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567763%2FMedia%2Fmarket%2Fparticles%2Fserpentine_light_blue.svg"%2C %7B width%3A 30%2C height%3A 30 %7D)%3B%0A                                                this.load.svg("rare-7"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567763%2FMedia%2Fmarket%2Fparticles%2Fcircle_dark_blue.svg"%2C %7B width%3A 25%2C height%3A 25 %7D)%3B%0A                                                break%3B%0A                                            case "epic"%3A%0A                                                this.load.svg("epic-1"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658790239%2FMedia%2Fmarket%2Fparticles%2Fred.svg"%2C %7B width%3A 25%2C height%3A 25 %7D)%3B%0A                                                this.load.svg("epic-2"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658790237%2FMedia%2Fmarket%2Fparticles%2Flight_red.svg"%2C %7B width%3A 25%2C height%3A 25 %7D)%3B%0A                                                this.load.svg("epic-3"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658790239%2FMedia%2Fmarket%2Fparticles%2Fserpentine_red.svg"%2C %7B width%3A 30%2C height%3A 30 %7D)%3B%0A                                                this.load.svg("epic-4"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658790239%2FMedia%2Fmarket%2Fparticles%2Fserpentine_dark_red.svg"%2C %7B width%3A 30%2C height%3A 30 %7D)%3B%0A                                                this.load.svg("epic-5"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658790237%2FMedia%2Fmarket%2Fparticles%2Ftriangle_red.svg"%2C %7B width%3A 30%2C height%3A 30 %7D)%3B%0A                                                this.load.svg("epic-6"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658790237%2FMedia%2Fmarket%2Fparticles%2Ftriangle_light_red.svg"%2C %7B width%3A 30%2C height%3A 30 %7D)%3B%0A                                                this.load.svg("epic-7"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658790237%2FMedia%2Fmarket%2Fparticles%2Fcircle_dark_red.svg"%2C %7B width%3A 25%2C height%3A 25 %7D)%3B%0A                                                break%3B%0A                                            case "legendary"%3A%0A                                                this.load.svg("legendary-1"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567740%2FMedia%2Fmarket%2Fparticles%2Fsquare_orange.svg"%2C %7B width%3A 25%2C height%3A 25 %7D)%3B%0A                                                this.load.svg("legendary-2"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567740%2FMedia%2Fmarket%2Fparticles%2Fsquare_light_orange.svg"%2C %7B width%3A 25%2C height%3A 25 %7D)%3B%0A                                                this.load.svg("legendary-3"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567738%2FMedia%2Fmarket%2Fparticles%2Fcircle_orange.svg"%2C %7B width%3A 25%2C height%3A 25 %7D)%3B%0A                                                this.load.svg("legendary-4"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567738%2FMedia%2Fmarket%2Fparticles%2Fserpentine_orange.svg"%2C %7B width%3A 30%2C height%3A 30 %7D)%3B%0A                                                this.load.svg("legendary-5"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567738%2FMedia%2Fmarket%2Fparticles%2Fserpentine_light_orange.svg"%2C %7B width%3A 30%2C height%3A 30 %7D)%3B%0A                                                this.load.svg("legendary-6"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567738%2FMedia%2Fmarket%2Fparticles%2Fcircle_dark_orange.svg"%2C %7B width%3A 25%2C height%3A 25 %7D)%3B%0A                                                this.load.svg("legendary-7"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658567738%2FMedia%2Fmarket%2Fparticles%2Ftriangle_dark_orange.svg"%2C %7B width%3A 30%2C height%3A 30 %7D)%3B%0A                                                break%3B%0A                                            case "chroma"%3A%0A                                                this.load.svg("chroma-1"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658790246%2FMedia%2Fmarket%2Fparticles%2Fsquare_turquoise.svg"%2C %7B width%3A 25%2C height%3A 25 %7D)%3B%0A                                                this.load.svg("chroma-2"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658790246%2FMedia%2Fmarket%2Fparticles%2Fsquare_light_turquoise.svg"%2C %7B width%3A 25%2C height%3A 25 %7D)%3B%0A                                                this.load.svg("chroma-3"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658790244%2FMedia%2Fmarket%2Fparticles%2Fserpentine_dark_turquoise.svg"%2C %7B width%3A 30%2C height%3A 30 %7D)%3B%0A                                                this.load.svg("chroma-4"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658790244%2FMedia%2Fmarket%2Fparticles%2Fserpentine_turquoise.svg"%2C %7B width%3A 30%2C height%3A 30 %7D)%3B%0A                                                this.load.svg("chroma-5"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658790244%2FMedia%2Fmarket%2Fparticles%2Ftriangle_turquoise.svg"%2C %7B width%3A 30%2C height%3A 30 %7D)%3B%0A                                                this.load.svg("chroma-6"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658790244%2FMedia%2Fmarket%2Fparticles%2Ftriangle_light_turquoise.svg"%2C %7B width%3A 30%2C height%3A 30 %7D)%3B%0A                                                this.load.svg("chroma-7"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1658790244%2FMedia%2Fmarket%2Fparticles%2Fcircle_dark_turquoise.svg"%2C %7B width%3A 25%2C height%3A 25 %7D)%3B%0A                                        %7D%0A                                    %7D%0A                                    create() %7B%0A                                        L.scene %3D this%3B%0A                                        L.rarity %3D ""%3B%0A                                        L.particles %3D this.physics.add.group(%7B%0A                                            classType%3A new phaser.Class(%7B%0A                                                Extends%3A phaser.GameObjects.Image%2C%0A                                                initialize%3A function () %7B%0A                                                    phaser.GameObjects.Image.call(this%2C L.scene%2C 0%2C 0%2C "uncommon-1")%3B%0A                                                    this.setDepth(3)%3B%0A                                                    this.lifespan %3D 0%3B%0A                                                %7D%2C%0A                                                spawn%3A function (x%2C y%2C scale%2C velAngle%2C velSpeed%2C gravity%2C angle%2C lifespan%2C texture) %7B%0A                                                    this.setTexture(texture)%3B%0A                                                    this.setActive(true)%3B%0A                                                    this.setVisible(true)%3B%0A                                                    this.setPosition(x%2C y)%3B%0A                                                    this.setScale(scale)%3B%0A                                                    this.targets %3D %5B%5D%3B%0A                                                    L.scene.physics.velocityFromAngle(velAngle%2C velSpeed%2C this.body.velocity)%3B%0A                                                    this.body.setGravityY(gravity)%3B%0A                                                    this.body.setAngularVelocity(angle)%3B%0A                                                    this.lifespan %3D lifespan%3B%0A                                                %7D%2C%0A                                                update%3A function (t%2C s) %7B%0A                                                    this.lifespan -%3D s%3B%0A                                                    if (this.lifespan > 0) return%3B%0A                                                    this.setActive(!1)%3B%0A                                                    this.setVisible(!1)%3B%0A                                                %7D%0A                                            %7D)%2C%0A                                            runChildUpdate%3A !0%0A                                        %7D)%3B%0A                                        this.nextParticle %3D 0%3B%0A                                        this.numExplosions %3D 0%3B%0A                                        this.game.events.on("start-particles"%2C (t) %3D> %7B%0A                                            L.rarity %3D t%3B%0A                                            this.numExplosions %3D "Uncommon" %3D%3D%3D t %3F 75 %3A "Rare" %3D%3D%3D t %3F 100 %3A -1%3B%0A                                        %7D)%3B%0A                                    %7D%0A                                    update(e%2C t) %7B%0A                                        const I %3D webpack("74sb")%3B%0A                                        let Z %3D function (e) %7B%0A                                            switch (e) %7B%0A                                                case "center"%3A %7B%0A                                                    var t %3D Object(I.l)(-115%2C -65)%3B%0A                                                    return %7B%0A                                                        x%3A L.scene.cameras.main.worldView.width %2F 2%2C%0A                                                        y%3A L.scene.cameras.main.worldView.height %2F 2%2C%0A                                                        scale%3A Object(I.l)(.7%2C 1)%2C%0A                                                        angle%3A t%2C%0A                                                        velocity%3A Object(I.l)(600%2C 750)%2C%0A                                                        gravity%3A 700%2C%0A                                                        angVelocity%3A (t > -90 %3F 1 %3A -1) * Object(I.l)(125%2C 175)%2C%0A                                                        lifespan%3A 2500%0A                                                    %7D%0A                                                %7D%0A                                                case "right-bottom"%3A return %7B%0A                                                    x%3A L.scene.cameras.main.worldView.width%2C%0A                                                    y%3A L.scene.cameras.main.worldView.height%2C%0A                                                    scale%3A Object(I.l)(.7%2C 1)%2C%0A                                                    angle%3A Object(I.l)(-160%2C -110)%2C%0A                                                    velocity%3A Object(I.l)(600%2C 750)%2C%0A                                                    gravity%3A 500%2C%0A                                                    angVelocity%3A Object(I.l)(-175%2C -125)%2C%0A                                                    lifespan%3A 2500%0A                                                %7D%3B%0A                                                case "left-bottom"%3A return %7B%0A                                                    x%3A 0%2C%0A                                                    y%3A L.scene.cameras.main.worldView.height%2C%0A                                                    scale%3A Object(I.l)(.7%2C 1)%2C%0A                                                    angle%3A Object(I.l)(-70%2C -20)%2C%0A                                                    velocity%3A Object(I.l)(600%2C 750)%2C%0A                                                    gravity%3A 500%2C%0A                                                    angVelocity%3A Object(I.l)(125%2C 175)%2C%0A                                                    lifespan%3A 2500%0A                                                %7D%3B%0A                                                case "top"%3A return %7B%0A                                                    x%3A Object(I.l)(0%2C L.scene.cameras.main.worldView.width)%2C%0A                                                    y%3A -50%2C%0A                                                    scale%3A Object(I.l)(.7%2C 1)%2C%0A                                                    angle%3A 90%2C%0A                                                    velocity%3A Object(I.l)(0%2C 50)%2C%0A                                                    gravity%3A 700%2C%0A                                                    angVelocity%3A Object(I.l)(-150%2C 150)%2C%0A                                                    lifespan%3A 2500%0A                                                %7D%3B%0A                                                case "right-shower"%3A return %7B%0A                                                    x%3A L.scene.cameras.main.worldView.width%2C%0A                                                    y%3A Object(I.l)(0%2C L.scene.cameras.main.worldView.height)%2C%0A                                                    scale%3A Object(I.l)(.7%2C 1)%2C%0A                                                    angle%3A Object(I.l)(-180%2C -130)%2C%0A                                                    velocity%3A Object(I.l)(600%2C 750)%2C%0A                                                    gravity%3A 500%2C%0A                                                    angVelocity%3A Object(I.l)(-175%2C -125)%2C%0A                                                    lifespan%3A 2500%0A                                                %7D%3B%0A                                                case "left-shower"%3A return %7B%0A                                                    x%3A 0%2C%0A                                                    y%3A Object(I.l)(0%2C L.scene.cameras.main.worldView.height)%2C%0A                                                    scale%3A Object(I.l)(.7%2C 1)%2C%0A                                                    angle%3A Object(I.l)(-50%2C 0)%2C%0A                                                    velocity%3A Object(I.l)(600%2C 750)%2C%0A                                                    gravity%3A 500%2C%0A                                                    angVelocity%3A Object(I.l)(125%2C 175)%2C%0A                                                    lifespan%3A 2500%0A                                                %7D%3B%0A                                                case "right-diamond"%3A %7B%0A                                                    var a %3D Object(I.l)(0%2C L.scene.cameras.main.worldView.height)%3B%0A                                                    return %7B%0A                                                        x%3A L.scene.cameras.main.worldView.width%2C%0A                                                        y%3A a%2C%0A                                                        scale%3A Object(I.l)(.7%2C 1)%2C%0A                                                        angle%3A a > L.scene.cameras.main.worldView.height %2F 2 %3F -150 %3A -210%2C%0A                                                        velocity%3A Object(I.l)(600%2C 750)%2C%0A                                                        gravity%3A 0%2C%0A                                                        angVelocity%3A Object(I.l)(-175%2C -125)%2C%0A                                                        lifespan%3A 2500%0A                                                    %7D%0A                                                %7D%0A                                                case "left-diamond"%3A %7B%0A                                                    var n %3D Object(I.l)(0%2C L.scene.cameras.main.worldView.height)%3B%0A                                                    return %7B%0A                                                        x%3A 0%2C%0A                                                        y%3A n%2C%0A                                                        scale%3A Object(I.l)(.7%2C 1)%2C%0A                                                        angle%3A n > L.scene.cameras.main.worldView.height %2F 2 %3F -30 %3A 30%2C%0A                                                        velocity%3A Object(I.l)(600%2C 750)%2C%0A                                                        gravity%3A 0%2C%0A                                                        angVelocity%3A Object(I.l)(125%2C 175)%2C%0A                                                        lifespan%3A 2500%0A                                                    %7D%0A                                                %7D%0A                                                default%3A return %7B%7D%3B%0A                                            %7D%0A                                        %7D%3B%0A                                        if (L.rarity %26%26 0 !%3D%3D this.numExplosions %26%26 (this.nextParticle -%3D t%2C this.nextParticle <%3D 0)) %7B%0A                                            switch (L.rarity) %7B%0A                                                case "Uncommon"%3A %7B%0A                                                    for (let i %3D 0%3B i < 2%3B i%2B%2B) %7B%0A                                                        let n %3D L.particles.get()%3B%0A                                                        n %26%26 n.spawn.apply(n%2C Object.values(Z("center")).concat(%60uncommon-%24%7BObject(I.m)(1%2C 8)%7D%60))%0A                                                    %7D%0A                                                    break%3B%0A                                                %7D%0A                                                case "Rare"%3A %7B%0A                                                    for (var o %3D 0%3B o < 2%3B o%2B%2B) %7B%0A                                                        var r %3D L.particles.get()%3B%0A                                                        r %26%26 r.spawn.apply(r%2C Object.values(Z(o %25 2 %3D%3D 0 %3F "left-bottom" %3A "right-bottom")).concat(%60rare-%24%7BObject(I.m)(1%2C 8)%7D%60))%0A                                                    %7D%0A                                                    break%3B%0A                                                %7D%0A                                                case "Epic"%3A %7B%0A                                                    for (var s %3D 0%3B s < 2%3B s%2B%2B) %7B%0A                                                        var i %3D L.particles.get()%3B%0A                                                        i %26%26 i.spawn.apply(i%2C Object.values(Z(s %25 2 %3D%3D 0 %3F "left-shower" %3A "right-shower")).concat(%60epic-%24%7BObject(I.m)(1%2C 8)%7D%60))%0A                                                    %7D%0A                                                    break%3B%0A                                                %7D%0A                                                case "Legendary"%3A %7B%0A                                                    for (var l %3D 0%3B l < 3%3B l%2B%2B) %7B%0A                                                        var c %3D L.particles.get()%3B%0A                                                        c %26%26 c.spawn.apply(c%2C Object.values(Z("top")).concat(%60legendary-%24%7BObject(I.m)(1%2C 8)%7D%60))%0A                                                    %7D%0A                                                    break%3B%0A                                                %7D%0A                                                case "Chroma"%3A %7B%0A                                                    for (var u %3D 0%3B u < 3%3B u%2B%2B) %7B%0A                                                        var d %3D L.particles.get()%3B%0A                                                        d %26%26 d.spawn.apply(d%2C Object.values(Z(u %25 2 %3D%3D 0 %3F "left-diamond" %3A "right-diamond")).concat(%60chroma-%24%7BObject(I.m)(1%2C 8)%7D%60))%0A                                                    %7D%0A                                                    break%3B%0A                                                %7D%0A                                            %7D%0A                                            this.nextParticle %3D 20%3B%0A                                            this.numExplosions > 0 %26%26 (this.numExplosions %3D Math.max(this.numExplosions - 1%2C 0))%3B%0A                                        %7D%0A                                    %7D%0A                                %7D%0A                                stateNode.setState(%7B%0A                                    loadingPack%3A false%2C%0A                                    openPack%3A true%2C%0A                                    unlockedBlook%3A blook%2C%0A                                    tokens%3A stateNode.state.tokens%2C%0A                                    newUnlock%3A true%2C%0A                                    game%3A %7B%0A                                        type%3A phaser.WEBGL%2C%0A                                        parent%3A "phaser-market"%2C%0A                                        width%3A "100%25"%2C%0A                                        height%3A "100%25"%2C%0A                                        scale%3A %7B%0A                                            mode%3A phaser.Scale.NONE%2C%0A                                            autoCenter%3A phaser.Scale.CENTER_BOTH%0A                                        %7D%2C%0A                                        transparent%3A true%2C%0A                                        physics%3A %7B%0A                                            default%3A "arcade"%0A                                        %7D%2C%0A                                        scene%3A new Particles(Object.entries(Object.values(webpack.c).find(x %3D> Object.values(x.exports%3F.a %7C%7C %7B%7D)%5B0%5D%3F.set).exports.a).reduce((a%2C b) %3D> (Object.values(webpack.c).find(x %3D> x.exports.a%3F.Breakfast %3D%3D 15).exports.a%5Bb%5B1%5D.set%5D %26%26 (a%5Bb%5B0%5D%5D %3D b%5B1%5D)%2C a)%2C %7B%7D)%5Bblook%5D.rarity)%0A                                    %7D%2C%0A                                    canOpen%3A true%0A                                %7D)%3B%0A                            %7D else alert("This can only be ran on the market page!")%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Use Any Blook"%2C%0A                        description%3A "Allows you to play as any blook"%2C%0A                        run%3A function () %7B%0A                            const %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            const blooks %3D webpackJsonp.push(%5B%5B%5D%2C %7B %5B'1234'%5D%3A (_%2C a%2C b) %3D> %7B a.webpack %3D b %7D %7D%2C %5B%5B'1234'%5D%5D%5D).webpack("MDrD").a%3B%0A                            if (location.pathname %3D%3D "%2Fblooks") stateNode.setState(%7B blookData%3A Object.keys(blooks).reduce((a%2C b) %3D> (a%5Bb%5D %3D (stateNode.state.blookData%5Bb%5D %7C%7C 1)%2C a)%2C %7B%7D)%2C allSets%3A Object.values(blooks).reduce((a%2C b) %3D> (a.includes(b.set) %3F a %3A a.concat(b.set))%2C %5B%5D) %7D)%3B%0A                            else if (Array.isArray(stateNode.state.unlocks)) stateNode.setState(%7B unlocks%3A Object.keys(blooks) %7D)%3B%0A                            else stateNode.setState(%7B unlocks%3A blooks %7D)%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Unlock Plus Gamemodes"%2C%0A                        description%3A "Allows you to play any gamemode that is plus only"%2C%0A                        run%3A function () %7B%0A                            Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner.stateNode.setState(%7B plus%3A true %7D)%3B%0A                        %7D%0A                    %7D%0A                %5D%2C%0A                brawl%3A %5B%0A                    %7B%0A                        name%3A "Double Enemy XP"%2C%0A                        description%3A "Doubles enemy XP drop value"%2C%0A                        run%3A function () %7B%0A                            for (const collider of Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner.stateNode.state.game.scene.physics.world.colliders._active.filter(x %3D> x.callbackContext%3F.toString().includes('invulnerableTime'))) %7B%0A                                const enemies %3D collider.object2%3B%0A                                let _start %3D enemies.classType.prototype.start%3B%0A                                enemies.classType.prototype.start %3D function () %7B _start.apply(this%2C arguments)%2C this.val *%3D 2 %7D%0A                                enemies.children.entries.forEach(e %3D> e.val *%3D 2)%3B%0A                            %7D%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Half Enemy Speed"%2C%0A                        description%3A "Makes enemies move 2x slower"%2C%0A                        run%3A function () %7B%0A                            for (const collider of Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner.stateNode.state.game.scene.physics.world.colliders._active.filter(x %3D> x.callbackContext%3F.toString().includes('invulnerableTime'))) %7B%0A                                const enemies %3D collider.object2%3B%0A                                let _start %3D enemies.classType.prototype.start%3B%0A                                enemies.classType.prototype.start %3D function () %7B _start.apply(this%2C arguments)%2C this.speed *%3D .5 %7D%0A                                enemies.children.entries.forEach(e %3D> e.speed *%3D .5)%3B%0A                            %7D%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Instant Kill"%2C%0A                        description%3A "Sets all enemies health to 1"%2C%0A                        run%3A function () %7B%0A                            for (const collider of Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner.stateNode.state.game.scene.physics.world.colliders._active.filter(x %3D> x.callbackContext%3F.toString().includes('invulnerableTime'))) %7B%0A                                const enemies %3D collider.object2%3B%0A                                let _start %3D enemies.classType.prototype.start%3B%0A                                enemies.classType.prototype.start %3D function () %7B _start.apply(this%2C arguments)%2C this.hp %3D 1 %7D%0A                                enemies.children.entries.forEach(e %3D> e.hp %3D 1)%3B%0A                            %7D%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Invincibility"%2C%0A                        description%3A "Makes you invincible"%2C%0A                        run%3A function () %7B%0A                            for (const collider of Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner.stateNode.state.game.scene.physics.world.colliders._active.filter(x %3D> x.callbackContext%3F.toString().includes('invulnerableTime'))) collider.collideCallback %3D () %3D> %7B %7D%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Magnet"%2C%0A                        description%3A "Pulls all xp towards you"%2C%0A                        run%3A function () %7B%0A                            Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner.stateNode.state.game.scene.physics.world.colliders._active.find(x %3D> x.collideCallback%3F.toString().includes('magnetTime')).collideCallback(%7B active%3A true %7D%2C %7B active%3A true%2C setActive() %7B %7D%2C setVisible() %7B %7D %7D)%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Max Current Abilities"%2C%0A                        description%3A "Maxes out all your current abilities"%2C%0A                        run%3A function () %7B%0A                            const %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            for (const %5Bability%2C level%5D of Object.entries(stateNode.state.abilities)) for (let i %3D 0%3B i < (10 - level)%3B i%2B%2B) stateNode.state.game.scene.game.events.emit("level up"%2C ability%2C stateNode.state.abilities%5Bability%5D%2B%2B)%3B%0A                            stateNode.setState(%7B%0A                                level%3A stateNode.state.game.scene.level %3D %5B1%2C 3%2C 5%2C 10%2C 15%2C 25%2C 35%5D.sort((a%2C b) %3D> Math.abs(a - stateNode.state.level) - Math.abs(b - stateNode.state.level))%5B0%5D - 1%0A                            %7D)%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Next Level"%2C%0A                        description%3A "Skips to the next level"%2C%0A                        run%3A function () %7B%0A                            let %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            let %7B object1%3A player%2C object2%3A xp %7D %3D stateNode.state.game.scene.physics.world.colliders._active.find(x %3D> x.collideCallback%3F.toString().includes('emit("xp"'))%3B%0A                            xp.get().spawn(player.x%2C player.y%2C ((e) %3D> 1 %3D%3D%3D e %3F 1 %3A e < 5 %3F 5 %3A e < 10 %3F 10 %3A e < 20 %3F 20 %3A e < 30 %3F 30 %3A e < 40 %3F 40 %3A e < 50 %3F 50 %3A 100)(stateNode.state.level) - stateNode.xp)%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Remove Obstacles"%2C%0A                        description%3A "Removes all rocks and obstacles"%2C%0A                        run%3A function () %7B%0A                            Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner.stateNode.state.game.scene.physics.world.bodies.entries.forEach(body %3D> %7B%0A                                try %7B%0A                                    if (body.gameObject.frame.texture.key.includes("obstacle")) body.gameObject.destroy()%3B%0A                                %7D catch %7B %7D%0A                            %7D)%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Kill Enemies"%2C%0A                        description%3A "Kills all current enemies"%2C%0A                        run%3A function () %7B%0A                            Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner.stateNode.state.game.scene.physics.world.bodies.entries.forEach(x %3D> x%3F.gameObject%3F.receiveDamage%3F.(x.gameObject.hp%2C 1))%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Reset Health"%2C%0A                        description%3A "Resets health and gives invincibility for 3 seconds"%2C%0A                        run%3A function () %7B%0A                            Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner.stateNode.state.game.scene.game.events._events.respawn.fn()%3B%0A                        %7D%0A                    %7D%0A                %5D%2C%0A                cafe%3A %5B%0A                    %7B%0A                        name%3A "Max Items"%2C%0A                        description%3A "Maxes out items in the shop (Only usable in the shop)"%2C%0A                        run%3A function () %7B%0A                            let i %3D document.createElement('iframe')%3B%0A                            document.body.append(i)%3B%0A                            window.alert %3D i.contentWindow.alert.bind(window)%3B%0A                            i.remove()%3B%0A                            if (window.location.pathname !%3D%3D "%2Fcafe%2Fshop") alert("This can only be run in the shop")%3B%0A                            else %7B%0A                                const %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                                stateNode.setState(%7B items%3A Object.fromEntries(Object.entries(stateNode.state.items).map(x %3D> %5Bx%5B0%5D%2C 5%5D)) %7D)%3B%0A                            %7D%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Remove Customers"%2C%0A                        description%3A "Skips the current customers (Not usable in the shop)"%2C%0A                        run%3A function () %7B%0A                            const %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            stateNode.state.customers.forEach((customer%2C i) %3D> Object.keys(customer).length %26%26 stateNode.removeCustomer(i%2C true))%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Reset Abilities"%2C%0A                        description%3A "Resets used abilities in shop (Only usable in the shop)"%2C%0A                        run%3A function () %7B%0A                            let i %3D document.createElement('iframe')%3B%0A                            document.body.append(i)%3B%0A                            window.alert %3D i.contentWindow.alert.bind(window)%3B%0A                            i.remove()%3B%0A                            if (window.location.pathname !%3D%3D "%2Fcafe%2Fshop") alert("This can only be run in the shop")%3B%0A                            else %7B%0A                                const %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                                stateNode.setState(%7B abilities%3A Object.fromEntries(Object.entries(stateNode.state.abilities).map(x %3D> %5Bx%5B0%5D%2C 5%5D)) %7D)%3B%0A                            %7D%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Set Cash"%2C%0A                        description%3A "Sets cafe cash"%2C%0A                        inputs%3A %5B%7B%0A                            name%3A "Amount"%2C%0A                            type%3A "number"%0A                        %7D%5D%2C%0A                        run%3A function (cafeCash) %7B%0A                            let %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            stateNode.setState(%7B cafeCash %7D)%3B%0A                            stateNode.props.liveGameController.setVal(%7B%0A                                path%3A %60c%2F%24%7BstateNode.props.client.name%7D%60%2C%0A                                val%3A %7B%0A                                    b%3A stateNode.props.client.blook%2C%0A                                    ca%3A cafeCash%0A                                %7D%0A                            %7D)%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Stock Food"%2C%0A                        description%3A "Stocks all food to 99 (Not usable in the shop)"%2C%0A                        run%3A function () %7B%0A                            let i %3D document.createElement('iframe')%3B%0A                            document.body.append(i)%3B%0A                            window.alert %3D i.contentWindow.alert.bind(window)%3B%0A                            i.remove()%3B%0A                            if (window.location.pathname !%3D%3D "%2Fcafe") alert("This can't be run in the shop")%3B%0A                            else %7B%0A                                const %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                                stateNode.setState(%7B foods%3A stateNode.state.foods.map(e %3D> (%7B ...e%2C stock%3A 99%2C level%3A 5 %7D)) %7D)%3B%0A                            %7D%0A                        %7D%0A                    %7D%0A                %5D%2C%0A                crypto%3A %5B%0A                    %7B%0A                        name%3A "Choice ESP"%2C%0A                        description%3A "Shows what each choice will give you"%2C%0A                        type%3A "toggle"%2C%0A                        enabled%3A false%2C%0A                        data%3A null%2C%0A                        run%3A function () %7B%0A                            if (!this.enabled) %7B%0A                                this.enabled %3D true%3B%0A                                this.data %3D setInterval(() %3D> %7B%0A                                    let %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                                    let %7B text %7D %3D stateNode.state.choices%5B0%5D%3B%0A                                    let chest %3D document.querySelector('%5Bclass%5E%3Dstyles__feedbackContainer___%5D')%3B%0A                                    if (chest.children.length <%3D 4) %7B%0A                                        let choice %3D document.createElement('div')%3B%0A                                        choice.style.color %3D "white"%3B%0A                                        choice.style.fontFamily %3D "Inconsolata%2CHelvetica%2Cmonospace%2Csans-serif"%3B%0A                                        choice.style.fontSize %3D "2em"%3B%0A                                        choice.style.display %3D "flex"%3B%0A                                        choice.style.justifyContent %3D "center"%3B%0A                                        choice.style.marginTop %3D "675px"%3B%0A                                        choice.innerText %3D text%3B%0A                                        chest.append(choice)%3B%0A                                    %7D%0A                                %7D%2C 50)%3B%0A                            %7D else %7B%0A                                this.enabled %3D false%3B%0A                                clearInterval(this.data)%3B%0A                                this.data %3D null%3B%0A                            %7D%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Password ESP"%2C%0A                        description%3A "Highlights the correct password"%2C%0A                        type%3A "toggle"%2C%0A                        enabled%3A false%2C%0A                        data%3A null%2C%0A                        run%3A function () %7B%0A                            if (!this.enabled) %7B%0A                                this.enabled %3D true%3B%0A                                this.data %3D setInterval(() %3D> %7B%0A                                    let %7B state %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner.stateNode%3B%0A                                    if (state.stage %3D%3D "hack") %5B...document.querySelector('div%5Bclass%5E%3Dstyles__buttonContainer%5D').children%5D.forEach(button %3D> %7B%0A                                        if (button.innerText %3D%3D state.correctPassword) return%3B%0A                                        button.style.outlineColor %3D "rgba(255%2C 64%2C 64%2C 0.8)"%3B%0A                                        button.style.backgroundColor %3D "rgba(255%2C 64%2C 64%2C 0.8)"%3B%0A                                        button.style.textShadow %3D "0 0 1px %23f33"%3B%0A                                    %7D)%3B%0A                                %7D%2C 50)%3B%0A                            %7D else %7B%0A                                this.enabled %3D false%3B%0A                                clearInterval(this.data)%3B%0A                                this.data %3D null%3B%0A                            %7D%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Always Triple"%2C%0A                        description%3A "Always get triple crypto"%2C%0A                        type%3A "toggle"%2C%0A                        enabled%3A false%2C%0A                        data%3A null%2C%0A                        run%3A function () %7B%0A                            if (!this.enabled) %7B%0A                                this.enabled %3D true%3B%0A                                this.data %3D setInterval(() %3D> Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner.stateNode.setState(%7B choices%3A %5B%7B type%3A "mult"%2C val%3A 3%2C rate%3A .075%2C blook%3A "Brainy Bot"%2C text%3A "Triple Crypto" %7D%5D %7D)%2C 50)%3B%0A                            %7D else %7B%0A                                this.enabled %3D false%3B%0A                                clearInterval(this.data)%3B%0A                                this.data %3D null%3B%0A                            %7D%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Auto Guess"%2C%0A                        description%3A "Automatically guess the correct password"%2C%0A                        type%3A "toggle"%2C%0A                        enabled%3A false%2C%0A                        data%3A null%2C%0A                        run%3A function () %7B%0A                            if (!this.enabled) %7B%0A                                this.enabled %3D true%3B%0A                                this.data %3D setInterval(() %3D> %7B%0A                                    let %7B state %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner.stateNode%3B%0A                                    if (state.stage %3D%3D "hack") for (const button of document.querySelector('div%5Bclass%5E%3Dstyles__buttonContainer%5D').children) button.innerText %3D%3D state.correctPassword %26%26 button.click()%3B%0A                                %7D%2C 50)%3B%0A                            %7D else %7B%0A                                this.enabled %3D false%3B%0A                                clearInterval(this.data)%3B%0A                                this.data %3D null%3B%0A                            %7D%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Remove Hack"%2C%0A                        description%3A ""%2C%0A                        run%3A function () %7B%0A                            Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner.stateNode.setState(%7B hack%3A "" %7D)%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Set Crypto"%2C%0A                        description%3A "Sets crypto"%2C%0A                        inputs%3A %5B%7B%0A                            name%3A "Amount"%2C%0A                            type%3A "number"%0A                        %7D%5D%2C%0A                        run%3A function (amount) %7B%0A                            let %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            stateNode.setState(%7B crypto%3A amount%2C crypto2%3A amount %7D)%3B%0A                            stateNode.props.liveGameController.setVal(%7B%0A                                path%3A "c%2F".concat(stateNode.props.client.name)%2C%0A                                val%3A %7B%0A                                    b%3A stateNode.props.client.blook%2C%0A                                    p%3A stateNode.state.password%2C%0A                                    cr%3A amount%0A                                %7D%0A                            %7D)%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Set Password"%2C%0A                        description%3A "Sets hacking password"%2C%0A                        inputs%3A %5B%7B%0A                            name%3A "Custom Password"%2C%0A                            type%3A "string"%0A                        %7D%5D%2C%0A                        run%3A function (password) %7B%0A                            let %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            stateNode.setState(%7B password %7D)%3B%0A                            stateNode.props.liveGameController.setVal(%7B%0A                                path%3A "c%2F".concat(stateNode.props.client.name)%2C%0A                                val%3A %7B%0A                                    b%3A stateNode.props.client.blook%2C%0A                                    p%3A password%2C%0A                                    cr%3A stateNode.state.crypto%0A                                %7D%0A                            %7D)%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Steal Player's Crypto"%2C%0A                        description%3A "Steals all of someone's crypto"%2C%0A                        inputs%3A %5B%7B%0A                            name%3A "Player"%2C%0A                            type%3A "options"%2C%0A                            options%3A () %3D> %7B%0A                                let %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                                return new Promise(res %3D> stateNode.props.liveGameController._liveApp %3F stateNode.props.liveGameController.getDatabaseVal("c"%2C (players) %3D> players %26%26 res(Object.keys(players))) %3A res(%5B%5D))%3B%0A                            %7D%0A                        %7D%5D%2C%0A                        run%3A function (target) %7B%0A                            let %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            stateNode.props.liveGameController.getDatabaseVal("c"%2C (players) %3D> %7B%0A                                if (players %26%26 Object.keys(players).map(x %3D> x.toLowerCase()).includes(target.toLowerCase())) %7B%0A                                    let %5Bplayer%2C %7B cr %7D%5D %3D Object.entries(players).find((%5Bname%5D) %3D> name.toLowerCase() %3D%3D target.toLowerCase())%3B%0A                                    stateNode.setState(%7B crypto%3A stateNode.state.crypto %2B cr%2C crypto2%3A stateNode.state.crypto %2B cr %7D)%3B%0A                                    stateNode.props.liveGameController.setVal(%7B%0A                                        path%3A "c%2F".concat(stateNode.props.client.name)%2C%0A                                        val%3A %7B%0A                                            b%3A stateNode.props.client.blook%2C%0A                                            p%3A stateNode.state.password%2C%0A                                            cr%3A stateNode.state.crypto %2B cr%2C%0A                                            tat%3A %60%24%7Bplayer%7D%3A%24%7Bcr%7D%60%0A                                        %7D%0A                                    %7D)%3B%0A                                %7D%0A                            %7D)%3B%0A                        %7D%0A                    %7D%0A                %5D%2C%0A                defense%3A %5B%0A                    %7B%0A                        name%3A "Earthquake"%2C%0A                        description%3A "Shuffles around towers"%2C%0A                        run%3A function () %7B%0A                            let %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            stateNode.setState(%7B%0A                                eventName%3A "Earthquake"%2C%0A                                event%3A %7B%0A                                    short%3A "e"%2C%0A                                    color%3A "%23805500"%2C%0A                                    icon%3A "fas fa-mountain"%2C%0A                                    desc%3A "All of your towers get mixed up"%2C%0A                                    rate%3A .02%0A                                %7D%2C%0A                                buyTowerName%3A ""%2C%0A                                buyTower%3A %7B%7D%0A                            %7D%2C () %3D> stateNode.eventTimeout %3D setTimeout(() %3D> stateNode.setState(%7B event%3A %7B%7D%2C eventName%3A "" %7D)%2C 6e3))%3B%0A                            stateNode.tiles.forEach(row %3D> row.forEach((col%2C i) %3D> col %3D%3D%3D 3 %26%26 (row%5Bi%5D %3D 0)))%3B%0A                            let tiles %3D stateNode.tiles.flatMap((_%2C y) %3D> _.map((__%2C x) %3D> __ %3D%3D%3D 0 %26%26 (%7B x%2C y %7D))).filter(Boolean).sort(() %3D> .5 - Math.random())%3B%0A                            stateNode.towers.forEach(tower %3D> %7B%0A                                let %7B x%2C y %7D %3D tiles.shift()%3B%0A                                tower.move(x%2C y%2C stateNode.tileSize)%3B%0A                                stateNode.tiles%5By%5D%5Bx%5D %3D 3%3B%0A                            %7D)%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Max Tower Stats"%2C%0A                        description%3A "Makes all placed towers overpowered"%2C%0A                        run%3A function () %7B%0A                            let %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            stateNode.towers.forEach(tower %3D> %7B%0A                                tower.range %3D 100%3B%0A                                tower.fullCd %3D tower.cd %3D 0%3B%0A                                tower.damage %3D 1e6%3B%0A                            %7D)%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Remove Ducks"%2C%0A                        description%3A "Removes ducks"%2C%0A                        run%3A function () %7B%0A                            let %7B stateNode%3A %7B ducks%2C tiles %7D %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            ducks.forEach(x %3D> %7B tiles%5Bx.y%5D%5Bx.x%5D %3D 0%3B %7D)%3B%0A                            ducks.length %3D 0%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Remove Enemies"%2C%0A                        description%3A "Removes all the enemies"%2C%0A                        run%3A function () %7B%0A                            let %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            stateNode.enemies %3D stateNode.futureEnemies %3D %5B%5D%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Remove Obstacles"%2C%0A                        description%3A "Lets you place towers anywhere"%2C%0A                        run%3A function () %7B%0A                            let %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            stateNode.tiles %3D stateNode.tiles.map(row %3D> row.fill(0))%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Set Damage"%2C%0A                        description%3A "Sets damage"%2C%0A                        inputs%3A %5B%7B%0A                            name%3A "Damage"%2C%0A                            type%3A "number"%0A                        %7D%5D%2C%0A                        run%3A function (dmg) %7B%0A                            Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner.stateNode.dmg %3D dmg%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Set Round"%2C%0A                        description%3A "Sets the current round"%2C%0A                        inputs%3A %5B%7B%0A                            name%3A "Round"%2C%0A                            type%3A "number"%0A                        %7D%5D%2C%0A                        run%3A function (round) %7B%0A                            Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner.stateNode.setState(%7B round %7D)%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Set Tokens"%2C%0A                        description%3A "Sets the amount of tokens you have"%2C%0A                        inputs%3A %5B%7B%0A                            name%3A "Tokens"%2C%0A                            type%3A "number"%0A                        %7D%5D%2C%0A                        run%3A function (tokens) %7B%0A                            Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner.stateNode.setState(%7B tokens %7D)%3B%0A                        %7D%0A                    %7D%0A                %5D%2C%0A                defense2%3A %5B%0A                    %7B%0A                        name%3A "Max Tower Stats"%2C%0A                        description%3A "Makes all placed towers overpowered"%2C%0A                        run%3A function () %7B%0A                            Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner.stateNode.state.towers.forEach(tower %3D> %7B%0A                                tower.stats.dmg %3D 1e6%3B%0A                                tower.stats.fireRate %3D 50%3B%0A                                tower.stats.ghostDetect %3D true%3B%0A                                tower.stats.maxTargets %3D 1e6%3B%0A                                tower.stats.numProjectiles %3D 100%3B%0A                                tower.stats.range %3D 100%3B%0A                            %7D)%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Kill Enemies"%2C%0A                        description%3A "Kills all the enemies"%2C%0A                        run%3A function () %7B%0A                            let %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            stateNode.state.game.scene.enemyQueue.length %3D 0%3B%0A                            stateNode.state.game.scene.physics.world.bodies.entries.forEach(x %3D> x%3F.gameObject%3F.receiveDamage%3F.(x.gameObject.hp%2C 1))%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Set Coins"%2C%0A                        description%3A "Sets coins"%2C%0A                        inputs%3A %5B%7B%0A                            name%3A "Coins"%2C%0A                            type%3A "number"%0A                        %7D%5D%2C%0A                        run%3A function (coins) %7B%0A                            Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner.stateNode.setState(%7B coins %7D)%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Set Health"%2C%0A                        description%3A "Sets the amount of health you have"%2C%0A                        inputs%3A %5B%7B%0A                            name%3A "Health"%2C%0A                            type%3A "number"%0A                        %7D%5D%2C%0A                        run%3A function (health) %7B%0A                            Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner.stateNode.setState(%7B health %7D)%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Set Round"%2C%0A                        description%3A "Sets the current round"%2C%0A                        inputs%3A %5B%7B%0A                            name%3A "Round"%2C%0A                            type%3A "number"%0A                        %7D%5D%2C%0A                        run%3A function (round) %7B%0A                            Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner.stateNode.setState(%7B round %7D)%3B%0A                        %7D%0A                    %7D%2C%0A                %5D%2C%0A                dinos%3A %5B%0A                    %7B%0A                        name%3A "Auto Choose"%2C%0A                        description%3A "Automatically choose the best fossil when excavating"%2C%0A                        type%3A "toggle"%2C%0A                        enabled%3A false%2C%0A                        data%3A null%2C%0A                        run%3A function () %7B%0A                            if (!this.enabled) %7B%0A                                this.enabled %3D true%3B%0A                                this.data %3D setInterval(() %3D> %7B%0A                                    const %7B webpack %7D %3D webpackJsonp.push(%5B%5B%5D%2C %7B %5B'1234'%5D%3A (_%2C a%2C b) %3D> %7B a.webpack %3D b %7D%2C %7D%2C %5B%5B'1234'%5D%5D%5D)%3B%0A                                    const getFossils %3D (() %3D> %7B %2F* this is for when ben does funny webpack update stuff *%2F%0A                                        const func %3D Object.values(webpack('74sb')).find(x %3D> x.toString().includes('rate'))%3B%0A                                        return () %3D> func(%5B%7B type%3A "fossil"%2C val%3A 10%2C rate%3A .1%2C blook%3A "Amber" %7D%2C %7B type%3A "fossil"%2C val%3A 25%2C rate%3A .1%2C blook%3A "Dino Egg" %7D%2C %7B type%3A "fossil"%2C val%3A 50%2C rate%3A .175%2C blook%3A "Dino Fossil" %7D%2C %7B type%3A "fossil"%2C val%3A 75%2C rate%3A .175%2C blook%3A "Stegosaurus" %7D%2C %7B type%3A "fossil"%2C val%3A 100%2C rate%3A .15%2C blook%3A "Velociraptor" %7D%2C %7B type%3A "fossil"%2C val%3A 125%2C rate%3A .125%2C blook%3A "Brontosaurus" %7D%2C %7B type%3A "fossil"%2C val%3A 250%2C rate%3A .075%2C blook%3A "Triceratops" %7D%2C %7B type%3A "fossil"%2C val%3A 500%2C rate%3A .025%2C blook%3A "Tyrannosaurus Rex" %7D%2C %7B type%3A "mult"%2C val%3A 1.5%2C rate%3A .05 %7D%2C %7B type%3A "mult"%2C val%3A 2%2C rate%3A .025 %7D%5D%2C 3)%3B%0A                                    %7D)()%3B%0A                                    try %7B%0A                                        let %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                                        if (stateNode.state.stage %3D%3D%3D "excavate") %7B%0A                                            stateNode.state.choices.length %7C%7C (stateNode.state.choices %3D getFossils())%3B%0A                                            let max %3D 0%2C index %3D -1%3B%0A                                            for (let i %3D 0%3B i < stateNode.state.choices.length%3B i%2B%2B) %7B%0A                                                const %7B type%2C val %7D %3D stateNode.state.choices%5Bi%5D%3B%0A                                                const value %3D (type %3D%3D "fossil" %3F stateNode.state.fossils %2B val * stateNode.state.fossilMult %3A stateNode.state.fossils * val) %7C%7C 0%3B%0A                                                if (value <%3D max %26%26 type !%3D "mult") continue%3B%0A                                                max %3D value%2C index %3D i %2B 1%3B%0A                                            %7D%0A                                            document.querySelector('div%5Bclass%5E%3D"styles__rockRow"%5D > div%5Brole%3D"button"%5D%3Anth-child(' %2B index %2B ')').click()%3B%0A                                        %7D%0A                                    %7D catch %7B %7D%0A                                %7D%2C 50)%3B%0A                            %7D else %7B%0A                                this.enabled %3D false%3B%0A                                clearInterval(this.data)%3B%0A                                this.data %3D null%3B%0A                            %7D%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Rock ESP"%2C%0A                        description%3A "Shows what is under the rocks"%2C%0A                        type%3A "toggle"%2C%0A                        enabled%3A false%2C%0A                        data%3A null%2C%0A                        run%3A function () %7B%0A                            if (!this.enabled) %7B%0A                                this.enabled %3D true%3B%0A                                this.data %3D setInterval(() %3D> %7B%0A                                    let %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                                    const rocks %3D %5B...document.querySelector('%5Bclass*%3D"rockButton"%5D').parentElement.children%5D%3B%0A                                    if (!rocks.every(element %3D> element.querySelector('div'))) stateNode.setState(%7B%0A                                        choices%3A %5B%7B type%3A "fossil"%2C val%3A 10%2C rate%3A .1%2C blook%3A "Amber" %7D%2C %7B type%3A "fossil"%2C val%3A 25%2C rate%3A .1%2C blook%3A "Dino Egg" %7D%2C %7B type%3A "fossil"%2C val%3A 50%2C rate%3A .175%2C blook%3A "Dino Fossil" %7D%2C %7B type%3A "fossil"%2C val%3A 75%2C rate%3A .175%2C blook%3A "Stegosaurus" %7D%2C %7B type%3A "fossil"%2C val%3A 100%2C rate%3A .15%2C blook%3A "Velociraptor" %7D%2C %7B type%3A "fossil"%2C val%3A 125%2C rate%3A .125%2C blook%3A "Brontosaurus" %7D%2C %7B type%3A "fossil"%2C val%3A 250%2C rate%3A .075%2C blook%3A "Triceratops" %7D%2C %7B type%3A "fossil"%2C val%3A 500%2C rate%3A .025%2C blook%3A "Tyrannosaurus Rex" %7D%2C %7B type%3A "mult"%2C val%3A 1.5%2C rate%3A .05 %7D%2C %7B type%3A "mult"%2C val%3A 2%2C rate%3A .025 %7D%5D.sort(() %3D> 0.5 - Math.random()).slice(0%2C 3)%0A                                    %7D%2C () %3D> %7B%0A                                        rocks.forEach((element%2C index) %3D> %7B%0A                                            const rock %3D stateNode.state.choices%5Bindex%5D%3B%0A                                            if (element.querySelector('div')) element.querySelector('div').remove()%3B%0A                                            const choice %3D document.createElement("div")%3B%0A                                            choice.style.color %3D "white"%3B%0A                                            choice.style.fontFamily %3D "Macondo"%3B%0A                                            choice.style.fontSize %3D "1em"%3B%0A                                            choice.style.display %3D "flex"%3B%0A                                            choice.style.justifyContent %3D "center"%3B%0A                                            choice.style.transform %3D "translateY(25px)"%3B%0A                                            choice.innerText %3D rock.type %3D%3D%3D "fossil" %3F %60%2B%24%7BMath.round(rock.val * stateNode.state.fossilMult) > 99999999 %3F Object.values(webpack('74sb')).find(x %3D> x.toString().includes('%5Cxd7'))(Math.round(rock.val * stateNode.state.fossilMult)) %3A Math.round(rock.val * stateNode.state.fossilMult)%7D Fossils%60 %3A %60x%24%7Brock.val%7D Fossils Per Excavation%60%3B%3B%0A                                            element.append(choice)%3B%0A                                        %7D)%3B%0A                                    %7D)%3B%0A                                %7D%2C 50)%3B%0A                            %7D else %7B%0A                                this.enabled %3D false%3B%0A                                clearInterval(this.data)%3B%0A                                this.data %3D null%3B%0A                            %7D%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Set Fossils"%2C%0A                        description%3A "Sets the amount of fossils you have"%2C%0A                        inputs%3A %5B%7B%0A                            name%3A "Fossils"%2C%0A                            type%3A "number"%0A                        %7D%5D%2C%0A                        run%3A function (fossils) %7B%0A                            let %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            stateNode.setState(%7B fossils %7D)%3B%0A                            stateNode.props.liveGameController.setVal(%7B%0A                                path%3A %60c%2F%24%7BstateNode.props.client.name%7D%60%2C%0A                                val%3A %7B%0A                                    b%3A stateNode.props.client.blook%2C%0A                                    f%3A fossils%2C%0A                                    ic%3A stateNode.state.isCheating%0A                                %7D%0A                            %7D)%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Set Multiplier"%2C%0A                        description%3A "Sets fossil multiplier"%2C%0A                        inputs%3A %5B%7B%0A                            name%3A "Multiplier"%2C%0A                            type%3A "number"%0A                        %7D%5D%2C%0A                        run%3A function (fossilMult) %7B%0A                            let %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            stateNode.setState(%7B fossilMult %7D)%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Stop Cheating"%2C%0A                        description%3A "Undoes cheating so that you can't be caught"%2C%0A                        run%3A function () %7B%0A                            let %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            stateNode.setState(%7B isCheating%3A false %7D)%3B%0A                            stateNode.props.liveGameController.setVal(%7B%0A                                path%3A %60c%2F%24%7BstateNode.props.client.name%7D%2Fic%60%2C%0A                                val%3A false%0A                            %7D)%3B%0A                        %7D%0A                    %7D%0A                %5D%2C%0A                doom%3A %5B%0A                    %7B%0A                        name%3A "Fill Deck"%2C%0A                        description%3A "Fills your deck with every maxed out card and artifact (Only works on towers page)"%2C%0A                        run%3A function () %7B%0A                            let i %3D document.createElement('iframe')%3B%0A                            document.body.append(i)%3B%0A                            window.alert %3D i.contentWindow.alert.bind(window)%3B%0A                            i.remove()%3B%0A                            if (window.location.pathname %3D%3D "%2Ftower%2Fmap") %7B%0A                                const %7B a%3A artifacts%2C c%3A allCards %7D %3D webpackJsonp.push(%5B%5B%5D%2C %7B %5B''%5D%3A (_%2C a%2C b) %3D> %7B a.cache %3D b.c %7D%2C %7D%2C %5B%5B''%5D%5D%2C%5D).cache%5B"gvfT"%5D.exports%3B%0A                                const %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                                stateNode.props.tower.artifacts %3D Object.keys(artifacts)%3B%0A                                stateNode.props.tower.cards %3D Object.entries(allCards).map((%5Bblook%2C card%5D) %3D> (%7B ...card%2C blook%2C strength%3A 20%2C charisma%3A 20%2C wisdom%3A 20 %7D))%3B%0A                                try %7B stateNode.props.addTowerNode()%3B %7D catch %7B %7D%3B%0A                                stateNode.setState(%7B showDeck%3A false %7D)%3B%0A                            %7D else alert("You need to be on the map to run this cheat!")%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Max Cards"%2C%0A                        description%3A "Maxes out all the cards in your deck"%2C%0A                        run%3A function () %7B%0A                            let i %3D document.createElement('iframe')%3B%0A                            document.body.append(i)%3B%0A                            window.alert %3D i.contentWindow.alert.bind(window)%3B%0A                            i.remove()%3B%0A                            if (window.location.pathname %3D%3D "%2Ftower%2Fmap") %7B%0A                                const %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                                stateNode.props.tower.cards.forEach(card %3D> %7B%0A                                    card.strength %3D 20%3B%0A                                    card.charisma %3D 20%3B%0A                                    card.wisdom %3D 20%3B%0A                                %7D)%3B%0A                            %7D else alert("You need to be on the map to run this cheat!")%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Max Health"%2C%0A                        description%3A "Fills the player's health"%2C%0A                        run%3A function () %7B%0A                            let i %3D document.createElement('iframe')%3B%0A                            document.body.append(i)%3B%0A                            window.alert %3D i.contentWindow.alert.bind(window)%3B%0A                            i.remove()%3B%0A                            if (window.location.pathname %3D%3D "%2Ftower%2Fbattle") Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner.stateNode.setState(%7B myHealth%3A 100 %7D)%3B%0A                            else alert("You need to be in battle to run this cheat!")%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Max Card Stats"%2C%0A                        description%3A "Maxes out player's current card (Only works on attribute select page)"%2C%0A                        run%3A function () %7B%0A                            let i %3D document.createElement('iframe')%3B%0A                            document.body.append(i)%3B%0A                            window.alert %3D i.contentWindow.alert.bind(window)%3B%0A                            i.remove()%3B%0A                            const %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            if (stateNode.state.phase !%3D%3D 'select') alert('You must be on the attribute selection page!')%3B%0A                            else stateNode.setState(%7B myCard%3A %7B ...stateNode.state.myCard%2C strength%3A 20%2C charisma%3A 20%2C wisdom%3A 20 %7D %7D)%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Min Enemy Stats"%2C%0A                        description%3A "Makes the enemy card stats all 0 (Only works on attribute select page)"%2C%0A                        run%3A function () %7B%0A                            let i %3D document.createElement('iframe')%3B%0A                            document.body.append(i)%3B%0A                            window.alert %3D i.contentWindow.alert.bind(window)%3B%0A                            i.remove()%3B%0A                            const %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            if (stateNode.state.phase !%3D%3D 'select') alert('You must be on the attribute selection page!')%3B%0A                            else stateNode.setState(%7B enemyCard%3A %7B ...stateNode.state.enemyCard%2C strength%3A 0%2C charisma%3A 0%2C wisdom%3A 0 %7D %7D)%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Set Coins"%2C%0A                        description%3A "Try's to set amount of tower coins you have"%2C%0A                        inputs%3A %5B%7B%0A                            name%3A "Coins"%2C%0A                            type%3A "number"%0A                        %7D%5D%2C%0A                        run%3A function (coins) %7B%0A                            let i %3D document.createElement('iframe')%3B%0A                            document.body.append(i)%3B%0A                            window.alert %3D i.contentWindow.prompt.bind(window)%3B%0A                            i.remove()%3B%0A                            if (window.location.pathname %3D%3D "%2Ftower%2Fbattle") %7B%0A                                let coins %3D parseInt("0" %2B alert("How many coins would you like%3F"))%3B%0A                                let %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                                try %7B stateNode.props.setTowerCoins(coins)%3B %7D catch %7B %7D%3B%0A                            %7D else alert("You need to be in battle to run this cheat!")%3B%0A                        %7D%0A                    %7D%0A                %5D%2C%0A                factory%3A %5B%0A                    %7B%0A                        name%3A "Choose Blook"%2C%0A                        description%3A "Gives you a blook"%2C%0A                        inputs%3A %5B%7B%0A                            name%3A "Blook"%2C%0A                            type%3A "options"%2C%0A                            options%3A %5B%7B name%3A "Chick"%2C color%3A "%23ffcd05"%2C class%3A "%5CuD83C%5CuDF3D"%2C rarity%3A "Common"%2C cash%3A %5B3%2C 7%2C 65%2C 400%2C 2500%5D%2C time%3A %5B1%2C 1%2C 1%2C 1%2C 1%5D%2C price%3A %5B300%2C 3e3%2C 3e4%2C 2e5%5D %7D%2C %7B name%3A "Chicken"%2C color%3A "%23ed1c24"%2C class%3A "%5CuD83C%5CuDF3D"%2C rarity%3A "Common"%2C cash%3A %5B10%2C 40%2C 200%2C 1400%2C 1e4%5D%2C time%3A %5B5%2C 4%2C 3%2C 2%2C 1%5D%2C price%3A %5B570%2C 4e3%2C 5e4%2C 8e5%5D %7D%2C %7B name%3A "Cow"%2C color%3A "%2358595b"%2C class%3A "%5CuD83C%5CuDF3D"%2C rarity%3A "Common"%2C cash%3A %5B25%2C 75%2C 1500%2C 25e3%2C 25e4%5D%2C time%3A %5B15%2C 10%2C 10%2C 10%2C 5%5D%2C price%3A %5B500%2C 9500%2C 16e4%2C 4e6%5D %7D%2C %7B name%3A "Duck"%2C color%3A "%234ab96d"%2C class%3A "%5CuD83C%5CuDF3D"%2C rarity%3A "Common"%2C cash%3A %5B4%2C 24%2C 200%2C 3e3%2C 4e4%5D%2C time%3A %5B3%2C 3%2C 3%2C 3%2C 3%5D%2C price%3A %5B450%2C 4200%2C 7e4%2C 11e5%5D %7D%2C %7B name%3A "Goat"%2C color%3A "%23c59a74"%2C class%3A "%5CuD83C%5CuDF3D"%2C rarity%3A "Common"%2C cash%3A %5B5%2C 28%2C 200%2C 1300%2C 12e3%5D%2C time%3A %5B3%2C 3%2C 2%2C 2%2C 2%5D%2C price%3A %5B500%2C 6400%2C 45e3%2C 5e5%5D %7D%2C %7B name%3A "Horse"%2C color%3A "%23995b3c"%2C class%3A "%5CuD83C%5CuDF3D"%2C rarity%3A "Common"%2C cash%3A %5B5%2C 20%2C 270%2C 1800%2C 15e3%5D%2C time%3A %5B2%2C 2%2C 2%2C 2%2C 2%5D%2C price%3A %5B550%2C 8200%2C 65e3%2C 6e5%5D %7D%2C %7B name%3A "Pig"%2C color%3A "%23f6a9cb"%2C class%3A "%5CuD83C%5CuDF3D"%2C rarity%3A "Common"%2C cash%3A %5B20%2C 50%2C 1300%2C 8e3%2C 8e4%5D%2C time%3A %5B7%2C 7%2C 7%2C 7%2C 5%5D%2C price%3A %5B400%2C 11e3%2C 8e4%2C 13e5%5D %7D%2C %7B name%3A "Sheep"%2C color%3A "%23414042"%2C class%3A "%5CuD83C%5CuDF3D"%2C rarity%3A "Common"%2C cash%3A %5B6%2C 25%2C 250%2C 1500%2C 11e3%5D%2C time%3A %5B3%2C 3%2C 3%2C 2%2C 2%5D%2C price%3A %5B500%2C 5e3%2C 5e4%2C 43e4%5D %7D%2C %7B name%3A "Cat"%2C color%3A "%23f49849"%2C class%3A "%5CuD83D%5CuDC3E"%2C rarity%3A "Common"%2C cash%3A %5B5%2C 18%2C 170%2C 1700%2C 13e3%5D%2C time%3A %5B2%2C 2%2C 2%2C 2%2C 2%5D%2C price%3A %5B480%2C 5500%2C 6e4%2C 5e5%5D %7D%2C %7B name%3A "Dog"%2C color%3A "%23995b3c"%2C class%3A "%5CuD83D%5CuDC3E"%2C rarity%3A "Common"%2C cash%3A %5B7%2C 25%2C 220%2C 1900%2C 9e3%5D%2C time%3A %5B3%2C 3%2C 2%2C 2%2C 1%5D%2C price%3A %5B460%2C 6600%2C 7e4%2C 73e4%5D %7D%2C %7B name%3A "Goldfish"%2C color%3A "%23f18221"%2C class%3A "%5CuD83D%5CuDC3E"%2C rarity%3A "Common"%2C cash%3A %5B5%2C 40%2C 350%2C 3500%2C 35e3%5D%2C time%3A %5B3%2C 3%2C 3%2C 3%2C 3%5D%2C price%3A %5B750%2C 7200%2C 84e3%2C 95e4%5D %7D%2C %7B name%3A "Rabbit"%2C color%3A "%23e7bf9a"%2C class%3A "%5CuD83D%5CuDC3E"%2C rarity%3A "Common"%2C cash%3A %5B3%2C 18%2C 185%2C 800%2C 7e3%5D%2C time%3A %5B2%2C 2%2C 2%2C 1%2C 1%5D%2C price%3A %5B500%2C 5800%2C 56e3%2C 55e4%5D %7D%2C %7B name%3A "Hamster"%2C color%3A "%23ce9176"%2C class%3A "%5CuD83D%5CuDC3E"%2C rarity%3A "Common"%2C cash%3A %5B10%2C 45%2C 450%2C 4500%2C 45e3%5D%2C time%3A %5B4%2C 4%2C 4%2C 4%2C 4%5D%2C price%3A %5B650%2C 6500%2C 8e4%2C 93e4%5D %7D%2C %7B name%3A "Turtle"%2C color%3A "%23619a3c"%2C class%3A "%5CuD83D%5CuDC3E"%2C rarity%3A "Common"%2C cash%3A %5B23%2C 120%2C 1400%2C 15e3%2C 17e4%5D%2C time%3A %5B10%2C 10%2C 10%2C 10%2C 10%5D%2C price%3A %5B700%2C 8500%2C 11e4%2C 13e5%5D %7D%2C %7B name%3A "Puppy"%2C color%3A "%23414042"%2C class%3A "%5CuD83D%5CuDC3E"%2C rarity%3A "Common"%2C cash%3A %5B4%2C 10%2C 75%2C 500%2C 3e3%5D%2C time%3A %5B1%2C 1%2C 1%2C 1%2C 1%5D%2C price%3A %5B450%2C 4e3%2C 35e3%2C 25e4%5D %7D%2C %7B name%3A "Kitten"%2C color%3A "%2358595b"%2C class%3A "%5CuD83D%5CuDC3E"%2C rarity%3A "Common"%2C cash%3A %5B4%2C 8%2C 60%2C 400%2C 2e3%5D%2C time%3A %5B1%2C 1%2C 1%2C 1%2C 1%5D%2C price%3A %5B350%2C 3500%2C 26e3%2C 17e4%5D %7D%2C %7B name%3A "Bear"%2C color%3A "%23995b3c"%2C class%3A "%5CuD83C%5CuDF32"%2C rarity%3A "Common"%2C cash%3A %5B12%2C 70%2C 550%2C 4500%2C 1e5%5D%2C time%3A %5B7%2C 7%2C 6%2C 5%2C 5%5D%2C price%3A %5B550%2C 5500%2C 63e3%2C 16e5%5D %7D%2C %7B name%3A "Moose"%2C color%3A "%23995b3c"%2C class%3A "%5CuD83C%5CuDF32"%2C rarity%3A "Common"%2C cash%3A %5B8%2C 45%2C 400%2C 3500%2C 26e3%5D%2C time%3A %5B5%2C 5%2C 4%2C 4%2C 3%5D%2C price%3A %5B520%2C 6500%2C 58e3%2C 7e5%5D %7D%2C %7B name%3A "Fox"%2C color%3A "%23f49849"%2C class%3A "%5CuD83C%5CuDF32"%2C rarity%3A "Common"%2C cash%3A %5B7%2C 15%2C 80%2C 550%2C 3e3%5D%2C time%3A %5B2%2C 2%2C 1%2C 1%2C 1%5D%2C price%3A %5B400%2C 4e3%2C 36e3%2C 24e4%5D %7D%2C %7B name%3A "Raccoon"%2C color%3A "%236d6e71"%2C class%3A "%5CuD83C%5CuDF32"%2C rarity%3A "Common"%2C cash%3A %5B5%2C 14%2C 185%2C 1900%2C 19e3%5D%2C time%3A %5B2%2C 2%2C 2%2C 2%2C 2%5D%2C price%3A %5B400%2C 5e3%2C 71e3%2C 8e5%5D %7D%2C %7B name%3A "Squirrel"%2C color%3A "%23d25927"%2C class%3A "%5CuD83C%5CuDF32"%2C rarity%3A "Common"%2C cash%3A %5B3%2C 10%2C 65%2C 470%2C 2600%5D%2C time%3A %5B1%2C 1%2C 1%2C 1%2C 1%5D%2C price%3A %5B420%2C 3600%2C 32e3%2C 21e4%5D %7D%2C %7B name%3A "Owl"%2C color%3A "%23594a42"%2C class%3A "%5CuD83C%5CuDF32"%2C rarity%3A "Common"%2C cash%3A %5B4%2C 17%2C 155%2C 1500%2C 15e3%5D%2C time%3A %5B2%2C 2%2C 2%2C 2%2C 2%5D%2C price%3A %5B500%2C 4800%2C 55e3%2C 58e4%5D %7D%2C %7B name%3A "Hedgehog"%2C color%3A "%233f312b"%2C class%3A "%5CuD83C%5CuDF32"%2C rarity%3A "Common"%2C cash%3A %5B11%2C 37%2C 340%2C 2200%2C 3e4%5D%2C time%3A %5B5%2C 4%2C 3%2C 2%2C 2%5D%2C price%3A %5B540%2C 7e3%2C 77e3%2C 12e5%5D %7D%2C %7B name%3A "Seal"%2C color%3A "%237ca1d5"%2C class%3A "%E2%9D%84%EF%B8%8F"%2C rarity%3A "Common"%2C cash%3A %5B6%2C 17%2C 150%2C 1200%2C 13e3%5D%2C time%3A %5B2%2C 2%2C 2%2C 2%2C 2%5D%2C price%3A %5B480%2C 4500%2C 43e3%2C 52e4%5D %7D%2C %7B name%3A "Arctic Fox"%2C color%3A "%237ca1d5"%2C class%3A "%E2%9D%84%EF%B8%8F"%2C rarity%3A "Common"%2C cash%3A %5B5%2C 18%2C 180%2C 850%2C 8500%5D%2C time%3A %5B2%2C 2%2C 2%2C 1%2C 1%5D%2C price%3A %5B520%2C 550%2C 61e3%2C 68e4%5D %7D%2C %7B name%3A "Snowy Owl"%2C color%3A "%23feda3f"%2C class%3A "%E2%9D%84%EF%B8%8F"%2C rarity%3A "Common"%2C cash%3A %5B5%2C 20%2C 190%2C 1900%2C 16e3%5D%2C time%3A %5B3%2C 3%2C 2%2C 2%2C 2%5D%2C price%3A %5B370%2C 5300%2C 76e3%2C 62e4%5D %7D%2C %7B name%3A "Arctic Hare"%2C color%3A "%237ca1d5"%2C class%3A "%E2%9D%84%EF%B8%8F"%2C rarity%3A "Common"%2C cash%3A %5B6%2C 19%2C 85%2C 900%2C 7e3%5D%2C time%3A %5B2%2C 2%2C 1%2C 1%2C 1%5D%2C price%3A %5B540%2C 5200%2C 66e3%2C 55e4%5D %7D%2C %7B name%3A "Penguin"%2C color%3A "%23fb8640"%2C class%3A "%E2%9D%84%EF%B8%8F"%2C rarity%3A "Common"%2C cash%3A %5B4%2C 21%2C 310%2C 3200%2C 33e3%5D%2C time%3A %5B3%2C 3%2C 3%2C 3%2C 3%5D%2C price%3A %5B400%2C 6500%2C 76e3%2C 87e4%5D %7D%2C %7B name%3A "Baby Penguin"%2C color%3A "%23414042"%2C class%3A "%E2%9D%84%EF%B8%8F"%2C rarity%3A "Common"%2C cash%3A %5B3%2C 8%2C 70%2C 450%2C 2700%5D%2C time%3A %5B1%2C 1%2C 1%2C 1%2C 1%5D%2C price%3A %5B420%2C 3300%2C 33e3%2C 23e4%5D %7D%2C %7B name%3A "Polar Bear"%2C color%3A "%237ca1d5"%2C class%3A "%E2%9D%84%EF%B8%8F"%2C rarity%3A "Common"%2C cash%3A %5B12%2C 75%2C 700%2C 6500%2C 85e3%5D%2C time%3A %5B8%2C 7%2C 6%2C 5%2C 5%5D%2C price%3A %5B630%2C 7e3%2C 91e3%2C 14e5%5D %7D%2C %7B name%3A "Walrus"%2C color%3A "%237d4f33"%2C class%3A "%E2%9D%84%EF%B8%8F"%2C rarity%3A "Common"%2C cash%3A %5B11%2C 46%2C 420%2C 3700%2C 51e3%5D%2C time%3A %5B5%2C 5%2C 4%2C 4%2C 4%5D%2C price%3A %5B550%2C 6200%2C 68e3%2C 1e6%5D %7D%2C %7B name%3A "Tiger"%2C color%3A "%23f18221"%2C class%3A "%5CuD83C%5CuDF34"%2C rarity%3A "Common"%2C cash%3A %5B6%2C 20%2C 100%2C 975%2C 7500%5D%2C time%3A %5B3%2C 3%2C 1%2C 1%2C 1%5D%2C price%3A %5B390%2C 6e3%2C 7e4%2C 61e4%5D %7D%2C %7B name%3A "Jaguar"%2C color%3A "%23fbb040"%2C class%3A "%5CuD83C%5CuDF34"%2C rarity%3A "Common"%2C cash%3A %5B8%2C 28%2C 230%2C 1600%2C 17e3%5D%2C time%3A %5B3%2C 3%2C 2%2C 2%2C 2%5D%2C price%3A %5B390%2C 6e3%2C 7e4%2C 61e4%5D %7D%2C %7B name%3A "Toucan"%2C color%3A "%23ffca34"%2C class%3A "%5CuD83C%5CuDF34"%2C rarity%3A "Common"%2C cash%3A %5B9%2C 20%2C 175%2C 625%2C 3800%5D%2C time%3A %5B2%2C 2%2C 2%2C 1%2C 1%5D%2C price%3A %5B520%2C 4800%2C 42e3%2C 3e5%5D %7D%2C %7B name%3A "Cockatoo"%2C color%3A "%237ca1d5"%2C class%3A "%5CuD83C%5CuDF34"%2C rarity%3A "Common"%2C cash%3A %5B6%2C 35%2C 160%2C 1700%2C 18e3%5D%2C time%3A %5B4%2C 4%2C 2%2C 2%2C 2%5D%2C price%3A %5B500%2C 5e3%2C 63e3%2C 7e5%5D %7D%2C %7B name%3A "Macaw"%2C color%3A "%2300aeef"%2C class%3A "%5CuD83C%5CuDF34"%2C rarity%3A "Common"%2C cash%3A %5B3%2C 8%2C 85%2C 850%2C 8500%5D%2C time%3A %5B1%2C 1%2C 1%2C 1%2C 1%5D%2C price%3A %5B480%2C 5400%2C 62e3%2C 63e4%5D %7D%2C %7B name%3A "Parrot"%2C color%3A "%23ed1c24"%2C class%3A "%5CuD83C%5CuDF34"%2C rarity%3A "Common"%2C cash%3A %5B3%2C 9%2C 90%2C 900%2C 9e3%5D%2C time%3A %5B1%2C 1%2C 1%2C 1%2C 1%5D%2C price%3A %5B540%2C 5700%2C 65e3%2C 69e4%5D %7D%2C %7B name%3A "Panther"%2C color%3A "%232f2c38"%2C class%3A "%5CuD83C%5CuDF34"%2C rarity%3A "Common"%2C cash%3A %5B12%2C 28%2C 215%2C 2100%2C 21e3%5D%2C time%3A %5B5%2C 3%2C 2%2C 2%2C 2%5D%2C price%3A %5B530%2C 6500%2C 76e3%2C 87e4%5D %7D%2C %7B name%3A "Anaconda"%2C color%3A "%238a9143"%2C class%3A "%5CuD83C%5CuDF34"%2C rarity%3A "Common"%2C cash%3A %5B3%2C 15%2C 85%2C 1500%2C 7600%5D%2C time%3A %5B1%2C 2%2C 1%2C 2%2C 1%5D%2C price%3A %5B410%2C 5100%2C 58e3%2C 59e4%5D %7D%2C %7B name%3A "Orangutan"%2C color%3A "%23bc6234"%2C class%3A "%5CuD83C%5CuDF34"%2C rarity%3A "Common"%2C cash%3A %5B13%2C 52%2C 570%2C 4300%2C 7e4%5D%2C time%3A %5B5%2C 5%2C 5%2C 4%2C 4%5D%2C price%3A %5B600%2C 7e3%2C 8e4%2C 14e5%5D %7D%2C %7B name%3A "Capuchin"%2C color%3A "%23e0b0a6"%2C class%3A "%5CuD83C%5CuDF34"%2C rarity%3A "Common"%2C cash%3A %5B4%2C 14%2C 160%2C 780%2C 8200%5D%2C time%3A %5B2%2C 2%2C 2%2C 1%2C 1%5D%2C price%3A %5B390%2C 4700%2C 57e3%2C 68e4%5D %7D%2C %7B name%3A "Elf"%2C color%3A "%23a7d054"%2C class%3A "%E2%9A%94%EF%B8%8F"%2C rarity%3A "Uncommon"%2C cash%3A %5B5e3%2C 15e3%2C 15e4%2C 15e5%2C 1e7%5D%2C time%3A %5B1%2C 1%2C 1%2C 1%2C 1%5D%2C price%3A %5B8e5%2C 9e6%2C 11e7%2C 8e8%5D %7D%2C %7B name%3A "Witch"%2C color%3A "%234ab96d"%2C class%3A "%E2%9A%94%EF%B8%8F"%2C rarity%3A "Uncommon"%2C cash%3A %5B18e3%2C 6e4%2C 4e4%2C 4e6%2C 35e6%5D%2C time%3A %5B3%2C 3%2C 2%2C 2%2C 2%5D%2C price%3A %5B11e5%2C 12e6%2C 15e7%2C 14e8%5D %7D%2C %7B name%3A "Wizard"%2C color%3A "%235a459c"%2C class%3A "%E2%9A%94%EF%B8%8F"%2C rarity%3A "Uncommon"%2C cash%3A %5B19500%2C 65e3%2C 44e4%2C 46e5%2C 4e6%5D%2C time%3A %5B3%2C 3%2C 2%2C 2%2C 2%5D%2C price%3A %5B13e5%2C 135e5%2C 16e7%2C 16e8%5D %7D%2C %7B name%3A "Fairy"%2C color%3A "%23df6d9c"%2C class%3A "%E2%9A%94%EF%B8%8F"%2C rarity%3A "Uncommon"%2C cash%3A %5B18500%2C 6e4%2C 62e4%2C 44e5%2C 38e6%5D%2C time%3A %5B3%2C 3%2C 3%2C 2%2C 2%5D%2C price%3A %5B12e5%2C 125e5%2C 15e6%2C 15e8%5D %7D%2C %7B name%3A "Slime Monster"%2C color%3A "%232fa04a"%2C class%3A "%E2%9A%94%EF%B8%8F"%2C rarity%3A "Uncommon"%2C cash%3A %5B35e3%2C 14e4%2C 1e6%2C 11e6%2C 11e7%5D%2C time%3A %5B5%2C 5%2C 4%2C 4%2C 4%5D%2C price%3A %5B16e5%2C 15e6%2C 2e8%2C 23e8%5D %7D%2C %7B name%3A "Jester"%2C color%3A "%23be1e2d"%2C class%3A "%E2%9A%94%EF%B8%8F"%2C rarity%3A "Rare"%2C cash%3A %5B25e3%2C 1e5%2C 68e4%2C 65e5%2C 32e6%5D%2C time%3A %5B3%2C 3%2C 2%2C 2%2C 1%5D%2C price%3A %5B2e6%2C 21e6%2C 23e7%2C 26e8%5D %7D%2C %7B name%3A "Dragon"%2C color%3A "%232fa04a"%2C class%3A "%E2%9A%94%EF%B8%8F"%2C rarity%3A "Rare"%2C cash%3A %5B36e3%2C 15e4%2C 15e5%2C 15e6%2C 15e7%5D%2C time%3A %5B4%2C 4%2C 4%2C 4%2C 4%5D%2C price%3A %5B23e5%2C 24e6%2C 27e7%2C 3e9%5D %7D%2C %7B name%3A "Unicorn"%2C color%3A "%23f6afce"%2C class%3A "%E2%9A%94%EF%B8%8F"%2C rarity%3A "Epic"%2C cash%3A %5B24e3%2C 15e4%2C 14e5%2C 7e6%2C 75e6%5D%2C time%3A %5B2%2C 2%2C 2%2C 1%2C 1%5D%2C price%3A %5B45e5%2C 45e6%2C 55e7%2C 65e8%5D %7D%2C %7B name%3A "Queen"%2C color%3A "%239e1f63"%2C class%3A "%E2%9A%94%EF%B8%8F"%2C rarity%3A "Rare"%2C cash%3A %5B24e3%2C 95e3%2C 95e4%2C 97e5%2C 95e6%5D%2C time%3A %5B3%2C 3%2C 3%2C 3%2C 3%5D%2C price%3A %5B19e5%2C 2e7%2C 23e7%2C 25e8%5D %7D%2C %7B name%3A "King"%2C color%3A "%23ee2640"%2C class%3A "%E2%9A%94%EF%B8%8F"%2C rarity%3A "Legendary"%2C cash%3A %5B75e3%2C 4e5%2C 6e6%2C 9e7%2C 125e7%5D%2C time%3A %5B5%2C 5%2C 5%2C 5%2C 5%5D%2C price%3A %5B6e6%2C 95e6%2C 16e8%2C 25e9%5D %7D%2C %7B name%3A "Two of Spades"%2C color%3A "%23414042"%2C class%3A "%5CuD83C%5CuDFF0"%2C rarity%3A "Uncommon"%2C cash%3A %5B4500%2C 14e3%2C 14e4%2C 14e5%2C 9e6%5D%2C time%3A %5B1%2C 1%2C 1%2C 1%2C 1%5D%2C price%3A %5B77e4%2C 83e5%2C 98e6%2C 71e7%5D %7D%2C %7B name%3A "Eat Me"%2C color%3A "%23d58c55"%2C class%3A "%5CuD83C%5CuDFF0"%2C rarity%3A "Uncommon"%2C cash%3A %5B13e3%2C 45e3%2C 45e4%2C 45e5%2C 5e7%5D%2C time%3A %5B2%2C 2%2C 2%2C 2%2C 2%5D%2C price%3A %5B13e5%2C 14e6%2C 16e7%2C 2e9%5D %7D%2C %7B name%3A "Drink Me"%2C color%3A "%23dd7399"%2C class%3A "%5CuD83C%5CuDFF0"%2C rarity%3A "Uncommon"%2C cash%3A %5B12e3%2C 4e4%2C 4e5%2C 4e6%2C 45e6%5D%2C time%3A %5B2%2C 2%2C 2%2C 2%2C 2%5D%2C price%3A %5B12e5%2C 12e6%2C 14e7%2C 18e8%5D %7D%2C %7B name%3A "Alice"%2C color%3A "%234cc9f5"%2C class%3A "%5CuD83C%5CuDFF0"%2C rarity%3A "Uncommon"%2C cash%3A %5B13e3%2C 42e3%2C 21e4%2C 21e5%2C 23e6%5D%2C time%3A %5B2%2C 2%2C 1%2C 1%2C 1%5D%2C price%3A %5B12e5%2C 13e6%2C 15e7%2C 19e8%5D %7D%2C %7B name%3A "Queen of Hearts"%2C color%3A "%23d62027"%2C class%3A "%5CuD83C%5CuDFF0"%2C rarity%3A "Uncommon"%2C cash%3A %5B23e3%2C 87e3%2C 62e4%2C 75e5%2C 9e7%5D%2C time%3A %5B4%2C 4%2C 3%2C 3%2C 3%5D%2C price%3A %5B13e5%2C 13e6%2C 18e7%2C 24e8%5D %7D%2C %7B name%3A "Dormouse"%2C color%3A "%2389d6f8"%2C class%3A "%5CuD83C%5CuDFF0"%2C rarity%3A "Rare"%2C cash%3A %5B17e3%2C 68e3%2C 7e5%2C 35e5%2C 35e6%5D%2C time%3A %5B2%2C 2%2C 1%2C 1%2C 1%5D%2C price%3A %5B2e6%2C 22e6%2C 25e7%2C 28e8%5D %7D%2C %7B name%3A "White Rabbit"%2C color%3A "%23ffcd05"%2C class%3A "%5CuD83C%5CuDFF0"%2C rarity%3A "Rare"%2C cash%3A %5B26e3%2C 105e3%2C 11e6%2C 77e5%2C 72e6%5D%2C time%3A %5B3%2C 3%2C 3%2C 2%2C 2%5D%2C price%3A %5B2e6%2C 23e6%2C 28e7%2C 29e8%5D %7D%2C %7B name%3A "Cheshire Cat"%2C color%3A "%23dd7399"%2C class%3A "%5CuD83C%5CuDFF0"%2C rarity%3A "Rare"%2C cash%3A %5B32e3%2C 1e5%2C 9e5%2C 9e6%2C 6e7%5D%2C time%3A %5B4%2C 3%2C 3%2C 3%2C 2%5D%2C price%3A %5B18e5%2C 19e6%2C 22e7%2C 24e8%5D %7D%2C %7B name%3A "Caterpillar"%2C color%3A "%2300c0f3"%2C class%3A "%5CuD83C%5CuDFF0"%2C rarity%3A "Epic"%2C cash%3A %5B1e4%2C 7e4%2C 65e4%2C 75e5%2C 85e6%5D%2C time%3A %5B1%2C 1%2C 1%2C 1%2C 1%5D%2C price%3A %5B42e5%2C 42e6%2C 54e7%2C 69e8%5D %7D%2C %7B name%3A "Mad Hatter"%2C color%3A "%23914f93"%2C class%3A "%5CuD83C%5CuDFF0"%2C rarity%3A "Epic"%2C cash%3A %5B38e3%2C 25e4%2C 15e5%2C 14e6%2C 8e7%5D%2C time%3A %5B3%2C 3%2C 2%2C 2%2C 1%5D%2C price%3A %5B48e5%2C 48e6%2C 52e7%2C 66e8%5D %7D%2C %7B name%3A "King of Hearts"%2C color%3A "%23c62127"%2C class%3A "%5CuD83C%5CuDFF0"%2C rarity%3A "Legendary"%2C cash%3A %5B8e4%2C 42e4%2C 68e5%2C 1e8%2C 15e8%5D%2C time%3A %5B5%2C 5%2C 5%2C 5%2C 5%5D%2C price%3A %5B7e6%2C 11e7%2C 18e8%2C 3e10%5D %7D%2C %7B name%3A "Earth"%2C color%3A "%23416eb5"%2C class%3A "%5CuD83D%5CuDE80"%2C rarity%3A "Uncommon"%2C cash%3A %5B15e3%2C 45e3%2C 6e5%2C 65e5%2C 65e6%5D%2C time%3A %5B3%2C 3%2C 3%2C 3%2C 3%5D%2C price%3A %5B1e6%2C 11e6%2C 15e7%2C 17e8%5D %7D%2C %7B name%3A "Meteor"%2C color%3A "%23c68c3c"%2C class%3A "%5CuD83D%5CuDE80"%2C rarity%3A "Uncommon"%2C cash%3A %5B23e3%2C 65e3%2C 7e5%2C 45e5%2C 2e7%5D%2C time%3A %5B5%2C 4%2C 3%2C 2%2C 1%5D%2C price%3A %5B95e4%2C 13e6%2C 16e7%2C 16e8%5D %7D%2C %7B name%3A "Stars"%2C color%3A "%2319184d"%2C class%3A "%5CuD83D%5CuDE80"%2C rarity%3A "Uncommon"%2C cash%3A %5B1e4%2C 4e4%2C 2e5%2C 2e6%2C 18e6%5D%2C time%3A %5B2%2C 2%2C 1%2C 1%2C 1%5D%2C price%3A %5B14e5%2C 14e6%2C 15e7%2C 15e8%5D %7D%2C %7B name%3A "Alien"%2C color%3A "%238dc63f"%2C class%3A "%5CuD83D%5CuDE80"%2C rarity%3A "Uncommon"%2C cash%3A %5B3e4%2C 1e5%2C 1e6%2C 11e6%2C 85e6%5D%2C time%3A %5B4%2C 4%2C 4%2C 4%2C 4%5D%2C price%3A %5B15e5%2C 17e6%2C 19e7%2C 17e8%5D %7D%2C %7B name%3A "Planet"%2C color%3A "%239dc6ea"%2C class%3A "%5CuD83D%5CuDE80"%2C rarity%3A "Rare"%2C cash%3A %5B25e3%2C 1e5%2C 9e5%2C 9e6%2C 9e7%5D%2C time%3A %5B3%2C 3%2C 3%2C 3%2C 3%5D%2C price%3A %5B2e6%2C 21e6%2C 21e7%2C 24e8%5D %7D%2C %7B name%3A "UFO"%2C color%3A "%23a15095"%2C class%3A "%5CuD83D%5CuDE80"%2C rarity%3A "Rare"%2C cash%3A %5B17e3%2C 7e4%2C 7e5%2C 7e6%2C 7e7%5D%2C time%3A %5B2%2C 2%2C 2%2C 2%2C 2%5D%2C price%3A %5B21e5%2C 23e6%2C 25e7%2C 28e8%5D %7D%2C %7B name%3A "Spaceship"%2C color%3A "%23ffcb29"%2C class%3A "%5CuD83D%5CuDE80"%2C rarity%3A "Epic"%2C cash%3A %5B6e4%2C 32e4%2C 21e5%2C 15e6%2C 85e6%5D%2C time%3A %5B5%2C 4%2C 3%2C 2%2C 1%5D%2C price%3A %5B48e5%2C 46e6%2C 54e7%2C 68e8%5D %7D%2C %7B name%3A "Astronaut"%2C color%3A "%239bd4ee"%2C class%3A "%5CuD83D%5CuDE80"%2C rarity%3A "Legendary"%2C cash%3A %5B45e3%2C 26e4%2C 25e5%2C 38e6%2C 55e7%5D%2C time%3A %5B3%2C 3%2C 2%2C 2%2C 2%5D%2C price%3A %5B65e5%2C 1e8%2C 17e8%2C 27e9%5D %7D%2C %7B name%3A "Lil Bot"%2C color%3A "%233e564a"%2C class%3A "%5CuD83E%5CuDD16"%2C rarity%3A "Uncommon"%2C cash%3A %5B4e3%2C 12e3%2C 18e4%2C 19e5%2C 25e6%5D%2C time%3A %5B1%2C 1%2C 1%2C 1%2C 1%5D%2C price%3A %5B73e4%2C 12e6%2C 13e7%2C 19e8%5D %7D%2C %7B name%3A "Lovely Bot"%2C color%3A "%23f179af"%2C class%3A "%5CuD83E%5CuDD16"%2C rarity%3A "Uncommon"%2C cash%3A %5B16e3%2C 65e3%2C 65e4%2C 48e5%2C 42e6%5D%2C time%3A %5B3%2C 3%2C 3%2C 2%2C 2%5D%2C price%3A %5B13e5%2C 14e6%2C 17e7%2C 16e8%5D %7D%2C %7B name%3A "Angry Bot"%2C color%3A "%23f1613a"%2C class%3A "%5CuD83E%5CuDD16"%2C rarity%3A "Uncommon"%2C cash%3A %5B22e3%2C 85e3%2C 8e5%2C 62e5%2C 65e6%5D%2C time%3A %5B4%2C 4%2C 4%2C 3%2C 3%5D%2C price%3A %5B12e5%2C 13e6%2C 15e7%2C 17e8%5D %7D%2C %7B name%3A "Happy Bot"%2C color%3A "%2351ba6b"%2C class%3A "%5CuD83E%5CuDD16"%2C rarity%3A "Uncommon"%2C cash%3A %5B11e3%2C 45e3%2C 5e5%2C 25e5%2C 3e7%5D%2C time%3A %5B2%2C 2%2C 2%2C 1%2C 1%5D%2C price%3A %5B14e5%2C 15e6%2C 18e7%2C 24e8%5D %7D%2C %7B name%3A "Watson"%2C color%3A "%23d69b5a"%2C class%3A "%5CuD83E%5CuDD16"%2C rarity%3A "Rare"%2C cash%3A %5B24e3%2C 1e5%2C 1e6%2C 1e7%2C 1e8%5D%2C time%3A %5B3%2C 3%2C 3%2C 3%2C 3%5D%2C price%3A %5B2e6%2C 22e6%2C 24e7%2C 26e8%5D %7D%2C %7B name%3A "Buddy Bot"%2C color%3A "%239dc6ea"%2C class%3A "%5CuD83E%5CuDD16"%2C rarity%3A "Rare"%2C cash%3A %5B22e3%2C 95e3%2C 65e4%2C 65e5%2C 65e6%5D%2C time%3A %5B3%2C 3%2C 2%2C 2%2C 2%5D%2C price%3A %5B19e5%2C 21e6%2C 23e7%2C 25e8%5D %7D%2C %7B name%3A "Brainy Bot"%2C color%3A "%239ecf7a"%2C class%3A "%5CuD83E%5CuDD16"%2C rarity%3A "Epic"%2C cash%3A %5B5e4%2C 25e4%2C 21e5%2C 21e6%2C 17e7%5D%2C time%3A %5B4%2C 3%2C 3%2C 3%2C 2%5D%2C price%3A %5B5e6%2C 46e6%2C 5e8%2C 67e8%5D %7D%2C %7B name%3A "Mega Bot"%2C color%3A "%23d71f27"%2C class%3A "%5CuD83E%5CuDD16"%2C rarity%3A "Legendary"%2C cash%3A %5B8e4%2C 43e4%2C 42e5%2C 62e6%2C 1e9%5D%2C time%3A %5B5%2C 5%2C 3%2C 3%2C 3%5D%2C price%3A %5B7e6%2C 12e7%2C 19e8%2C 35e9%5D %7D%5D.map(x %3D> (%7B name%3A x.name%2C value%3A JSON.stringify(x) %7D))%0A                        %7D%5D%2C%0A                        run%3A function (blook) %7B%0A                            let i %3D document.createElement('iframe')%3B%0A                            document.body.append(i)%3B%0A                            window.alert %3D i.contentWindow.alert.bind(window)%3B%0A                            i.remove()%3B%0A                            const %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            if (stateNode.state.blooks.length >%3D 10) alert("Choose a blook to replace")%3B%0A                            stateNode.chooseBlook(JSON.parse(blook))%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Free Upgrades"%2C%0A                        description%3A "Sets upgrade prices to 0 for all current blooks"%2C%0A                        run%3A function () %7B%0A                            let %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            stateNode.setState(state %3D> (%7B ...state%2C blooks%3A state.blooks.map(blook %3D> (%7B ...blook%2C price%3A %5B0%2C 0%2C 0%2C 0%5D %7D)) %7D))%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Max Blooks"%2C%0A                        description%3A "Maxes out all your blooks' levels"%2C%0A                        run%3A function () %7B%0A                            Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner.stateNode.state.blooks.forEach(blook %3D> blook.level %3D 4)%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Remove Glitches"%2C%0A                        description%3A "Removes all enemy glitches"%2C%0A                        run%3A function () %7B%0A                            let %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            stateNode.setState(%7B%0A                                bits%3A 0%2C%0A                                ads%3A %5B%5D%2C%0A                                hazards%3A %5B%5D%2C%0A                                color%3A ""%2C%0A                                lol%3A false%2C%0A                                joke%3A false%2C%0A                                slow%3A false%2C%0A                                dance%3A false%2C%0A                                glitch%3A ""%2C%0A                                glitcherName%3A ""%2C%0A                                glitcherBlook%3A ""%0A                            %7D)%3B%0A                            clearTimeout(stateNode.adTimeout)%3B%0A                            clearInterval(stateNode.hazardInterval)%3B%0A                            clearTimeout(stateNode.nightTimeout)%3B%0A                            clearTimeout(stateNode.glitchTimeout)%3B%0A                            clearTimeout(stateNode.lolTimeout)%3B%0A                            clearTimeout(stateNode.jokeTimeout)%3B%0A                            clearTimeout(stateNode.slowTimeout)%3B%0A                            clearTimeout(stateNode.danceTimeout)%3B%0A                            clearTimeout(stateNode.nameTimeout)%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Send Glitch"%2C%0A                        description%3A "Sends a glitch to everyone else playing"%2C%0A                        inputs%3A %5B%7B%0A                            name%3A "Glitch"%2C%0A                            type%3A "options"%2C%0A                            options%3A Object.entries(%7B lb%3A "Lunch Break"%2C as%3A "Ad Spam"%2C e37%3A "Error 37"%2C nt%3A "Night Time"%2C lo%3A "%23LOL"%2C j%3A "Jokester"%2C sm%3A "Slow Mo"%2C dp%3A "Dance Party"%2C v%3A "Vortex"%2C r%3A "Reverse"%2C f%3A "Flip"%2C m%3A "Micro" %7D).map((%5Bvalue%2C name%5D) %3D> (%7B name%2C value %7D))%0A                        %7D%5D%2C%0A                        run%3A function (val) %7B%0A                            let %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            stateNode.safe %3D true%3B%0A                            stateNode.props.liveGameController.setVal(%7B path%3A %60c%2F%24%7BstateNode.props.client.name%7D%2Ftat%60%2C val %7D)%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Set All MegaBot"%2C%0A                        description%3A "Sets all your blooks to maxed out Mega Bots"%2C%0A                        run%3A function () %7B%0A                            Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner.stateNode.setState(%7B%0A                                blooks%3A new Array(10).fill(%7B%0A                                    name%3A "Mega Bot"%2C%0A                                    color%3A "%23d71f27"%2C%0A                                    class%3A "%F0%9F%A4%96"%2C%0A                                    rarity%3A "Legendary"%2C%0A                                    cash%3A %5B8e4%2C 43e4%2C 42e5%2C 62e6%2C 1e9%5D%2C%0A                                    time%3A %5B5%2C 5%2C 3%2C 3%2C 3%5D%2C%0A                                    price%3A %5B7e6%2C 12e7%2C 19e8%2C 35e9%5D%2C%0A                                    active%3A false%2C%0A                                    level%3A 4%2C%0A                                    bonus%3A 5.5%0A                                %7D)%0A                            %7D)%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Set Cash"%2C%0A                        description%3A "Sets amount of cash you have"%2C%0A                        inputs%3A %5B%7B%0A                            name%3A "Cash"%2C%0A                            type%3A "number"%0A                        %7D%5D%2C%0A                        run%3A function (cash) %7B%0A                            Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner.stateNode.setState(%7B cash %7D)%3B%0A                        %7D%0A                    %7D%0A                %5D%2C%0A                fishing%3A %5B%0A                    %7B%0A                        name%3A "Frenzy"%2C%0A                        description%3A "Sets everyone to frenzy mode"%2C%0A                        run%3A function () %7B%0A                            let %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            stateNode.props.liveGameController.setVal(%7B%0A                                path%3A %60c%2F%24%7BstateNode.props.client.name%7D%60%2C%0A                                val%3A %7B%0A                                    b%3A stateNode.props.client.blook%2C%0A                                    w%3A stateNode.state.weight%2C%0A                                    f%3A "Frenzy"%2C%0A                                    s%3A true%0A                                %7D%0A                            %7D)%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Remove Distractions"%2C%0A                        description%3A "Removes distractions"%2C%0A                        type%3A "toggle"%2C%0A                        enabled%3A false%2C%0A                        data%3A null%2C%0A                        run%3A function () %7B%0A                            if (!this.enabled) %7B%0A                                this.enabled %3D true%3B%0A                                this.data %3D setInterval(() %3D> %7B%0A                                    Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner.stateNode.setState(%7B party%3A "" %7D)%3B%0A                                %7D%2C 50)%3B%0A                            %7D else %7B%0A                                this.enabled %3D false%3B%0A                                clearInterval(this.data)%3B%0A                                this.data %3D null%3B%0A                            %7D%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Send Distraction"%2C%0A                        description%3A "Sends a distraction to everyone"%2C%0A                        inputs%3A %5B%7B%0A                            name%3A "Distraction"%2C%0A                            type%3A "options"%2C%0A                            options%3A %5B"Crab"%2C "Jellyfish"%2C "Frog"%2C "Pufferfish"%2C "Octopus"%2C "Narwhal"%2C "Megalodon"%2C "Blobfish"%2C "Baby Shark"%5D%0A                        %7D%5D%2C%0A                        run%3A function (f) %7B%0A                            let i %3D document.createElement('iframe')%3B%0A                            document.body.append(i)%3B%0A                            window.alert %3D i.contentWindow.alert.bind(window)%3B%0A                            i.remove()%3B%0A                            let %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            stateNode.safe %3D true%3B%0A                            stateNode.props.liveGameController.setVal(%7B%0A                                path%3A %60c%2F%24%7BstateNode.props.client.name%7D%60%2C%0A                                val%3A %7B%0A                                    b%3A stateNode.props.client.blook%2C%0A                                    w%3A stateNode.state.weight%2C f%2C s%3A true%0A                                %7D%0A                            %7D)%3B%0A                            alert(%60Sent a %24%7Bf%7D distraction%60)%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Set Lure"%2C%0A                        description%3A "Sets fishing lure (range 1 - 5)"%2C%0A                        inputs%3A %5B%7B%0A                            name%3A "Lure (1 - 5)"%2C%0A                            type%3A "number"%2C%0A                            min%3A 1%2C%0A                            max%3A 5%0A                        %7D%5D%2C%0A                        run%3A function (lure) %7B%0A                            Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner.stateNode.setState(%7B lure%3A Math.max(Math.min(lure - 1%2C 4)%2C 0) %7D)%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Set Weight"%2C%0A                        description%3A "Sets weight"%2C%0A                        inputs%3A %5B%7B%0A                            name%3A "Weight"%2C%0A                            type%3A "number"%0A                        %7D%5D%2C%0A                        run%3A function (weight) %7B%0A                            let %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            stateNode.setState(%7B weight%2C weight2%3A weight %7D)%3B%0A                            stateNode.props.liveGameController.setVal(%7B%0A                                path%3A %60c%2F%24%7BstateNode.props.client.name%7D%60%2C%0A                                val%3A %7B%0A                                    b%3A stateNode.props.client.blook%2C%0A                                    w%3A weight%2C%0A                                    f%3A %5B"Crab"%2C "Jellyfish"%2C "Frog"%2C "Pufferfish"%2C "Octopus"%2C "Narwhal"%2C "Megalodon"%2C "Blobfish"%2C "Baby Shark"%5D%5BMath.floor(Math.random() * 9)%5D%0A                                %7D%0A                            %7D)%3B%0A                        %7D%0A                    %7D%0A                %5D%2C%0A                flappy%3A %5B%0A                    %7B%0A                        name%3A "Toggle Ghost"%2C%0A                        description%3A "Lets you go through the pipes"%2C%0A                        type%3A "toggle"%2C%0A                        enabled%3A false%2C%0A                        run%3A function () %7B%0A                            this.enabled %3D !this.enabled%3B%0A                            Object.values(document.querySelector("%23phaser-bouncy"))%5B1%5D.children%5B0%5D._owner.stateNode.state.game.scene.physics.world.bodies.entries.forEach(x %3D> x.gameObject.frame.texture.key.startsWith("blook") %26%26 (x.checkCollision.none %3D this.enabled%2C x.gameObject.setAlpha(this.enabled %3F 0.5 %3A 1)))%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Set Score"%2C%0A                        description%3A "Sets flappy blook score"%2C%0A                        inputs%3A %5B%7B%0A                            name%3A "Score"%2C%0A                            type%3A "number"%0A                        %7D%5D%2C%0A                        run%3A function (score) %7B%0A                            Object.values(document.querySelector("%23phaser-bouncy"))%5B1%5D.children%5B0%5D._owner.stateNode.setState(%7B score %7D)%3B%0A                        %7D%0A                    %7D%0A                %5D%2C%0A                gold%3A %5B%0A                    %7B%0A                        name%3A "Always Triple"%2C%0A                        description%3A "Always get triple gold"%2C%0A                        type%3A "toggle"%2C%0A                        enabled%3A false%2C%0A                        data%3A null%2C%0A                        run%3A function () %7B%0A                            let %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            stateNode._choosePrize %7C%7C%3D stateNode.choosePrize%3B%0A                            if (!this.enabled) %7B%0A                                this.enabled %3D true%3B%0A                                this.data %3D setInterval(() %3D> %7B%0A                                    stateNode.choosePrize %3D function (i) %7B%0A                                        stateNode.state.choices%5Bi%5D %3D %7B type%3A "multiply"%2C val%3A 3%2C text%3A "Triple Gold!"%2C blook%3A "Unicorn" %7D%3B%0A                                        stateNode._choosePrize(i)%3B%0A                                    %7D%0A                                %7D%2C 50)%3B%0A                            %7D else %7B%0A                                this.enabled %3D false%3B%0A                                clearInterval(this.data)%3B%0A                                this.data %3D null%3B%0A                                stateNode.choosePrize %3D stateNode._choosePrize %7C%7C stateNode.choosePrize%3B%0A                            %7D%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Auto Choose"%2C%0A                        description%3A "Automatically picks the option that would give you the most gold"%2C%0A                        type%3A "toggle"%2C%0A                        enabled%3A false%2C%0A                        data%3A null%2C%0A                        run%3A function () %7B%0A                            if (!this.enabled) %7B%0A                                this.enabled %3D true%3B%0A                                this.data %3D setInterval(async () %3D> %7B%0A                                    try %7B%0A                                        let %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                                        if (stateNode.state.stage %3D%3D%3D "prize") %7B%0A                                            const players %3D Object.entries(await new Promise(r %3D> stateNode.props.liveGameController.getDatabaseVal("c"%2C c %3D> c %26%26 r(c))) %7C%7C %5B%5D).filter(x %3D> x%5B0%5D !%3D stateNode.props.client.name).sort((a%2C b) %3D> b%5B1%5D.g - a%5B1%5D.g)%5B0%5D%3F.%5B1%5D%3F.g %7C%7C 0%3B%0A                                            let max %3D 0%3B index %3D -1%3B%0A                                            for (let i %3D 0%3B i < stateNode.state.choices.length%3B i%2B%2B) %7B%0A                                                const %7B type%2C val %7D %3D stateNode.state.choices%5Bi%5D%3B%0A                                                let value %3D stateNode.state.gold%3B%0A                                                switch (type) %7B%0A                                                    case "gold"%3A value %3D stateNode.state.gold %2B val %7C%7C stateNode.state.gold%3B break%3B%0A                                                    case "multiply"%3A%0A                                                    case "divide"%3A value %3D Math.round(stateNode.state.gold * val) %7C%7C stateNode.state.gold%3B break%3B%0A                                                    case "swap"%3A value %3D players %7C%7C stateNode.state.gold%3B%0A                                                    case "take"%3A value %3D stateNode.state.gold %2B players * val %7C%7C stateNode.state.gold%3B%0A                                                %7D%0A                                                if ((value %7C%7C 0) <%3D max) continue%3B%0A                                                max %3D value%2C index %3D i %2B 1%3B%0A                                            %7D%0A                                            document.querySelector(%60div%5Bclass%5E%3D'styles__choice%24%7Bindex%7D'%5D%60).click()%3B%0A                                        %7D%0A                                    %7D catch %7B %7D%0A                                %7D%2C 50)%3B%0A                            %7D else %7B%0A                                this.enabled %3D false%3B%0A                                clearInterval(this.data)%3B%0A                                this.data %3D null%3B%0A                            %7D%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Chest ESP"%2C%0A                        description%3A "Shows what each chest will give you"%2C%0A                        type%3A "toggle"%2C%0A                        enabled%3A false%2C%0A                        data%3A null%2C%0A                        run%3A function () %7B%0A                            if (!this.enabled) %7B%0A                                this.enabled %3D true%3B%0A                                this.data %3D setInterval(() %3D> %7B%0A                                    Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner.stateNode.state.choices.forEach((%7B text %7D%2C index) %3D> %7B%0A                                        let chest %3D document.querySelector(%60div%5Bclass%5E%3D'styles__choice%24%7Bindex %2B 1%7D'%5D%60)%3B%0A                                        if (!chest %7C%7C chest.querySelector('div')) return%3B%0A                                        let choice %3D document.createElement('div')%3B%0A                                        choice.style.color %3D "white"%3B%0A                                        choice.style.fontFamily %3D "Eczar"%3B%0A                                        choice.style.fontSize %3D "2em"%3B%0A                                        choice.style.display %3D "flex"%3B%0A                                        choice.style.justifyContent %3D "center"%3B%0A                                        choice.style.transform %3D "translateY(200px)"%3B%0A                                        choice.innerText %3D text%3B%0A                                        chest.append(choice)%3B%0A                                    %7D)%3B%0A                                %7D%2C 50)%3B%0A                            %7D else %7B%0A                                this.enabled %3D false%3B%0A                                clearInterval(this.data)%3B%0A                                this.data %3D null%3B%0A                            %7D%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Reset Players Gold"%2C%0A                        description%3A "Sets a player's gold to 0"%2C%0A                        inputs%3A %5B%7B%0A                            name%3A "Player"%2C%0A                            type%3A "options"%2C%0A                            options%3A () %3D> %7B%0A                                let %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                                return new Promise(res %3D> stateNode.props.liveGameController._liveApp %3F stateNode.props.liveGameController.getDatabaseVal("c"%2C (players) %3D> players %26%26 res(Object.keys(players))) %3A res(%5B%5D))%3B%0A                            %7D%0A                        %7D%5D%2C%0A                        run%3A function (target) %7B%0A                            let %7B stateNode%3A %7B props%2C state %7D %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            props.liveGameController.setVal(%7B%0A                                path%3A "c%2F".concat(props.client.name)%2C%0A                                val%3A %7B%0A                                    b%3A props.client.blook%2C%0A                                    g%3A state.gold%2C%0A                                    tat%3A %60%24%7Btarget%7D%3Aswap%3A0%60%0A                                %7D%0A                            %7D)%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Set Gold"%2C%0A                        description%3A "Sets amount of gold"%2C%0A                        inputs%3A %5B%7B%0A                            name%3A "Gold"%2C%0A                            type%3A "number"%0A                        %7D%5D%2C%0A                        run%3A function (gold) %7B%0A                            let %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            stateNode.setState(%7B gold%2C gold2%3A gold %7D)%3B%0A                            stateNode.props.liveGameController.setVal(%7B%0A                                path%3A "c%2F".concat(stateNode.props.client.name)%2C%0A                                val%3A %7B%0A                                    b%3A stateNode.props.client.blook%2C%0A                                    g%3A gold%0A                                %7D%0A                            %7D)%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Swap Gold"%2C%0A                        description%3A "Swaps gold with someone"%2C%0A                        inputs%3A %5B%7B%0A                            name%3A "Player"%2C%0A                            type%3A "options"%2C%0A                            options%3A () %3D> %7B%0A                                let %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                                return new Promise(res %3D> stateNode.props.liveGameController._liveApp %3F stateNode.props.liveGameController.getDatabaseVal("c"%2C (players) %3D> players %26%26 res(Object.keys(players))) %3A res(%5B%5D))%3B%0A                            %7D%0A                        %7D%5D%2C%0A                        run%3A function (target) %7B%0A                            let %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            stateNode.props.liveGameController.getDatabaseVal("c"%2C (players) %3D> %7B%0A                                if (!players%3F.%5Btarget%5D) return%3B%0A                                let %7B g %7D %3D players%5Btarget%5D%3B%0A                                stateNode.props.liveGameController.setVal(%7B%0A                                    path%3A "c%2F".concat(stateNode.props.client.name)%2C%0A                                    val%3A %7B%0A                                        b%3A stateNode.props.client.blook%2C%0A                                        g%2C%0A                                        tat%3A %60%24%7Btarget%7D%3Aswap%3A%24%7BstateNode.state.gold%7D%60%0A                                    %7D%0A                                %7D)%3B%0A                                stateNode.setState(%7B gold%3A g%2C gold2%3A g %7D)%3B%0A                            %7D)%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Reset All Players' Gold (Testing)"%2C%0A                        description%3A "Set's everyone else's gold to 0"%2C%0A                        run%3A function () %7B%0A                            let i %3D document.createElement('iframe')%3B%0A                            document.body.append(i)%3B%0A                            window.alert %3D i.contentWindow.alert.bind(window)%3B%0A                            i.remove()%3B%0A                            let %7B stateNode%3A %7B props%2C state %7D %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            let count %3D 0%3B%0A                            props.liveGameController.getDatabaseVal("c"%2C async (players) %3D> %7B%0A                                if (players) for (const player of Object.keys(players)) %7B%0A                                    await props.liveGameController.setVal(%7B%0A                                        path%3A "c%2F".concat(props.client.name)%2C%0A                                        val%3A %7B%0A                                            b%3A props.client.blook%2C%0A                                            g%3A state.gold%2C%0A                                            tat%3A %60%24%7Bplayer%7D%3Aswap%3A0%60%0A                                        %7D%0A                                    %7D)%3B%0A                                    count%2B%2B%3B%0A                                %7D%3B%0A                                alert(%60Reset %24%7Bcount%7D players' gold!%60)%3B%0A                            %7D)%3B%0A                        %7D%0A                    %7D%0A                %5D%2C%0A                kingdom%3A %5B%0A                    %7B%0A                        name%3A "Choice ESP"%2C%0A                        description%3A "Shows you what will happen if you say Yes or No"%2C%0A                        type%3A "toggle"%2C%0A                        enabled%3A false%2C%0A                        data%3A null%2C%0A                        run%3A function () %7B%0A                            if (!this.enabled) %7B%0A                                this.enabled %3D true%3B%0A                                let stats %3D %5B'materials'%2C 'people'%2C 'happiness'%2C 'gold'%5D%3B%0A                                let elements %3D Object.fromEntries(%5B...document.querySelectorAll('%5Bclass%5E%3Dstyles__statContainer%5D')%5D.map((container%2C i) %3D> %5Bstats%5Bi%5D%2C container%5D))%3B%0A                                this.data %3D setInterval(() %3D> %7B%0A                                    let %7B guest%3A data%2C phase %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner.stateNode.state%3B%0A                                    if (phase %3D%3D "choice") %7B%0A                                        Array.from(document.getElementsByClassName('choiceESP')).forEach(x %3D> x.remove())%3B%0A                                        Object.entries(data.yes %7C%7C %7B%7D).forEach(x %3D> %7B%0A                                            if (x%5B0%5D %3D%3D 'msg' %7C%7C !stats.includes(x%5B0%5D)) return%3B%0A                                            let element %3D document.createElement('div')%3B%0A                                            element.className %3D 'choiceESP'%3B%0A                                            element.style %3D 'font-size%3A 24px%3B color%3A rgb(75%2C 194%2C 46)%3B font-weight%3A bolder%3B'%3B%0A                                            element.innerText %3D String(x%5B1%5D)%3B%0A                                            elements%5Bx%5B0%5D%5D.appendChild(element)%3B%0A                                        %7D)%3B%0A                                        Object.entries(data.no %7C%7C %7B%7D).forEach(x %3D> %7B%0A                                            if (x%5B0%5D %3D%3D 'msg' %7C%7C !stats.includes(x%5B0%5D)) return%3B%0A                                            let element %3D document.createElement('div')%3B%0A                                            element.className %3D 'choiceESP'%3B%0A                                            element.style %3D 'font-size%3A 24px%3B color%3A darkred%3B font-weight%3A bolder%3B'%3B%0A                                            element.innerText %3D String(x%5B1%5D)%3B%0A                                            elements%5Bx%5B0%5D%5D.appendChild(element)%3B%0A                                        %7D)%3B%0A                                    %7D%0A                                %7D%2C 50)%3B%0A                            %7D else %7B%0A                                this.enabled %3D false%3B%0A                                clearInterval(this.data)%3B%0A                                Array.from(document.getElementsByClassName('choiceESP')).forEach(x %3D> x.remove())%3B%0A                                this.data %3D null%3B%0A                            %7D%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Disable Tax Toucan"%2C%0A                        description%3A "Tax evasion"%2C%0A                        run%3A function () %7B%0A                            Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner.stateNode.taxCounter %3D Number.MAX_VALUE%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Max Stats"%2C%0A                        description%3A "Sets all resources to the max"%2C%0A                        run%3A function () %7B%0A                            Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner.stateNode.setState(%7B materials%3A 100%2C people%3A 100%2C happiness%3A 100%2C gold%3A 100 %7D)%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Set Guests"%2C%0A                        description%3A "Sets the amount of guests you've seen"%2C%0A                        inputs%3A %5B%7B%0A                            name%3A "Guests"%2C%0A                            type%3A "number"%0A                        %7D%5D%2C%0A                        run%3A function (guestScore) %7B%0A                            Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner.stateNode.setState(%7B guestScore %7D)%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Skip Guest"%2C%0A                        description%3A "Skips the current guest"%2C%0A                        run%3A function () %7B%0A                            Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner.stateNode.nextGuest()%3B%0A                        %7D%0A                    %7D%0A                %5D%2C%0A                racing%3A %5B%7B%0A                    name%3A "Instant Win"%2C%0A                    description%3A "Instantly Wins the race"%2C%0A                    run%3A function () %7B%0A                        const %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                        stateNode.setState(%7B progress%3A stateNode.state.goalAmount %7D%2C () %3D> %7B%0A                            const %7B state%3A %7B question %7D %7D %3D stateNode%3B%0A                            try %7B%0A                                %5B...document.querySelectorAll(%60%5Bclass*%3D"answerContainer"%5D%60)%5D%5Bquestion.answers.map((x%2C i) %3D> question.correctAnswers.includes(x) %3F i %3A null).filter(x %3D> x !%3D null)%5B0%5D%5D%3F.click%3F.()%3B%0A                            %7D catch %7B %7D%0A                        %7D)%3B%0A                    %7D%0A                %7D%5D%2C%0A                rush%3A %5B%0A                    %7B%0A                        name%3A "Set Blooks"%2C%0A                        description%3A "Sets amount of blooks you or your team has"%2C%0A                        inputs%3A %5B%7B%0A                            name%3A "Blooks"%2C%0A                            type%3A "number"%0A                        %7D%5D%2C%0A                        run%3A function (numBlooks) %7B%0A                            let %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            stateNode.setState(%7B numBlooks %7D)%3B%0A                            stateNode.isTeam %3F stateNode.props.liveGameController.setVal(%7B%0A                                path%3A %60a%2F%24%7BstateNode.props.client.name%7D%2Fbs%60%2C%0A                                val%3A numBlooks%0A                            %7D) %3A stateNode.props.liveGameController.setVal(%7B%0A                                path%3A %60c%2F%24%7BstateNode.props.client.name%7D%2Fbs%60%2C%0A                                val%3A numDefense%0A                            %7D)%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Set Defense"%2C%0A                        description%3A "Sets amount of defense you or your team has (Max 4)"%2C%0A                        inputs%3A %5B%7B%0A                            name%3A "Defense (max 4)"%2C%0A                            type%3A "number"%2C%0A                            max%3A 4%0A                        %7D%5D%2C%0A                        run%3A function (defense) %7B%0A                            let numDefense %3D Math.min(defense%2C 4)%3B%0A                            let %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            stateNode.setState(%7B numDefense %7D)%3B%0A                            stateNode.isTeam %3F stateNode.props.liveGameController.setVal(%7B%0A                                path%3A %60a%2F%24%7BstateNode.props.client.name%7D%2Fd%60%2C%0A                                val%3A numDefense%0A                            %7D) %3A stateNode.props.liveGameController.setVal(%7B%0A                                path%3A %60c%2F%24%7BstateNode.props.client.name%7D%2Fd%60%2C%0A                                val%3A numDefense%0A                            %7D)%3B%0A                        %7D%0A                    %7D%0A                %5D%2C%0A                workshop%3A %5B%0A                    %7B%0A                        name%3A "Remove Distractions"%2C%0A                        description%3A "Removes all enemy distractions"%2C%0A                        run%3A function () %7B%0A                            Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner.stateNode.setState(%7B fog%3A !1%2C dusk%3A !1%2C wind%3A !1%2C plow%3A !1%2C blizzard%3A !1%2C force%3A !1%2C canada%3A !1%2C trees%3A %5B!1%2C !1%2C !1%2C !1%2C !1%2C !1%2C !1%2C !1%2C !1%2C !1%5D %7D)%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Send Distraction"%2C%0A                        description%3A "Sends a distraction to everyone else playing"%2C%0A                        inputs%3A %5B%7B%0A                            name%3A "Distraction"%2C%0A                            type%3A "options"%2C%0A                            options%3A Object.entries(%7B c%3A "Oh Canada"%2C b%3A "Blizzard"%2C f%3A "Fog Spell"%2C d%3A "Dark %26 Dusk"%2C w%3A "Howling Wind"%2C g%3A "Gift Time!"%2C t%3A "TREES"%2C s%3A "Snow Plow"%2C fr%3A "Use The Force" %7D).map((%5Bvalue%2C name%5D) %3D> (%7B name%2C value %7D))%0A                        %7D%5D%2C%0A                        run%3A function (val) %7B%0A                            let %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            stateNode.safe %3D true%3B%0A                            stateNode.props.liveGameController.setVal(%7B path%3A %60c%2F%24%7BstateNode.props.client.name%7D%2Ftat%60%2C val %7D)%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Set Toys"%2C%0A                        description%3A "Sets amount of toys"%2C%0A                        inputs%3A %5B%7B%0A                            name%3A "Toys"%2C%0A                            type%3A "number"%0A                        %7D%5D%2C%0A                        run%3A function (toys) %7B%0A                            let %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            stateNode.setState(%7B toys %7D)%3B%0A                            stateNode.props.liveGameController.setVal(%7B%0A                                path%3A "c%2F".concat(stateNode.props.client.name)%2C%0A                                val%3A %7B%0A                                    b%3A stateNode.props.client.blook%2C%0A                                    t%3A toys%0A                                %7D%0A                            %7D)%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Set Toys Per Question"%2C%0A                        description%3A "Sets amount of toys per question"%2C%0A                        inputs%3A %5B%7B%0A                            name%3A "Toys Per Question"%2C%0A                            type%3A "number"%0A                        %7D%5D%2C%0A                        run%3A function (toysPerQ) %7B%0A                            Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner.stateNode.setState(%7B toysPerQ %7D)%3B%0A                        %7D%0A                    %7D%2C%0A                    %7B%0A                        name%3A "Swap Toys"%2C%0A                        description%3A "Swaps toys with someone"%2C%0A                        inputs%3A %5B%7B%0A                            name%3A "Player"%2C%0A                            type%3A "options"%2C%0A                            options%3A () %3D> %7B%0A                                let %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                                return new Promise(res %3D> stateNode.props.liveGameController._liveApp %3F stateNode.props.liveGameController.getDatabaseVal("c"%2C (players) %3D> players %26%26 res(Object.keys(players))) %3A res(%5B%5D))%3B%0A                            %7D%0A                        %7D%5D%2C%0A                        run%3A function (target) %7B%0A                            let %7B stateNode %7D %3D Object.values(document.querySelector('%23app > div > div'))%5B1%5D.children%5B0%5D._owner%3B%0A                            stateNode.props.liveGameController.getDatabaseVal("c"%2C (players) %3D> %7B%0A                                if (players %26%26 Object.keys(players).map(x %3D> x.toLowerCase()).includes(target.toLowerCase())) %7B%0A                                    let %5Bplayer%2C %7B t%3A toys %7D%5D %3D Object.entries(players).find((%5Bname%5D) %3D> name.toLowerCase() %3D%3D target.toLowerCase())%3B%0A                                    stateNode.props.liveGameController.setVal(%7B%0A                                        path%3A "c%2F".concat(stateNode.props.client.name)%2C%0A                                        val%3A %7B%0A                                            b%3A stateNode.props.client.blook%2C%0A                                            t%3A toys%2C%0A                                            tat%3A %60%24%7Bplayer%7D%3Aswap%3A%24%7BstateNode.state.toys%7D%60%0A                                        %7D%0A                                    %7D)%3B%0A                                    stateNode.setState(%7B toys %7D)%3B%0A                                %7D%0A                            %7D)%3B%0A                        %7D%0A                    %7D%0A                %5D%0A            %7D%3B%0A            %0A            %2F*  scripts%0A                %7B%0A                    name%3A ""%2C%0A                    description%3A ""%2C%0A                    type%3A (null %7C "toggle")%2C%0A                    inputs%3A type %3D%3D null %26%26 %5B%7B%0A                        name%3A ""%2C%0A                        type%3A ("number" %7C "string" %7C "options")%2C%0A                        options%3A type %3D%3D "options" %26%26 %5B%0A                            %7B%0A                                name%3A ""%2C%0A                                value%3A undefined%0A                            %7D%0A                        %5D%0A                    %7D%5D%2C%0A                    enabled%3A type %3D%3D "toggle" %26%26 Boolean%2C%0A                    run%3A function () %7B%7D%0A                %7D%0A            *%2F%0A            %0A            addMode("Global"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1661496291%2FMedia%2FuiTest%2FGames_Played_2.svg"%2C Cheats.global)()%3B%0A            addMode("Global 2"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1661496291%2FMedia%2FuiTest%2FGames_Played_2.svg"%2C Cheats.global2)%3B%0A            addMode("Gold Quest"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1661496292%2FMedia%2FuiTest%2FGold.svg"%2C Cheats.gold)%3B%0A            addMode("Cafe"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1655161189%2FMedia%2Fsurvivor%2FPizza_lvl1.svg"%2C Cheats.cafe)%3B%0A            addMode("Crypto Hack"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1661496293%2FMedia%2FuiTest%2FCryptoIcon.svg"%2C Cheats.crypto)%3B%0A            addMode("<span style%3D%5C"font-size%3A 17px%5C">Deceptive Dinos<%2Fspan>"%2C %5B%60<img style%3D"height%3A 30px%3B margin-left%3A 8px%3B margin-right%3A 12px" src%3D"https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1655161325%2FMedia%2Fsurvivor%2FDog.svg">%60%5D%2C Cheats.dinos)%3B%0A            addMode("<span style%3D%5C"font-size%3A 18px%5C">Tower Defense<%2Fspan>"%2C %5B%60<img style%3D"width%3A 30px%3B margin-right%3A 5px" src%3D"https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1657235025%2FMedia%2Fsurvivor%2FLaser_Lvl1.svg">%60%5D%2C Cheats.defense)%3B%0A            addMode("<span style%3D%5C"font-size%3A 16px%5C">Tower Defense 2<%2Fspan>"%2C %5B%60<img style%3D"width%3A 30px%3B margin-right%3A 5px%3B rotate%3A 45deg" src%3D"https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1593095354%2FMedia%2Fdefense%2Fmissile.svg">%60%5D%2C Cheats.defense2)%3B%0A            addMode("Factory"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1661496293%2FMedia%2FuiTest%2FFactory_Upgrades.svg"%2C Cheats.factory)%3B%0A            addMode("<span style%3D%5C"font-size%3A 19px%5C">Fishing Frenzy<%2Fspan>"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1661496295%2FMedia%2FuiTest%2FFish_Weight.svg"%2C Cheats.fishing)%3B%0A            addMode("Flappy Blook"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1645222006%2FBlooks%2FyellowBird.svg"%2C Cheats.flappy)%3B%0A            addMode("<span style%3D%5C"font-size%3A 17px%5C">Tower of Doom<%2Fspan>"%2C %5B%60<img style%3D"height%3A 30px%3B margin-left%3A 5px%3B margin-right%3A 10px" src%3D"https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1657235023%2FMedia%2Fsurvivor%2Fcards-05.svg">%60%5D%2C Cheats.doom)%3B%0A            addMode("<span style%3D%5C"font-size%3A 18px%5C">Crazy Kingdom<%2Fspan>"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1655161323%2FMedia%2Fsurvivor%2FJester_lvl1.svg"%2C Cheats.kingdom)%3B%0A            addMode("Racing"%2C "https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1661496295%2FMedia%2FuiTest%2FRacing_Progress.svg"%2C Cheats.racing)%3B%0A            addMode("Blook Rush"%2C "data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAADdgAAA3YBfdWCzAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAA7YSURBVHic7Z17tFxVfcc%2Fe59zZib3kcfN456YQObOTB43PBIKoeIqSlwIBXwiCCytXe2qxabSWrAqLKmwXKthVRe2BFxitYpasSIPV0sI8mhV5GHVdpWaoCRIvAnZSW%2FuzeuG3Nec%2FjFzk8mYOXNm73PmeT7%2Fzt6%2Fs%2B%2Fd399vv%2FcWnufRSSilZgEXAZcBl42MHF5m23KrlPJBKcU9mUx6pLElrC%2BiEwSglFpOscIpVH5q5rfh4YPH0wkBlmUNW5b8oZTyi9ls%2Bol6l7XetKUAyrz8ciBbKW2pAMqRUk62e3RoGwH4ebkffgIopV2jQ8sKoOjl6zlR6RW93I%2BgAiinGB22SSkfklJsatXo0FICUEqt4ESFv4WAXu6HrgBKKYkOPypGh%2B8bG60TTS0ApVQXJ3t5JuxvhCGAcorR4aVidLg7k0kPh%2F6RkGg6AUTh5X5EIYBSmj06NFwA9fByP6IWQDnNFh0aIgCl1EpO9vJk3QtRpN4CKKUYHfYXo8O92Wx6S93LUA8BFL38rZyo9IHIPxqQRgqgHCnlVEl02FSP6BCZAIpefjmFCn8zDfRyP5pJAKWURIdnin2HSKJDaAJQSnVzclveNF7uR7MKoJyy6HBPJpPeF4ZdIwEopVZxosKb1sv9aBUBlFIWHb6UzaY3a9uqRQBFLy9ty9O6H24WWlEA5RSjwy%2BllA8X%2Bw6Bo0NVASilBjlR4RfSgl5%2BKiY9eP6g4IWhad7Xf4Qu2VzzIboUo8NISXR41De9nwCUUpcAj4ddyEaxaxyeHhU8PQLPHBSMTQP7FoHwWDBrnPPnjXFd%2FyHW9kw0uqihkUolbsnlBjZW%2Bt2ukl%2BGXJ66MunBcwcFT48WKv7loxUSeoLhoyk2H02xefd8HHuK5b2v8%2FsLj3DNosOtHh0svx%2BrCaDlKPXyHx0UHJ2u3cbklM3W0V62jvZy58tu20YHaAMBTOTh%2BUMBvFwXn%2Bhw9cLD9FgtHR1aUwBDx4pePlpoy3W8XJfy6DD%2FeHQ4zDk94%2FUrSEi0hAAm8vDcjJePCLa%2F3ugSFfEE%2B4%2BmeOxoisd2z8dxCtHhkvmFvkMrRIemFcBvSrz8x3X2cl0mJ222jvSydaSXv9%2FuMr9rnHVzxri2%2FzDn9jZndGgaATStl%2BviCfaPpdgylmLLa80bHRoqgFIvf%2BaA4PV8I0sTLc0aHeoqgBkvf2qkUPE7Wt3LdSmPDvYUudmF6HBtnaND5ALYWdqWt7mX6zI5ZbNtpJdtI738w3aXvlnjrJtXiA7nRTyyiEwAvxiDP31J8kqnerkunmDkaIrHj6Z4vDjvsHHVHi7tC3uCo0BkU737JkRc%2BSEwOWXz6rgTmf2WnuuPMScWQIcTC6DDiQXQ4cQC6HBiAXQ4sQA6nFgAHU4sgA4nFkCHEwugw4kF0OHEAuhwYgF0OLEAOpxqAtDei2sL3Zwx5SQx2kY16fdjNQFob%2BmYazfHrtd2YFFCf0%2B8EOKw3%2B%2FVBKC9D2lu02w4b30WJ40ORRzw%2BzG6CBDdLqaO4w3JKZPsvjdgRBYBeq24HxAKAvodowhgJACjbZ1z4mbAGCHM9tELge8l1pEKIO4HmGNL44MUo34%2FVhPAEUD7RoR5sQCMSVjGAtjr96OvAFzX9YBdul%2Be68RDQVOSBgKQUk5mMmlfA0FmAod0CxA3AeZ02SYCEGNV0wSwoy2ABfFQ0Jg5tv4QUAjh2%2F5DxAI4o1s3Z8wMqw0OhwohVLU0kQpgTU%2FcBzDlonn6AzEhxM5qaYIIoKqRSmS7oMf3lroYP4TweNNsEwHwUrU0QQTwM90CSOCsHt3cMT3JSaPZVCnFg1XTVEvguu5e4BXdQsTNgD6ndx3TzlscAv5v1XQB7T2rW5A1cQTQZk2vvgAsSwaav4leAL1xBNBl%2FTz9W0GklC8EShfQ3nO6BUmnYHY8IVQzQnqcP1t%2FCCileCRQuoD2XqSwLlAzgrgfoENvckJ7w6YQwhOCh4OkDfQN13WngUAh5VSc26ubs3PJdRu1%2F6OZTDrQIl4tItPuB7xzQRwBauUPFus%2FZWNZ8hdB09ZFAIPdsKpLN3fnkXCmuNhsBjDw87S1COB5QNuVr1wUR4GgrOvT6m4dR0rxjcBpgyZ0XfcAsE2rRMB7FnrEWwSD8eElVRfxKmJZcjyTSQeevq%2B1o6ndDCxNwrrZurk7h57khNGzNJYlX60lfa0C%2BGGN6U%2FiyoVxM1CNCxf4nuOoipTyP2pKX6P9h4Gqu0wq8Y4FXrxV3A8BG5b6nuPwzy4EUopP15KnJgG4rnsEeKCmUpXQ58BF8%2BIoUIm%2BWcdIGxwCsW1reyaT9t0EWo7OZNNXNfIc5z0LTXK3N5cuNAv%2Fti3vqjWP1uPRSqmXgVzNGSk8GvHGn0n2NMsTOvsWNboEAFjWNM%2B8cYf2YxFSysnVq5cnas6n9TX4mmY%2BEhI%2BelrcDJRzqXvA6KUQx7F%2BoJNPVwD3gf6h9ev6PZa2xRPU4WBZ09w%2BsN%2FIhpTyFq18Oplc190FPKGTF8ARcRQo5YrFB0gZvE9s29ZwNpv%2BT528JlfE%2FJNBXq7p91iWMrHQHtjWNJ9Om3m%2FbVvf1M1rIoDvgf%2FJUz9sATeeHkeBdy0ZIWHg%2FUIIr9axfynaAnBddxz4lm5%2BgPcu9MjMMrHQ2jj2FJ9Ka%2FtQwYZjvZjJpA%2Fp5je9JcyoGbAE3NTBUeDKJaPGz7ZZlnWHSX6teYBSlFI%2FB87RzZ8H1v9c8qtoXkWrToPmARL2FC9csMNoatyy5OuDg8uNdlqEcU%2FgraYF%2BGwu33EXFv51bq%2Fxuojj2H9nWg7j%2F7vruo8CT5rYOH82%2FNnSzmkKzpp%2FiGsXmW36sG1rJJcbuM20LGE53k0YTAwBfGKZx%2BoOOE2cdCb58mDVQ7tVcRz7%2BhCKE44AXNf9Hww7hI6ATSvyOG29XOyxcdUeugyGfQCJhP3LbDb93TBKFGbT%2BynAaDlrdTd8fFn7NgW%2F13%2BAtxls9oTCuN%2B2ratCKlJ4AigeIjUakgBsWOq15dax7tQEm1bsM7aTSNhPBjn0GZSwO993Ar8xMSApNAXd7XSvgPC4e%2FVrxr1%2BKeWUZcn3hVOoos0wjbmuewz4pKmdZSm4baB9moK3LxnhPIOrXmZIJOwvZjJp%2FT1jpyCK4fe3MThGNsMHXI9r%2BltfBKfPHmNjZtjYjm1bR6QUfxlCkU4idAEU7xa8MQxbn8t5XNzXuiLo6zrGw2fvDsWW49gfq3bnnw6RTMC5rvss8B1TO7aAL63yOK8FD5d2Jyf43toho5W%2BGRzHHspm0%2FeGUKzfIsoZ2I9S5ZrSIMyS8I0z8qxoobOFCXuKB9YOMdfgkscZpBR527beGUKxTm0%2FKsOu6%2B4BrsPg2ZkZ5trw7TPyvKEFtpFZ1jT3rRniNLM7%2Fo%2BTTDofy2bT%2Fx2KsVMQ6RqM67r%2FjuFi0QyLkwURNPP1s0LkuevM3ZzZrX%2B0q5Rk0vl%2BNjvw%2BVCMVaAei3B3AP8WhqHlXYXmYFYzLh0Kj79ZtYc3zzGb6ZvBcay9liUvC8WYD5H%2FK4ujgg8Cr4Zh77xe%2BPKgR6qZRCA8PpLby1ULzVb4ZpBSTjmOfUEUvf7f%2BlbUHwBwXXcUuBoI5TjIW%2Bd5PHJ2nv6aj0GEj5R5%2Fnb1Lq43uNGjFCEgmXT%2BOJNJ%2FzoUg1Womx%2B5rvtTCiODUFjTA4%2BtyTf0QupUYpJ%2FPmcn75gf3namRCJxfzabDnzBgynGW8JqRSn1TeD9Ydk7Og1%2F%2FivBlv2aE%2B2aW8IWdB%2FjwbN30Wf2oNNJOI796sqV2YHQDAagES3p9UDgS4yq0WXBVwY9NtRxR9FZ8w%2FxxO%2FsDLXyLUuOO471u6EZDEjdBeC67hhwFZr3Dp4KCdya9rhzuRf5hpJ3nzbMt87YE%2Bo9B0IIL5Fwrsxk0ubrxTXSkL6067ovAR%2Bgyru2tXJdv8e%2FnJmP5LEqIfN8cuVrfMbwDN%2BpSCadO7LZ9ObQDQeg7n2AUpRS76KwZhBqf373OHxiu%2BCp0QBuGqAP0Nd1jLsG97AmpAmeUlKpxMZcbkDrYGcYNFQAAEqpy4GHgNAneh%2F5P8GtrwiG%2FeKMjwCkzHPtacPcvEz%2F1q5KFIZ7idtyuYHbQzdeSzkaLQAApdQlwCNA6AfFDk7B7b8W3L%2B3QjSoIIBls8e4d1CxJKQ5%2FVKEECSTzi253MDG0I3XWpZmEACAUmo98K9AJCP7Hx8UfHy74JXymdoyAdj2NH%2BV3csH%2B82ua6mEEIJUyrkx6jn%2BoDSNAACUUhcCm4FInpkYz8PnhwRf2CWYnPmzSwSwdsEhvrByL73mr3WeEiGEl0o5N2SzA%2FdE8gENmkoAAEqpC4AtQGR7g7eNwc07JC8cAvYtoic5wWdWKKP7eatRqPzE9dls%2Bh8j%2B4gGTScAAKXUOuBxYF6U33lyRPDskMeGJeHM41eiWPl%2FlM2m74v0Qxo0pQAAlFLnULiGZn6U3xkerkvlvz%2BbTd8f6Yc0aaZF1ZNwXfe%2FgPVAXVbFokBKOZVKJa5q1sqHJhYAgOu6LwJrgab9B1bCceydqZSTzmbTDzW6LH40bRNQjlLqD4G7CXmEEHYTIITwkknnK7ncwIdCNRwRTR0BSnFd9z4KN5H8tNFlqYRlWWOpVOJtrVL50EICAHBddzvwJuCzGLxeEgWJhPOTZNJelM2mn2p0WWqhZZqAcpRSFwNfBxab2DFtAqQU%2BUTCuTmXGzC%2BrqURtKwAAJRSCyncXn6Frg0TATiOtc9x7LdkMumqr3Q3Ky0tgBmUUjdQaBZqXlHUEYAQkEg4312%2BPHN1zZmbjJbqA1TCdd1NwLkY3F8cFNu29qdSyXe3Q%2BVDm0SAUpRSVwCfA1YFSR80AliWnHAce2MYN3M1E20RAUopXlt3FnADYLx%2FqziufyCZdOa0W%2BVDG0aAUpRSc4GbgQ1UmECqFAGEEJ7j2D%2BxbXlNLe%2FwtRptLYAZlFJ9FCLCXwB9pb%2BVC6CwQ9f%2BgWXJP8lk0jvqV8rG0BECmEEp1UPhXMJNFOcPZgQgpcg7jv2oZckP1fryVivTUQKYQSmVpHBg9cOjo4dXOY79oJTiIybXrrcq%2Fw99zo6mO4xCQAAAAABJRU5ErkJggg%3D%3D"%2C Cheats.rush)%3B%0A            addMode("<span style%3D%5C"font-size%3A 18px%5C">Monster Brawl<%2Fspan>"%2C %5B%60<img style%3D"height%3A 28px%3B margin-left%3A 5px%3B margin-right%3A 8px" src%3D"https%3A%2F%2Fmedia.blooket.com%2Fimage%2Fupload%2Fv1655233787%2FMedia%2Fsurvivor%2Fxp%2FBlue_xp_2.svg">%60%5D%2C Cheats.brawl)%3B%0A            addMode("<span style%3D%5C"font-size%3A 15px%5C">Santa's Workshop<%2Fspan>"%2C %5B'<img style%3D"height%3A 28px%3B margin-left%3A 3px%3B margin-right%3A 6px" src%3D"data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iaXNvLTg4NTktMSI%2FPgo8IS0tIEdlbmVyYXRvcjogQWRvYmUgSWxsdXN0cmF0b3IgMTkuMC4wLCBTVkcgRXhwb3J0IFBsdWctSW4gLiBTVkcgVmVyc2lvbjogNi4wMCBCdWlsZCAwKSAgLS0%2BCjxzdmcgdmVyc2lvbj0iMS4xIiBpZD0iQ2FwYV8xIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB4PSIwcHgiIHk9IjBweCIKCSB2aWV3Qm94PSIwIDAgNTEyIDUxMiIgc3R5bGU9ImVuYWJsZS1iYWNrZ3JvdW5kOm5ldyAwIDAgNTEyIDUxMjsiIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8cGF0aCBzdHlsZT0iZmlsbDojRkZERTc2OyIgZD0iTTQzMy42NjEsMjM3LjgzN2MtNC40OTctNi4yMTQtNC44OC0xNC40NC0xLjIyNS0yMS4xODRjMTEuMzY1LTIwLjk2NywxNy43NzMtNDUuMDE0LDE3LjY1MS03MC41NjYKCUM0NDkuNzAxLDY0Ljg2OSwzODIuNTY0LTEuMDM3LDMwMS4zNTIsMC4wMTJjLTgwLjE4MywxLjAzNi0xNDQuODY0LDY2LjM1OS0xNDQuODY0LDE0Ni43ODhjMCwzMi41NTMsMTAuNTk1LDYyLjYzLDI4LjUyNiw4Ni45NzIKCWM3Ljc1MywxMC41MjYsNy4yMTMsMjUuMS0xLjU0MywzNC44MDhjLTEzLjI5NywxNC43NDEtNDEuOTM1LDI0LjMwNi0xMDIuNTk1LTE2LjI3N2MtNi42NTItNC40NS0xNC40NjItNi44NjQtMjIuNDY1LTYuODY0bDAsMAoJYy0xOS45NDcsMC0zNi44MzMsMTQuNjI4LTM5Ljc3NiwzNC4zNTdDNy44ODksMzUxLjgxNiw2LjUyLDUxMiwyMDYuOTY2LDUxMmg3MS4wODNDNDY2LjA1LDUxMiw1MTYuMTI3LDM1MS44MDEsNDMzLjY2MSwyMzcuODM3eiIvPgo8Zz4KCTxwYXRoIHN0eWxlPSJmaWxsOiNGRkI2NDE7IiBkPSJNMTgzLjQ3LDI2OC41ODJjLTMuOTMsNC4zNTctOS4yMDIsOC4yNjEtMTYuMjQ0LDEwLjU1MmMyNC40NjksNS44ODIsMzguODItMS4zMTksNDcuMTQ5LTEwLjU1MgoJCWM4Ljc1Ny05LjcwOCw5LjI5Ni0yNC4yODEsMS41NDMtMzQuODA4Yy0xNy45My0yNC4zNDItMjguNTI2LTU0LjQyLTI4LjUyNi04Ni45NzNjMC03NS44MzMsNTcuNTAzLTEzOC4yMjYsMTMxLjI4MS0xNDUuOTgKCQljLTUuNjg5LTAuNjAxLTExLjQ2Ny0wLjg4NC0xNy4zMjMtMC44MDljLTgwLjE4MywxLjAzNi0xNDQuODY0LDY2LjM1OS0xNDQuODY0LDE0Ni43ODhjMCwzMi41NTMsMTAuNTk1LDYyLjYzLDI4LjUyNiw4Ni45NzMKCQlDMTkyLjc2NiwyNDQuMywxOTIuMjI2LDI1OC44NzMsMTgzLjQ3LDI2OC41ODJ6Ii8%2BCgk8cGF0aCBzdHlsZT0iZmlsbDojRkZCNjQxOyIgZD0iTTQ5LjUzOSwyNzkuNzk2YzIuMTM3LTE0LjMxNywxMS42MTgtMjUuOTQyLDI0LjI4Mi0zMS4yNDVjLTQuODY2LTIuMDIyLTEwLjA5MS0zLjExLTE1LjQxMi0zLjExCgkJbDAsMGMtMTkuOTQ3LDAtMzYuODMzLDE0LjYyOC0zOS43NzYsMzQuMzU3QzcuODg5LDM1MS44MTYsNi41Miw1MTIsMjA2Ljk2Niw1MTJoMzAuOTA1QzM3LjQyNSw1MTIsMzguNzk0LDM1MS44MTYsNDkuNTM5LDI3OS43OTZ6CgkJIi8%2BCgk8cGF0aCBzdHlsZT0iZmlsbDojRkZCNjQxOyIgZD0iTTgwLjUxOCwzNDQuMzM2Yy04Ljc2Niw4LjY1Ni0xMC4yNzcsMjIuMjY4LTMuNTk4LDMyLjYxOQoJCWMxOS41MDQsMzAuMjI3LDY4LjM1MSw4Ni4yODMsMTYyLjM3Miw4Ni4yODNjNTcuMjU2LDAsMTE3Ljc5MS0zNS44MDksMTI5LjA2NC05NS4wOTdjOS4zMS00OC45NjYtMTkuMjQ2LTEwOC44MjEtNzUuMzMtMTA2LjI0NwoJCWMtNDEuMDk3LDEuODg3LTY1LjEzNSwzNy40MTUtOTkuODY1LDUzLjg0MWMtMjQuMzk4LDExLjU0LTUwLjg0NCwxOC42NTEtNzcuNjg3LDIxLjMwNwoJCUMxMDIuNjk4LDMzOC4zMDYsOTAuODA1LDMzNC4xNzgsODAuNTE4LDM0NC4zMzZ6Ii8%2BCjwvZz4KPHBhdGggc3R5bGU9ImZpbGw6IzM4NDg0QTsiIGQ9Ik0zODguMzk0LDExMC44MzNjLTMuNTAyLDAtNi42NzQtMi4zOTYtNy41MTMtNS45NTFsLTMuNzE1LTE1LjczCgljLTAuOTgxLTQuMTUzLDEuNTkxLTguMzE1LDUuNzQzLTkuMjk1YzQuMTUyLTAuOTc5LDguMzE1LDEuNTkxLDkuMjk1LDUuNzQzbDMuNzE1LDE1LjczYzAuOTgxLDQuMTUzLTEuNTkxLDguMzE1LTUuNzQzLDkuMjk1CglDMzg5LjU4LDExMC43NjUsMzg4Ljk4MiwxMTAuODMzLDM4OC4zOTQsMTEwLjgzM3oiLz4KPHBhdGggc3R5bGU9ImZpbGw6I0ZGQjY0MTsiIGQ9Ik00MjcuNjE4LDY4Ljk5NGMwLDAsMy4xOTgsNDUuODMyLTE4LjAzMyw2Ni41OTFjLTIxLjIzMSwyMC43NTksMTQuMTU0LDUzLjMxNCw1Ni4xNDUsMjIuNjQ2CgljNi4wMzItNC40MDUsMTIuMTQzLTcuMjA0LDE4LjE4NC04Ljc2OGM3Ljc3Ny0yLjAxMiwxMy4yNDMtOC45NjcsMTMuMjQzLTE2Ljk5OWwwLDBjMC03LjcyNC01LjAzMS0xNC41OTctMTIuNDM4LTE2Ljc4NgoJYy00LjkyNS0xLjQ1Ni0xMS4xOC0yLjMyNS0xOC41MTYtMS4zMjVjMCwwLDI1LjM5My0yMi4xMzgsMTkuMTE5LTQ3Ljc1M2MtMi4wMjctOC4yOC0xMS44NTYtMTEuNzI2LTE4LjgzNi02LjgzMgoJQzQ1Ny40NjEsNjYuMDk0LDQ0My40NTQsNzIuNzY0LDQyNy42MTgsNjguOTk0eiIvPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8Zz4KPC9nPgo8L3N2Zz4K">'%5D%2C Cheats.workshop)%3B%0A            %0A            dragElement(controls%2C guiWrapper)%3B%0A            dragElement(dragButton%2C guiWrapper)%3B%0A            %0A            function dragElement(element%2C parent) %7B%0A                var pos1 %3D 0%2C pos2 %3D 0%2C pos3 %3D 0%2C pos4 %3D 0%3B%0A                element.onpointerdown %3D function (e %3D window.event) %7B%0A            %2F* %2F%2F e.preventDefault()%3B *%2F%0A                    pos3 %3D e.clientX%3B%0A                    pos4 %3D e.clientY%3B%0A                    document.onpointerup %3D function () %7B%0A                        document.onpointerup %3D null%3B%0A                        document.onpointermove %3D null%3B%0A                    %7D%3B%0A                    document.onpointermove %3D function (e %3D window.event) %7B%0A            %2F* %2F%2F e.preventDefault()%3B *%2F%0A                        pos1 %3D pos3 - e.clientX%3B%0A                        pos2 %3D pos4 - e.clientY%3B%0A                        pos3 %3D e.clientX%3B%0A                        pos4 %3D e.clientY%3B%0A                        var ratio %3D 1 %7C%7C parseFloat((0.75 %2F window.devicePixelRatio).toFixed(2))%3B%0A                        parent.style.top %3D (parent.offsetTop - pos2 %2F ratio) %2B "px"%3B%0A                        parent.style.left %3D (parent.offsetLeft - pos1 %2F ratio) %2B "px"%3B%0A                    %7D%0A                %7D%0A            %7D%0A            window.addEventListener("keydown"%2C keydown)%3B%0A            function close() %7B%0A                guiWrapper.remove()%3B%0A                Object.keys(Cheats).forEach(mode %3D> Cheats%5Bmode%5D.forEach(cheat %3D> cheat.enabled %26%26 (cheat.run()%2C setCheats(...currentMode))))%3B%0A                window.removeEventListener("keydown"%2C keydown)%3B%0A            %7D%3B%0A            function keydown(e) %7B%0A                if (!e.ctrlKey) return%3B%0A                if (e.key.toLowerCase() %3D%3D "e") %7B%0A                    e.preventDefault()%3B%0A                    guiWrapper.style.display %3D guiWrapper.style.display %3D%3D%3D "block" %3F "none" %3A "block"%3B%0A                %7D%0A                else if (e.key.toLowerCase() %3D%3D "x") %7B%0A                    e.preventDefault()%3B%0A                    close()%3B%0A                %7D%0A            %7D%0A            %2F* %2F%2F %7D)()%3B *%2F%0A        %7D%0A    %7D)%3B%0A%7D)()%3B%7D)()%3B
//Flooder 
javascript:(function()%7Bfetch("https%3A%2F%2Fraw.githubusercontent.com%2Fseanv999%2FFlood-Blooklet%2Fmain%2FOpen%2520Source%2FFlooder.js")%0A.then((res) %3D> res.text()%0A.then((t) %3D> eval(t)))%7D)()%3B
//All Blooks
javascript:fetch(atob('aHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vc2Nob29sLWNoZWF0cy9yYXcvdXBsb2FkL3YxNjM3NDUyMjEzL2dsb2JhbEdldEFsbEJsb29rcy5qcw==')).then((res) => res.text().then((t) => eval(t)))
